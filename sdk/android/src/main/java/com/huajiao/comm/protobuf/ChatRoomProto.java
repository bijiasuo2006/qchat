// Generated by the protocol buffer compiler.  DO NOT EDIT!

package com.huajiao.comm.protobuf;

public final class ChatRoomProto {
  private ChatRoomProto() {}
  @SuppressWarnings("hiding")
  public static final class CRPair extends
      com.google.protobuf.micro.MessageMicro {
    public CRPair() {}

    // required string key = 1;
    public static final int KEY_FIELD_NUMBER = 1;
    private boolean hasKey;
    private java.lang.String key_ = "";
    public java.lang.String getKey() { return key_; }
    public boolean hasKey() { return hasKey; }
    public CRPair setKey(java.lang.String value) {
      hasKey = true;
      key_ = value;
      return this;
    }
    public CRPair clearKey() {
      hasKey = false;
      key_ = "";
      return this;
    }

    // optional bytes value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private boolean hasValue;
    private com.google.protobuf.micro.ByteStringMicro value_ = com.google.protobuf.micro.ByteStringMicro.EMPTY;
    public com.google.protobuf.micro.ByteStringMicro getValue() { return value_; }
    public boolean hasValue() { return hasValue; }
    public CRPair setValue(com.google.protobuf.micro.ByteStringMicro value) {
      hasValue = true;
      value_ = value;
      return this;
    }
    public CRPair clearValue() {
      hasValue = false;
      value_ = com.google.protobuf.micro.ByteStringMicro.EMPTY;
      return this;
    }

    public final CRPair clear() {
      clearKey();
      clearValue();
      cachedSize = -1;
      return this;
    }

    public final boolean isInitialized() {
      if (!hasKey) return false;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.micro.CodedOutputStreamMicro output)
                        throws java.io.IOException {
      if (hasKey()) {
        output.writeString(1, getKey());
      }
      if (hasValue()) {
        output.writeBytes(2, getValue());
      }
    }

    private int cachedSize = -1;
    @Override
    public int getCachedSize() {
      if (cachedSize < 0) {
        // getSerializedSize sets cachedSize
        getSerializedSize();
      }
      return cachedSize;
    }

    @Override
    public int getSerializedSize() {
      int size = 0;
      if (hasKey()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(1, getKey());
      }
      if (hasValue()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeBytesSize(2, getValue());
      }
      cachedSize = size;
      return size;
    }

    @Override
    public CRPair mergeFrom(
        com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            setKey(input.readString());
            break;
          }
          case 18: {
            setValue(input.readBytes());
            break;
          }
        }
      }
    }

    public static CRPair parseFrom(byte[] data)
        throws com.google.protobuf.micro.InvalidProtocolBufferMicroException {
      return (CRPair) (new CRPair().mergeFrom(data));
    }

    public static CRPair parseFrom(
            com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      return new CRPair().mergeFrom(input);
    }

  }

  @SuppressWarnings("hiding")
  public static final class CRUser extends
      com.google.protobuf.micro.MessageMicro {
    public CRUser() {}

    // optional bytes userid = 1;
    public static final int USERID_FIELD_NUMBER = 1;
    private boolean hasUserid;
    private com.google.protobuf.micro.ByteStringMicro userid_ = com.google.protobuf.micro.ByteStringMicro.EMPTY;
    public com.google.protobuf.micro.ByteStringMicro getUserid() { return userid_; }
    public boolean hasUserid() { return hasUserid; }
    public CRUser setUserid(com.google.protobuf.micro.ByteStringMicro value) {
      hasUserid = true;
      userid_ = value;
      return this;
    }
    public CRUser clearUserid() {
      hasUserid = false;
      userid_ = com.google.protobuf.micro.ByteStringMicro.EMPTY;
      return this;
    }

    // optional string name = 2;
    public static final int NAME_FIELD_NUMBER = 2;
    private boolean hasName;
    private java.lang.String name_ = "";
    public java.lang.String getName() { return name_; }
    public boolean hasName() { return hasName; }
    public CRUser setName(java.lang.String value) {
      hasName = true;
      name_ = value;
      return this;
    }
    public CRUser clearName() {
      hasName = false;
      name_ = "";
      return this;
    }

    // repeated .pb.CRPair publicsetting = 3;
    public static final int PUBLICSETTING_FIELD_NUMBER = 3;
    private java.util.List<com.huajiao.comm.protobuf.ChatRoomProto.CRPair> publicsetting_ =
      java.util.Collections.emptyList();
    public java.util.List<com.huajiao.comm.protobuf.ChatRoomProto.CRPair> getPublicsettingList() {
      return publicsetting_;
    }
    public int getPublicsettingCount() { return publicsetting_.size(); }
    public com.huajiao.comm.protobuf.ChatRoomProto.CRPair getPublicsetting(int index) {
      return publicsetting_.get(index);
    }
    public CRUser setPublicsetting(int index, com.huajiao.comm.protobuf.ChatRoomProto.CRPair value) {
      if (value == null) {
        throw new NullPointerException();
      }
      publicsetting_.set(index, value);
      return this;
    }
    public CRUser addPublicsetting(com.huajiao.comm.protobuf.ChatRoomProto.CRPair value) {
      if (value == null) {
        throw new NullPointerException();
      }
      if (publicsetting_.isEmpty()) {
        publicsetting_ = new java.util.ArrayList<com.huajiao.comm.protobuf.ChatRoomProto.CRPair>();
      }
      publicsetting_.add(value);
      return this;
    }
    public CRUser clearPublicsetting() {
      publicsetting_ = java.util.Collections.emptyList();
      return this;
    }

    // repeated .pb.CRPair privatesetting = 4;
    public static final int PRIVATESETTING_FIELD_NUMBER = 4;
    private java.util.List<com.huajiao.comm.protobuf.ChatRoomProto.CRPair> privatesetting_ =
      java.util.Collections.emptyList();
    public java.util.List<com.huajiao.comm.protobuf.ChatRoomProto.CRPair> getPrivatesettingList() {
      return privatesetting_;
    }
    public int getPrivatesettingCount() { return privatesetting_.size(); }
    public com.huajiao.comm.protobuf.ChatRoomProto.CRPair getPrivatesetting(int index) {
      return privatesetting_.get(index);
    }
    public CRUser setPrivatesetting(int index, com.huajiao.comm.protobuf.ChatRoomProto.CRPair value) {
      if (value == null) {
        throw new NullPointerException();
      }
      privatesetting_.set(index, value);
      return this;
    }
    public CRUser addPrivatesetting(com.huajiao.comm.protobuf.ChatRoomProto.CRPair value) {
      if (value == null) {
        throw new NullPointerException();
      }
      if (privatesetting_.isEmpty()) {
        privatesetting_ = new java.util.ArrayList<com.huajiao.comm.protobuf.ChatRoomProto.CRPair>();
      }
      privatesetting_.add(value);
      return this;
    }
    public CRUser clearPrivatesetting() {
      privatesetting_ = java.util.Collections.emptyList();
      return this;
    }

    // optional int32 status = 5;
    public static final int STATUS_FIELD_NUMBER = 5;
    private boolean hasStatus;
    private int status_ = 0;
    public int getStatus() { return status_; }
    public boolean hasStatus() { return hasStatus; }
    public CRUser setStatus(int value) {
      hasStatus = true;
      status_ = value;
      return this;
    }
    public CRUser clearStatus() {
      hasStatus = false;
      status_ = 0;
      return this;
    }

    // optional bytes userdata = 6;
    public static final int USERDATA_FIELD_NUMBER = 6;
    private boolean hasUserdata;
    private com.google.protobuf.micro.ByteStringMicro userdata_ = com.google.protobuf.micro.ByteStringMicro.EMPTY;
    public com.google.protobuf.micro.ByteStringMicro getUserdata() { return userdata_; }
    public boolean hasUserdata() { return hasUserdata; }
    public CRUser setUserdata(com.google.protobuf.micro.ByteStringMicro value) {
      hasUserdata = true;
      userdata_ = value;
      return this;
    }
    public CRUser clearUserdata() {
      hasUserdata = false;
      userdata_ = com.google.protobuf.micro.ByteStringMicro.EMPTY;
      return this;
    }

    public final CRUser clear() {
      clearUserid();
      clearName();
      clearPublicsetting();
      clearPrivatesetting();
      clearStatus();
      clearUserdata();
      cachedSize = -1;
      return this;
    }

    public final boolean isInitialized() {
      for (com.huajiao.comm.protobuf.ChatRoomProto.CRPair element : getPublicsettingList()) {
        if (!element.isInitialized()) return false;
      }
      for (com.huajiao.comm.protobuf.ChatRoomProto.CRPair element : getPrivatesettingList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.micro.CodedOutputStreamMicro output)
                        throws java.io.IOException {
      if (hasUserid()) {
        output.writeBytes(1, getUserid());
      }
      if (hasName()) {
        output.writeString(2, getName());
      }
      for (com.huajiao.comm.protobuf.ChatRoomProto.CRPair element : getPublicsettingList()) {
        output.writeMessage(3, element);
      }
      for (com.huajiao.comm.protobuf.ChatRoomProto.CRPair element : getPrivatesettingList()) {
        output.writeMessage(4, element);
      }
      if (hasStatus()) {
        output.writeInt32(5, getStatus());
      }
      if (hasUserdata()) {
        output.writeBytes(6, getUserdata());
      }
    }

    private int cachedSize = -1;
    @Override
    public int getCachedSize() {
      if (cachedSize < 0) {
        // getSerializedSize sets cachedSize
        getSerializedSize();
      }
      return cachedSize;
    }

    @Override
    public int getSerializedSize() {
      int size = 0;
      if (hasUserid()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeBytesSize(1, getUserid());
      }
      if (hasName()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(2, getName());
      }
      for (com.huajiao.comm.protobuf.ChatRoomProto.CRPair element : getPublicsettingList()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeMessageSize(3, element);
      }
      for (com.huajiao.comm.protobuf.ChatRoomProto.CRPair element : getPrivatesettingList()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeMessageSize(4, element);
      }
      if (hasStatus()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeInt32Size(5, getStatus());
      }
      if (hasUserdata()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeBytesSize(6, getUserdata());
      }
      cachedSize = size;
      return size;
    }

    @Override
    public CRUser mergeFrom(
        com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            setUserid(input.readBytes());
            break;
          }
          case 18: {
            setName(input.readString());
            break;
          }
          case 26: {
            com.huajiao.comm.protobuf.ChatRoomProto.CRPair value = new com.huajiao.comm.protobuf.ChatRoomProto.CRPair();
            input.readMessage(value);
            addPublicsetting(value);
            break;
          }
          case 34: {
            com.huajiao.comm.protobuf.ChatRoomProto.CRPair value = new com.huajiao.comm.protobuf.ChatRoomProto.CRPair();
            input.readMessage(value);
            addPrivatesetting(value);
            break;
          }
          case 40: {
            setStatus(input.readInt32());
            break;
          }
          case 50: {
            setUserdata(input.readBytes());
            break;
          }
        }
      }
    }

    public static CRUser parseFrom(byte[] data)
        throws com.google.protobuf.micro.InvalidProtocolBufferMicroException {
      return (CRUser) (new CRUser().mergeFrom(data));
    }

    public static CRUser parseFrom(
            com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      return new CRUser().mergeFrom(input);
    }

  }

  @SuppressWarnings("hiding")
  public static final class ChatRoom extends
      com.google.protobuf.micro.MessageMicro {
    public ChatRoom() {}

    // required bytes roomid = 1;
    public static final int ROOMID_FIELD_NUMBER = 1;
    private boolean hasRoomid;
    private com.google.protobuf.micro.ByteStringMicro roomid_ = com.google.protobuf.micro.ByteStringMicro.EMPTY;
    public com.google.protobuf.micro.ByteStringMicro getRoomid() { return roomid_; }
    public boolean hasRoomid() { return hasRoomid; }
    public ChatRoom setRoomid(com.google.protobuf.micro.ByteStringMicro value) {
      hasRoomid = true;
      roomid_ = value;
      return this;
    }
    public ChatRoom clearRoomid() {
      hasRoomid = false;
      roomid_ = com.google.protobuf.micro.ByteStringMicro.EMPTY;
      return this;
    }

    // optional .pb.CRUser creater = 2;
    public static final int CREATER_FIELD_NUMBER = 2;
    private boolean hasCreater;
    private com.huajiao.comm.protobuf.ChatRoomProto.CRUser creater_ = null;
    public boolean hasCreater() { return hasCreater; }
    public com.huajiao.comm.protobuf.ChatRoomProto.CRUser getCreater() { return creater_; }
    public ChatRoom setCreater(com.huajiao.comm.protobuf.ChatRoomProto.CRUser value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hasCreater = true;
      creater_ = value;
      return this;
    }
    public ChatRoom clearCreater() {
      hasCreater = false;
      creater_ = null;
      return this;
    }

    // optional string name = 3;
    public static final int NAME_FIELD_NUMBER = 3;
    private boolean hasName;
    private java.lang.String name_ = "";
    public java.lang.String getName() { return name_; }
    public boolean hasName() { return hasName; }
    public ChatRoom setName(java.lang.String value) {
      hasName = true;
      name_ = value;
      return this;
    }
    public ChatRoom clearName() {
      hasName = false;
      name_ = "";
      return this;
    }

    // optional uint64 version = 4;
    public static final int VERSION_FIELD_NUMBER = 4;
    private boolean hasVersion;
    private long version_ = 0L;
    public long getVersion() { return version_; }
    public boolean hasVersion() { return hasVersion; }
    public ChatRoom setVersion(long value) {
      hasVersion = true;
      version_ = value;
      return this;
    }
    public ChatRoom clearVersion() {
      hasVersion = false;
      version_ = 0L;
      return this;
    }

    // optional uint64 maxmsgid = 5;
    public static final int MAXMSGID_FIELD_NUMBER = 5;
    private boolean hasMaxmsgid;
    private long maxmsgid_ = 0L;
    public long getMaxmsgid() { return maxmsgid_; }
    public boolean hasMaxmsgid() { return hasMaxmsgid; }
    public ChatRoom setMaxmsgid(long value) {
      hasMaxmsgid = true;
      maxmsgid_ = value;
      return this;
    }
    public ChatRoom clearMaxmsgid() {
      hasMaxmsgid = false;
      maxmsgid_ = 0L;
      return this;
    }

    // optional uint64 memcountlimit = 6;
    public static final int MEMCOUNTLIMIT_FIELD_NUMBER = 6;
    private boolean hasMemcountlimit;
    private long memcountlimit_ = 0L;
    public long getMemcountlimit() { return memcountlimit_; }
    public boolean hasMemcountlimit() { return hasMemcountlimit; }
    public ChatRoom setMemcountlimit(long value) {
      hasMemcountlimit = true;
      memcountlimit_ = value;
      return this;
    }
    public ChatRoom clearMemcountlimit() {
      hasMemcountlimit = false;
      memcountlimit_ = 0L;
      return this;
    }

    // optional string roomtype = 7;
    public static final int ROOMTYPE_FIELD_NUMBER = 7;
    private boolean hasRoomtype;
    private java.lang.String roomtype_ = "";
    public java.lang.String getRoomtype() { return roomtype_; }
    public boolean hasRoomtype() { return hasRoomtype; }
    public ChatRoom setRoomtype(java.lang.String value) {
      hasRoomtype = true;
      roomtype_ = value;
      return this;
    }
    public ChatRoom clearRoomtype() {
      hasRoomtype = false;
      roomtype_ = "";
      return this;
    }

    // repeated .pb.CRPair properties = 8;
    public static final int PROPERTIES_FIELD_NUMBER = 8;
    private java.util.List<com.huajiao.comm.protobuf.ChatRoomProto.CRPair> properties_ =
      java.util.Collections.emptyList();
    public java.util.List<com.huajiao.comm.protobuf.ChatRoomProto.CRPair> getPropertiesList() {
      return properties_;
    }
    public int getPropertiesCount() { return properties_.size(); }
    public com.huajiao.comm.protobuf.ChatRoomProto.CRPair getProperties(int index) {
      return properties_.get(index);
    }
    public ChatRoom setProperties(int index, com.huajiao.comm.protobuf.ChatRoomProto.CRPair value) {
      if (value == null) {
        throw new NullPointerException();
      }
      properties_.set(index, value);
      return this;
    }
    public ChatRoom addProperties(com.huajiao.comm.protobuf.ChatRoomProto.CRPair value) {
      if (value == null) {
        throw new NullPointerException();
      }
      if (properties_.isEmpty()) {
        properties_ = new java.util.ArrayList<com.huajiao.comm.protobuf.ChatRoomProto.CRPair>();
      }
      properties_.add(value);
      return this;
    }
    public ChatRoom clearProperties() {
      properties_ = java.util.Collections.emptyList();
      return this;
    }

    // repeated .pb.CRUser members = 9;
    public static final int MEMBERS_FIELD_NUMBER = 9;
    private java.util.List<com.huajiao.comm.protobuf.ChatRoomProto.CRUser> members_ =
      java.util.Collections.emptyList();
    public java.util.List<com.huajiao.comm.protobuf.ChatRoomProto.CRUser> getMembersList() {
      return members_;
    }
    public int getMembersCount() { return members_.size(); }
    public com.huajiao.comm.protobuf.ChatRoomProto.CRUser getMembers(int index) {
      return members_.get(index);
    }
    public ChatRoom setMembers(int index, com.huajiao.comm.protobuf.ChatRoomProto.CRUser value) {
      if (value == null) {
        throw new NullPointerException();
      }
      members_.set(index, value);
      return this;
    }
    public ChatRoom addMembers(com.huajiao.comm.protobuf.ChatRoomProto.CRUser value) {
      if (value == null) {
        throw new NullPointerException();
      }
      if (members_.isEmpty()) {
        members_ = new java.util.ArrayList<com.huajiao.comm.protobuf.ChatRoomProto.CRUser>();
      }
      members_.add(value);
      return this;
    }
    public ChatRoom clearMembers() {
      members_ = java.util.Collections.emptyList();
      return this;
    }

    // repeated bytes blacklist = 10;
    public static final int BLACKLIST_FIELD_NUMBER = 10;
    private java.util.List<com.google.protobuf.micro.ByteStringMicro> blacklist_ =
      java.util.Collections.emptyList();
    public java.util.List<com.google.protobuf.micro.ByteStringMicro> getBlacklistList() {
      return blacklist_;
    }
    public int getBlacklistCount() { return blacklist_.size(); }
    public com.google.protobuf.micro.ByteStringMicro getBlacklist(int index) {
      return blacklist_.get(index);
    }
    public ChatRoom setBlacklist(int index, com.google.protobuf.micro.ByteStringMicro value) {
      if (value == null) {
    throw new NullPointerException();
  }
  blacklist_.set(index, value);
      return this;
    }
    public ChatRoom addBlacklist(com.google.protobuf.micro.ByteStringMicro value) {
      if (value == null) {
    throw new NullPointerException();
  }
  if (blacklist_.isEmpty()) {
        blacklist_ = new java.util.ArrayList<com.google.protobuf.micro.ByteStringMicro>();
      }
      blacklist_.add(value);
      return this;
    }
    public ChatRoom clearBlacklist() {
      blacklist_ = java.util.Collections.emptyList();
      return this;
    }

    // optional string gameid = 11;
    public static final int GAMEID_FIELD_NUMBER = 11;
    private boolean hasGameid;
    private java.lang.String gameid_ = "";
    public java.lang.String getGameid() { return gameid_; }
    public boolean hasGameid() { return hasGameid; }
    public ChatRoom setGameid(java.lang.String value) {
      hasGameid = true;
      gameid_ = value;
      return this;
    }
    public ChatRoom clearGameid() {
      hasGameid = false;
      gameid_ = "";
      return this;
    }

    // repeated .pb.CRUser tempmembers = 12;
    public static final int TEMPMEMBERS_FIELD_NUMBER = 12;
    private java.util.List<com.huajiao.comm.protobuf.ChatRoomProto.CRUser> tempmembers_ =
      java.util.Collections.emptyList();
    public java.util.List<com.huajiao.comm.protobuf.ChatRoomProto.CRUser> getTempmembersList() {
      return tempmembers_;
    }
    public int getTempmembersCount() { return tempmembers_.size(); }
    public com.huajiao.comm.protobuf.ChatRoomProto.CRUser getTempmembers(int index) {
      return tempmembers_.get(index);
    }
    public ChatRoom setTempmembers(int index, com.huajiao.comm.protobuf.ChatRoomProto.CRUser value) {
      if (value == null) {
        throw new NullPointerException();
      }
      tempmembers_.set(index, value);
      return this;
    }
    public ChatRoom addTempmembers(com.huajiao.comm.protobuf.ChatRoomProto.CRUser value) {
      if (value == null) {
        throw new NullPointerException();
      }
      if (tempmembers_.isEmpty()) {
        tempmembers_ = new java.util.ArrayList<com.huajiao.comm.protobuf.ChatRoomProto.CRUser>();
      }
      tempmembers_.add(value);
      return this;
    }
    public ChatRoom clearTempmembers() {
      tempmembers_ = java.util.Collections.emptyList();
      return this;
    }

    // optional bytes partnerdata = 13;
    public static final int PARTNERDATA_FIELD_NUMBER = 13;
    private boolean hasPartnerdata;
    private com.google.protobuf.micro.ByteStringMicro partnerdata_ = com.google.protobuf.micro.ByteStringMicro.EMPTY;
    public com.google.protobuf.micro.ByteStringMicro getPartnerdata() { return partnerdata_; }
    public boolean hasPartnerdata() { return hasPartnerdata; }
    public ChatRoom setPartnerdata(com.google.protobuf.micro.ByteStringMicro value) {
      hasPartnerdata = true;
      partnerdata_ = value;
      return this;
    }
    public ChatRoom clearPartnerdata() {
      hasPartnerdata = false;
      partnerdata_ = com.google.protobuf.micro.ByteStringMicro.EMPTY;
      return this;
    }

    public final ChatRoom clear() {
      clearRoomid();
      clearCreater();
      clearName();
      clearVersion();
      clearMaxmsgid();
      clearMemcountlimit();
      clearRoomtype();
      clearProperties();
      clearMembers();
      clearBlacklist();
      clearGameid();
      clearTempmembers();
      clearPartnerdata();
      cachedSize = -1;
      return this;
    }

    public final boolean isInitialized() {
      if (!hasRoomid) return false;
      if (hasCreater()) {
        if (!getCreater().isInitialized()) return false;
      }
      for (com.huajiao.comm.protobuf.ChatRoomProto.CRPair element : getPropertiesList()) {
        if (!element.isInitialized()) return false;
      }
      for (com.huajiao.comm.protobuf.ChatRoomProto.CRUser element : getMembersList()) {
        if (!element.isInitialized()) return false;
      }
      for (com.huajiao.comm.protobuf.ChatRoomProto.CRUser element : getTempmembersList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.micro.CodedOutputStreamMicro output)
                        throws java.io.IOException {
      if (hasRoomid()) {
        output.writeBytes(1, getRoomid());
      }
      if (hasCreater()) {
        output.writeMessage(2, getCreater());
      }
      if (hasName()) {
        output.writeString(3, getName());
      }
      if (hasVersion()) {
        output.writeUInt64(4, getVersion());
      }
      if (hasMaxmsgid()) {
        output.writeUInt64(5, getMaxmsgid());
      }
      if (hasMemcountlimit()) {
        output.writeUInt64(6, getMemcountlimit());
      }
      if (hasRoomtype()) {
        output.writeString(7, getRoomtype());
      }
      for (com.huajiao.comm.protobuf.ChatRoomProto.CRPair element : getPropertiesList()) {
        output.writeMessage(8, element);
      }
      for (com.huajiao.comm.protobuf.ChatRoomProto.CRUser element : getMembersList()) {
        output.writeMessage(9, element);
      }
      for (com.google.protobuf.micro.ByteStringMicro element : getBlacklistList()) {
        output.writeBytes(10, element);
      }
      if (hasGameid()) {
        output.writeString(11, getGameid());
      }
      for (com.huajiao.comm.protobuf.ChatRoomProto.CRUser element : getTempmembersList()) {
        output.writeMessage(12, element);
      }
      if (hasPartnerdata()) {
        output.writeBytes(13, getPartnerdata());
      }
    }

    private int cachedSize = -1;
    @Override
    public int getCachedSize() {
      if (cachedSize < 0) {
        // getSerializedSize sets cachedSize
        getSerializedSize();
      }
      return cachedSize;
    }

    @Override
    public int getSerializedSize() {
      int size = 0;
      if (hasRoomid()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeBytesSize(1, getRoomid());
      }
      if (hasCreater()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeMessageSize(2, getCreater());
      }
      if (hasName()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(3, getName());
      }
      if (hasVersion()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeUInt64Size(4, getVersion());
      }
      if (hasMaxmsgid()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeUInt64Size(5, getMaxmsgid());
      }
      if (hasMemcountlimit()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeUInt64Size(6, getMemcountlimit());
      }
      if (hasRoomtype()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(7, getRoomtype());
      }
      for (com.huajiao.comm.protobuf.ChatRoomProto.CRPair element : getPropertiesList()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeMessageSize(8, element);
      }
      for (com.huajiao.comm.protobuf.ChatRoomProto.CRUser element : getMembersList()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeMessageSize(9, element);
      }
      {
        int dataSize = 0;
        for (com.google.protobuf.micro.ByteStringMicro element : getBlacklistList()) {
          dataSize += com.google.protobuf.micro.CodedOutputStreamMicro
            .computeBytesSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getBlacklistList().size();
      }
      if (hasGameid()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(11, getGameid());
      }
      for (com.huajiao.comm.protobuf.ChatRoomProto.CRUser element : getTempmembersList()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeMessageSize(12, element);
      }
      if (hasPartnerdata()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeBytesSize(13, getPartnerdata());
      }
      cachedSize = size;
      return size;
    }

    @Override
    public ChatRoom mergeFrom(
        com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            setRoomid(input.readBytes());
            break;
          }
          case 18: {
            com.huajiao.comm.protobuf.ChatRoomProto.CRUser value = new com.huajiao.comm.protobuf.ChatRoomProto.CRUser();
            input.readMessage(value);
            setCreater(value);
            break;
          }
          case 26: {
            setName(input.readString());
            break;
          }
          case 32: {
            setVersion(input.readUInt64());
            break;
          }
          case 40: {
            setMaxmsgid(input.readUInt64());
            break;
          }
          case 48: {
            setMemcountlimit(input.readUInt64());
            break;
          }
          case 58: {
            setRoomtype(input.readString());
            break;
          }
          case 66: {
            com.huajiao.comm.protobuf.ChatRoomProto.CRPair value = new com.huajiao.comm.protobuf.ChatRoomProto.CRPair();
            input.readMessage(value);
            addProperties(value);
            break;
          }
          case 74: {
            com.huajiao.comm.protobuf.ChatRoomProto.CRUser value = new com.huajiao.comm.protobuf.ChatRoomProto.CRUser();
            input.readMessage(value);
            addMembers(value);
            break;
          }
          case 82: {
            addBlacklist(input.readBytes());
            break;
          }
          case 90: {
            setGameid(input.readString());
            break;
          }
          case 98: {
            com.huajiao.comm.protobuf.ChatRoomProto.CRUser value = new com.huajiao.comm.protobuf.ChatRoomProto.CRUser();
            input.readMessage(value);
            addTempmembers(value);
            break;
          }
          case 106: {
            setPartnerdata(input.readBytes());
            break;
          }
        }
      }
    }

    public static ChatRoom parseFrom(byte[] data)
        throws com.google.protobuf.micro.InvalidProtocolBufferMicroException {
      return (ChatRoom) (new ChatRoom().mergeFrom(data));
    }

    public static ChatRoom parseFrom(
            com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      return new ChatRoom().mergeFrom(input);
    }

  }

  @SuppressWarnings("hiding")
  public static final class GetChatRoomDetailRequest extends
      com.google.protobuf.micro.MessageMicro {
    public GetChatRoomDetailRequest() {}

    // required bytes roomid = 1;
    public static final int ROOMID_FIELD_NUMBER = 1;
    private boolean hasRoomid;
    private com.google.protobuf.micro.ByteStringMicro roomid_ = com.google.protobuf.micro.ByteStringMicro.EMPTY;
    public com.google.protobuf.micro.ByteStringMicro getRoomid() { return roomid_; }
    public boolean hasRoomid() { return hasRoomid; }
    public GetChatRoomDetailRequest setRoomid(com.google.protobuf.micro.ByteStringMicro value) {
      hasRoomid = true;
      roomid_ = value;
      return this;
    }
    public GetChatRoomDetailRequest clearRoomid() {
      hasRoomid = false;
      roomid_ = com.google.protobuf.micro.ByteStringMicro.EMPTY;
      return this;
    }

    // optional int32 index = 2;
    public static final int INDEX_FIELD_NUMBER = 2;
    private boolean hasIndex;
    private int index_ = 0;
    public int getIndex() { return index_; }
    public boolean hasIndex() { return hasIndex; }
    public GetChatRoomDetailRequest setIndex(int value) {
      hasIndex = true;
      index_ = value;
      return this;
    }
    public GetChatRoomDetailRequest clearIndex() {
      hasIndex = false;
      index_ = 0;
      return this;
    }

    // optional int32 offset = 3;
    public static final int OFFSET_FIELD_NUMBER = 3;
    private boolean hasOffset;
    private int offset_ = 0;
    public int getOffset() { return offset_; }
    public boolean hasOffset() { return hasOffset; }
    public GetChatRoomDetailRequest setOffset(int value) {
      hasOffset = true;
      offset_ = value;
      return this;
    }
    public GetChatRoomDetailRequest clearOffset() {
      hasOffset = false;
      offset_ = 0;
      return this;
    }

    public final GetChatRoomDetailRequest clear() {
      clearRoomid();
      clearIndex();
      clearOffset();
      cachedSize = -1;
      return this;
    }

    public final boolean isInitialized() {
      if (!hasRoomid) return false;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.micro.CodedOutputStreamMicro output)
                        throws java.io.IOException {
      if (hasRoomid()) {
        output.writeBytes(1, getRoomid());
      }
      if (hasIndex()) {
        output.writeInt32(2, getIndex());
      }
      if (hasOffset()) {
        output.writeInt32(3, getOffset());
      }
    }

    private int cachedSize = -1;
    @Override
    public int getCachedSize() {
      if (cachedSize < 0) {
        // getSerializedSize sets cachedSize
        getSerializedSize();
      }
      return cachedSize;
    }

    @Override
    public int getSerializedSize() {
      int size = 0;
      if (hasRoomid()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeBytesSize(1, getRoomid());
      }
      if (hasIndex()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeInt32Size(2, getIndex());
      }
      if (hasOffset()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeInt32Size(3, getOffset());
      }
      cachedSize = size;
      return size;
    }

    @Override
    public GetChatRoomDetailRequest mergeFrom(
        com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            setRoomid(input.readBytes());
            break;
          }
          case 16: {
            setIndex(input.readInt32());
            break;
          }
          case 24: {
            setOffset(input.readInt32());
            break;
          }
        }
      }
    }

    public static GetChatRoomDetailRequest parseFrom(byte[] data)
        throws com.google.protobuf.micro.InvalidProtocolBufferMicroException {
      return (GetChatRoomDetailRequest) (new GetChatRoomDetailRequest().mergeFrom(data));
    }

    public static GetChatRoomDetailRequest parseFrom(
            com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      return new GetChatRoomDetailRequest().mergeFrom(input);
    }

  }

  @SuppressWarnings("hiding")
  public static final class GetChatRoomDetailResponse extends
      com.google.protobuf.micro.MessageMicro {
    public GetChatRoomDetailResponse() {}

    // optional .pb.ChatRoom room = 1;
    public static final int ROOM_FIELD_NUMBER = 1;
    private boolean hasRoom;
    private com.huajiao.comm.protobuf.ChatRoomProto.ChatRoom room_ = null;
    public boolean hasRoom() { return hasRoom; }
    public com.huajiao.comm.protobuf.ChatRoomProto.ChatRoom getRoom() { return room_; }
    public GetChatRoomDetailResponse setRoom(com.huajiao.comm.protobuf.ChatRoomProto.ChatRoom value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hasRoom = true;
      room_ = value;
      return this;
    }
    public GetChatRoomDetailResponse clearRoom() {
      hasRoom = false;
      room_ = null;
      return this;
    }

    public final GetChatRoomDetailResponse clear() {
      clearRoom();
      cachedSize = -1;
      return this;
    }

    public final boolean isInitialized() {
      if (hasRoom()) {
        if (!getRoom().isInitialized()) return false;
      }
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.micro.CodedOutputStreamMicro output)
                        throws java.io.IOException {
      if (hasRoom()) {
        output.writeMessage(1, getRoom());
      }
    }

    private int cachedSize = -1;
    @Override
    public int getCachedSize() {
      if (cachedSize < 0) {
        // getSerializedSize sets cachedSize
        getSerializedSize();
      }
      return cachedSize;
    }

    @Override
    public int getSerializedSize() {
      int size = 0;
      if (hasRoom()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeMessageSize(1, getRoom());
      }
      cachedSize = size;
      return size;
    }

    @Override
    public GetChatRoomDetailResponse mergeFrom(
        com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            com.huajiao.comm.protobuf.ChatRoomProto.ChatRoom value = new com.huajiao.comm.protobuf.ChatRoomProto.ChatRoom();
            input.readMessage(value);
            setRoom(value);
            break;
          }
        }
      }
    }

    public static GetChatRoomDetailResponse parseFrom(byte[] data)
        throws com.google.protobuf.micro.InvalidProtocolBufferMicroException {
      return (GetChatRoomDetailResponse) (new GetChatRoomDetailResponse().mergeFrom(data));
    }

    public static GetChatRoomDetailResponse parseFrom(
            com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      return new GetChatRoomDetailResponse().mergeFrom(input);
    }

  }

  @SuppressWarnings("hiding")
  public static final class ApplyJoinChatRoomRequest extends
      com.google.protobuf.micro.MessageMicro {
    public ApplyJoinChatRoomRequest() {}

    // required bytes roomid = 1;
    public static final int ROOMID_FIELD_NUMBER = 1;
    private boolean hasRoomid;
    private com.google.protobuf.micro.ByteStringMicro roomid_ = com.google.protobuf.micro.ByteStringMicro.EMPTY;
    public com.google.protobuf.micro.ByteStringMicro getRoomid() { return roomid_; }
    public boolean hasRoomid() { return hasRoomid; }
    public ApplyJoinChatRoomRequest setRoomid(com.google.protobuf.micro.ByteStringMicro value) {
      hasRoomid = true;
      roomid_ = value;
      return this;
    }
    public ApplyJoinChatRoomRequest clearRoomid() {
      hasRoomid = false;
      roomid_ = com.google.protobuf.micro.ByteStringMicro.EMPTY;
      return this;
    }

    // optional .pb.ChatRoom room = 2;
    public static final int ROOM_FIELD_NUMBER = 2;
    private boolean hasRoom;
    private com.huajiao.comm.protobuf.ChatRoomProto.ChatRoom room_ = null;
    public boolean hasRoom() { return hasRoom; }
    public com.huajiao.comm.protobuf.ChatRoomProto.ChatRoom getRoom() { return room_; }
    public ApplyJoinChatRoomRequest setRoom(com.huajiao.comm.protobuf.ChatRoomProto.ChatRoom value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hasRoom = true;
      room_ = value;
      return this;
    }
    public ApplyJoinChatRoomRequest clearRoom() {
      hasRoom = false;
      room_ = null;
      return this;
    }

    // optional int32 userid_type = 3;
    public static final int USERID_TYPE_FIELD_NUMBER = 3;
    private boolean hasUseridType;
    private int useridType_ = 0;
    public int getUseridType() { return useridType_; }
    public boolean hasUseridType() { return hasUseridType; }
    public ApplyJoinChatRoomRequest setUseridType(int value) {
      hasUseridType = true;
      useridType_ = value;
      return this;
    }
    public ApplyJoinChatRoomRequest clearUseridType() {
      hasUseridType = false;
      useridType_ = 0;
      return this;
    }

    // optional bytes userdata = 4;
    public static final int USERDATA_FIELD_NUMBER = 4;
    private boolean hasUserdata;
    private com.google.protobuf.micro.ByteStringMicro userdata_ = com.google.protobuf.micro.ByteStringMicro.EMPTY;
    public com.google.protobuf.micro.ByteStringMicro getUserdata() { return userdata_; }
    public boolean hasUserdata() { return hasUserdata; }
    public ApplyJoinChatRoomRequest setUserdata(com.google.protobuf.micro.ByteStringMicro value) {
      hasUserdata = true;
      userdata_ = value;
      return this;
    }
    public ApplyJoinChatRoomRequest clearUserdata() {
      hasUserdata = false;
      userdata_ = com.google.protobuf.micro.ByteStringMicro.EMPTY;
      return this;
    }

    // optional bool no_userlist = 5 [default = false];
    public static final int NO_USERLIST_FIELD_NUMBER = 5;
    private boolean hasNoUserlist;
    private boolean noUserlist_ = false;
    public boolean getNoUserlist() { return noUserlist_; }
    public boolean hasNoUserlist() { return hasNoUserlist; }
    public ApplyJoinChatRoomRequest setNoUserlist(boolean value) {
      hasNoUserlist = true;
      noUserlist_ = value;
      return this;
    }
    public ApplyJoinChatRoomRequest clearNoUserlist() {
      hasNoUserlist = false;
      noUserlist_ = false;
      return this;
    }

    public final ApplyJoinChatRoomRequest clear() {
      clearRoomid();
      clearRoom();
      clearUseridType();
      clearUserdata();
      clearNoUserlist();
      cachedSize = -1;
      return this;
    }

    public final boolean isInitialized() {
      if (!hasRoomid) return false;
      if (hasRoom()) {
        if (!getRoom().isInitialized()) return false;
      }
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.micro.CodedOutputStreamMicro output)
                        throws java.io.IOException {
      if (hasRoomid()) {
        output.writeBytes(1, getRoomid());
      }
      if (hasRoom()) {
        output.writeMessage(2, getRoom());
      }
      if (hasUseridType()) {
        output.writeInt32(3, getUseridType());
      }
      if (hasUserdata()) {
        output.writeBytes(4, getUserdata());
      }
      if (hasNoUserlist()) {
        output.writeBool(5, getNoUserlist());
      }
    }

    private int cachedSize = -1;
    @Override
    public int getCachedSize() {
      if (cachedSize < 0) {
        // getSerializedSize sets cachedSize
        getSerializedSize();
      }
      return cachedSize;
    }

    @Override
    public int getSerializedSize() {
      int size = 0;
      if (hasRoomid()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeBytesSize(1, getRoomid());
      }
      if (hasRoom()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeMessageSize(2, getRoom());
      }
      if (hasUseridType()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeInt32Size(3, getUseridType());
      }
      if (hasUserdata()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeBytesSize(4, getUserdata());
      }
      if (hasNoUserlist()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeBoolSize(5, getNoUserlist());
      }
      cachedSize = size;
      return size;
    }

    @Override
    public ApplyJoinChatRoomRequest mergeFrom(
        com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            setRoomid(input.readBytes());
            break;
          }
          case 18: {
            com.huajiao.comm.protobuf.ChatRoomProto.ChatRoom value = new com.huajiao.comm.protobuf.ChatRoomProto.ChatRoom();
            input.readMessage(value);
            setRoom(value);
            break;
          }
          case 24: {
            setUseridType(input.readInt32());
            break;
          }
          case 34: {
            setUserdata(input.readBytes());
            break;
          }
          case 40: {
            setNoUserlist(input.readBool());
            break;
          }
        }
      }
    }

    public static ApplyJoinChatRoomRequest parseFrom(byte[] data)
        throws com.google.protobuf.micro.InvalidProtocolBufferMicroException {
      return (ApplyJoinChatRoomRequest) (new ApplyJoinChatRoomRequest().mergeFrom(data));
    }

    public static ApplyJoinChatRoomRequest parseFrom(
            com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      return new ApplyJoinChatRoomRequest().mergeFrom(input);
    }

  }

  @SuppressWarnings("hiding")
  public static final class ApplyJoinChatRoomResponse extends
      com.google.protobuf.micro.MessageMicro {
    public ApplyJoinChatRoomResponse() {}

    // optional .pb.ChatRoom room = 1;
    public static final int ROOM_FIELD_NUMBER = 1;
    private boolean hasRoom;
    private com.huajiao.comm.protobuf.ChatRoomProto.ChatRoom room_ = null;
    public boolean hasRoom() { return hasRoom; }
    public com.huajiao.comm.protobuf.ChatRoomProto.ChatRoom getRoom() { return room_; }
    public ApplyJoinChatRoomResponse setRoom(com.huajiao.comm.protobuf.ChatRoomProto.ChatRoom value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hasRoom = true;
      room_ = value;
      return this;
    }
    public ApplyJoinChatRoomResponse clearRoom() {
      hasRoom = false;
      room_ = null;
      return this;
    }

    // optional bool pull_lost = 2 [default = true];
    public static final int PULL_LOST_FIELD_NUMBER = 2;
    private boolean hasPullLost;
    private boolean pullLost_ = true;
    public boolean getPullLost() { return pullLost_; }
    public boolean hasPullLost() { return hasPullLost; }
    public ApplyJoinChatRoomResponse setPullLost(boolean value) {
      hasPullLost = true;
      pullLost_ = value;
      return this;
    }
    public ApplyJoinChatRoomResponse clearPullLost() {
      hasPullLost = false;
      pullLost_ = true;
      return this;
    }

    public final ApplyJoinChatRoomResponse clear() {
      clearRoom();
      clearPullLost();
      cachedSize = -1;
      return this;
    }

    public final boolean isInitialized() {
      if (hasRoom()) {
        if (!getRoom().isInitialized()) return false;
      }
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.micro.CodedOutputStreamMicro output)
                        throws java.io.IOException {
      if (hasRoom()) {
        output.writeMessage(1, getRoom());
      }
      if (hasPullLost()) {
        output.writeBool(2, getPullLost());
      }
    }

    private int cachedSize = -1;
    @Override
    public int getCachedSize() {
      if (cachedSize < 0) {
        // getSerializedSize sets cachedSize
        getSerializedSize();
      }
      return cachedSize;
    }

    @Override
    public int getSerializedSize() {
      int size = 0;
      if (hasRoom()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeMessageSize(1, getRoom());
      }
      if (hasPullLost()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeBoolSize(2, getPullLost());
      }
      cachedSize = size;
      return size;
    }

    @Override
    public ApplyJoinChatRoomResponse mergeFrom(
        com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            com.huajiao.comm.protobuf.ChatRoomProto.ChatRoom value = new com.huajiao.comm.protobuf.ChatRoomProto.ChatRoom();
            input.readMessage(value);
            setRoom(value);
            break;
          }
          case 16: {
            setPullLost(input.readBool());
            break;
          }
        }
      }
    }

    public static ApplyJoinChatRoomResponse parseFrom(byte[] data)
        throws com.google.protobuf.micro.InvalidProtocolBufferMicroException {
      return (ApplyJoinChatRoomResponse) (new ApplyJoinChatRoomResponse().mergeFrom(data));
    }

    public static ApplyJoinChatRoomResponse parseFrom(
            com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      return new ApplyJoinChatRoomResponse().mergeFrom(input);
    }

  }

  @SuppressWarnings("hiding")
  public static final class QuitChatRoomRequest extends
      com.google.protobuf.micro.MessageMicro {
    public QuitChatRoomRequest() {}

    // required bytes roomid = 1;
    public static final int ROOMID_FIELD_NUMBER = 1;
    private boolean hasRoomid;
    private com.google.protobuf.micro.ByteStringMicro roomid_ = com.google.protobuf.micro.ByteStringMicro.EMPTY;
    public com.google.protobuf.micro.ByteStringMicro getRoomid() { return roomid_; }
    public boolean hasRoomid() { return hasRoomid; }
    public QuitChatRoomRequest setRoomid(com.google.protobuf.micro.ByteStringMicro value) {
      hasRoomid = true;
      roomid_ = value;
      return this;
    }
    public QuitChatRoomRequest clearRoomid() {
      hasRoomid = false;
      roomid_ = com.google.protobuf.micro.ByteStringMicro.EMPTY;
      return this;
    }

    // optional .pb.ChatRoom room = 2;
    public static final int ROOM_FIELD_NUMBER = 2;
    private boolean hasRoom;
    private com.huajiao.comm.protobuf.ChatRoomProto.ChatRoom room_ = null;
    public boolean hasRoom() { return hasRoom; }
    public com.huajiao.comm.protobuf.ChatRoomProto.ChatRoom getRoom() { return room_; }
    public QuitChatRoomRequest setRoom(com.huajiao.comm.protobuf.ChatRoomProto.ChatRoom value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hasRoom = true;
      room_ = value;
      return this;
    }
    public QuitChatRoomRequest clearRoom() {
      hasRoom = false;
      room_ = null;
      return this;
    }

    public final QuitChatRoomRequest clear() {
      clearRoomid();
      clearRoom();
      cachedSize = -1;
      return this;
    }

    public final boolean isInitialized() {
      if (!hasRoomid) return false;
      if (hasRoom()) {
        if (!getRoom().isInitialized()) return false;
      }
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.micro.CodedOutputStreamMicro output)
                        throws java.io.IOException {
      if (hasRoomid()) {
        output.writeBytes(1, getRoomid());
      }
      if (hasRoom()) {
        output.writeMessage(2, getRoom());
      }
    }

    private int cachedSize = -1;
    @Override
    public int getCachedSize() {
      if (cachedSize < 0) {
        // getSerializedSize sets cachedSize
        getSerializedSize();
      }
      return cachedSize;
    }

    @Override
    public int getSerializedSize() {
      int size = 0;
      if (hasRoomid()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeBytesSize(1, getRoomid());
      }
      if (hasRoom()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeMessageSize(2, getRoom());
      }
      cachedSize = size;
      return size;
    }

    @Override
    public QuitChatRoomRequest mergeFrom(
        com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            setRoomid(input.readBytes());
            break;
          }
          case 18: {
            com.huajiao.comm.protobuf.ChatRoomProto.ChatRoom value = new com.huajiao.comm.protobuf.ChatRoomProto.ChatRoom();
            input.readMessage(value);
            setRoom(value);
            break;
          }
        }
      }
    }

    public static QuitChatRoomRequest parseFrom(byte[] data)
        throws com.google.protobuf.micro.InvalidProtocolBufferMicroException {
      return (QuitChatRoomRequest) (new QuitChatRoomRequest().mergeFrom(data));
    }

    public static QuitChatRoomRequest parseFrom(
            com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      return new QuitChatRoomRequest().mergeFrom(input);
    }

  }

  @SuppressWarnings("hiding")
  public static final class QuitChatRoomResponse extends
      com.google.protobuf.micro.MessageMicro {
    public QuitChatRoomResponse() {}

    // optional .pb.ChatRoom room = 1;
    public static final int ROOM_FIELD_NUMBER = 1;
    private boolean hasRoom;
    private com.huajiao.comm.protobuf.ChatRoomProto.ChatRoom room_ = null;
    public boolean hasRoom() { return hasRoom; }
    public com.huajiao.comm.protobuf.ChatRoomProto.ChatRoom getRoom() { return room_; }
    public QuitChatRoomResponse setRoom(com.huajiao.comm.protobuf.ChatRoomProto.ChatRoom value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hasRoom = true;
      room_ = value;
      return this;
    }
    public QuitChatRoomResponse clearRoom() {
      hasRoom = false;
      room_ = null;
      return this;
    }

    public final QuitChatRoomResponse clear() {
      clearRoom();
      cachedSize = -1;
      return this;
    }

    public final boolean isInitialized() {
      if (hasRoom()) {
        if (!getRoom().isInitialized()) return false;
      }
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.micro.CodedOutputStreamMicro output)
                        throws java.io.IOException {
      if (hasRoom()) {
        output.writeMessage(1, getRoom());
      }
    }

    private int cachedSize = -1;
    @Override
    public int getCachedSize() {
      if (cachedSize < 0) {
        // getSerializedSize sets cachedSize
        getSerializedSize();
      }
      return cachedSize;
    }

    @Override
    public int getSerializedSize() {
      int size = 0;
      if (hasRoom()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeMessageSize(1, getRoom());
      }
      cachedSize = size;
      return size;
    }

    @Override
    public QuitChatRoomResponse mergeFrom(
        com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            com.huajiao.comm.protobuf.ChatRoomProto.ChatRoom value = new com.huajiao.comm.protobuf.ChatRoomProto.ChatRoom();
            input.readMessage(value);
            setRoom(value);
            break;
          }
        }
      }
    }

    public static QuitChatRoomResponse parseFrom(byte[] data)
        throws com.google.protobuf.micro.InvalidProtocolBufferMicroException {
      return (QuitChatRoomResponse) (new QuitChatRoomResponse().mergeFrom(data));
    }

    public static QuitChatRoomResponse parseFrom(
            com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      return new QuitChatRoomResponse().mergeFrom(input);
    }

  }

  @SuppressWarnings("hiding")
  public static final class MemberJoinChatRoomNotify extends
      com.google.protobuf.micro.MessageMicro {
    public MemberJoinChatRoomNotify() {}

    // required .pb.ChatRoom room = 1;
    public static final int ROOM_FIELD_NUMBER = 1;
    private boolean hasRoom;
    private com.huajiao.comm.protobuf.ChatRoomProto.ChatRoom room_ = null;
    public boolean hasRoom() { return hasRoom; }
    public com.huajiao.comm.protobuf.ChatRoomProto.ChatRoom getRoom() { return room_; }
    public MemberJoinChatRoomNotify setRoom(com.huajiao.comm.protobuf.ChatRoomProto.ChatRoom value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hasRoom = true;
      room_ = value;
      return this;
    }
    public MemberJoinChatRoomNotify clearRoom() {
      hasRoom = false;
      room_ = null;
      return this;
    }

    public final MemberJoinChatRoomNotify clear() {
      clearRoom();
      cachedSize = -1;
      return this;
    }

    public final boolean isInitialized() {
      if (!hasRoom) return false;
      if (!getRoom().isInitialized()) return false;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.micro.CodedOutputStreamMicro output)
                        throws java.io.IOException {
      if (hasRoom()) {
        output.writeMessage(1, getRoom());
      }
    }

    private int cachedSize = -1;
    @Override
    public int getCachedSize() {
      if (cachedSize < 0) {
        // getSerializedSize sets cachedSize
        getSerializedSize();
      }
      return cachedSize;
    }

    @Override
    public int getSerializedSize() {
      int size = 0;
      if (hasRoom()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeMessageSize(1, getRoom());
      }
      cachedSize = size;
      return size;
    }

    @Override
    public MemberJoinChatRoomNotify mergeFrom(
        com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            com.huajiao.comm.protobuf.ChatRoomProto.ChatRoom value = new com.huajiao.comm.protobuf.ChatRoomProto.ChatRoom();
            input.readMessage(value);
            setRoom(value);
            break;
          }
        }
      }
    }

    public static MemberJoinChatRoomNotify parseFrom(byte[] data)
        throws com.google.protobuf.micro.InvalidProtocolBufferMicroException {
      return (MemberJoinChatRoomNotify) (new MemberJoinChatRoomNotify().mergeFrom(data));
    }

    public static MemberJoinChatRoomNotify parseFrom(
            com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      return new MemberJoinChatRoomNotify().mergeFrom(input);
    }

  }

  @SuppressWarnings("hiding")
  public static final class MemberQuitChatRoomNotify extends
      com.google.protobuf.micro.MessageMicro {
    public MemberQuitChatRoomNotify() {}

    // required .pb.ChatRoom room = 1;
    public static final int ROOM_FIELD_NUMBER = 1;
    private boolean hasRoom;
    private com.huajiao.comm.protobuf.ChatRoomProto.ChatRoom room_ = null;
    public boolean hasRoom() { return hasRoom; }
    public com.huajiao.comm.protobuf.ChatRoomProto.ChatRoom getRoom() { return room_; }
    public MemberQuitChatRoomNotify setRoom(com.huajiao.comm.protobuf.ChatRoomProto.ChatRoom value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hasRoom = true;
      room_ = value;
      return this;
    }
    public MemberQuitChatRoomNotify clearRoom() {
      hasRoom = false;
      room_ = null;
      return this;
    }

    public final MemberQuitChatRoomNotify clear() {
      clearRoom();
      cachedSize = -1;
      return this;
    }

    public final boolean isInitialized() {
      if (!hasRoom) return false;
      if (!getRoom().isInitialized()) return false;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.micro.CodedOutputStreamMicro output)
                        throws java.io.IOException {
      if (hasRoom()) {
        output.writeMessage(1, getRoom());
      }
    }

    private int cachedSize = -1;
    @Override
    public int getCachedSize() {
      if (cachedSize < 0) {
        // getSerializedSize sets cachedSize
        getSerializedSize();
      }
      return cachedSize;
    }

    @Override
    public int getSerializedSize() {
      int size = 0;
      if (hasRoom()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeMessageSize(1, getRoom());
      }
      cachedSize = size;
      return size;
    }

    @Override
    public MemberQuitChatRoomNotify mergeFrom(
        com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            com.huajiao.comm.protobuf.ChatRoomProto.ChatRoom value = new com.huajiao.comm.protobuf.ChatRoomProto.ChatRoom();
            input.readMessage(value);
            setRoom(value);
            break;
          }
        }
      }
    }

    public static MemberQuitChatRoomNotify parseFrom(byte[] data)
        throws com.google.protobuf.micro.InvalidProtocolBufferMicroException {
      return (MemberQuitChatRoomNotify) (new MemberQuitChatRoomNotify().mergeFrom(data));
    }

    public static MemberQuitChatRoomNotify parseFrom(
            com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      return new MemberQuitChatRoomNotify().mergeFrom(input);
    }

  }

  @SuppressWarnings("hiding")
  public static final class ChatRoomNewMsg extends
      com.google.protobuf.micro.MessageMicro {
    public ChatRoomNewMsg() {}

    // required bytes roomid = 1;
    public static final int ROOMID_FIELD_NUMBER = 1;
    private boolean hasRoomid;
    private com.google.protobuf.micro.ByteStringMicro roomid_ = com.google.protobuf.micro.ByteStringMicro.EMPTY;
    public com.google.protobuf.micro.ByteStringMicro getRoomid() { return roomid_; }
    public boolean hasRoomid() { return hasRoomid; }
    public ChatRoomNewMsg setRoomid(com.google.protobuf.micro.ByteStringMicro value) {
      hasRoomid = true;
      roomid_ = value;
      return this;
    }
    public ChatRoomNewMsg clearRoomid() {
      hasRoomid = false;
      roomid_ = com.google.protobuf.micro.ByteStringMicro.EMPTY;
      return this;
    }

    // optional .pb.CRUser sender = 2;
    public static final int SENDER_FIELD_NUMBER = 2;
    private boolean hasSender;
    private com.huajiao.comm.protobuf.ChatRoomProto.CRUser sender_ = null;
    public boolean hasSender() { return hasSender; }
    public com.huajiao.comm.protobuf.ChatRoomProto.CRUser getSender() { return sender_; }
    public ChatRoomNewMsg setSender(com.huajiao.comm.protobuf.ChatRoomProto.CRUser value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hasSender = true;
      sender_ = value;
      return this;
    }
    public ChatRoomNewMsg clearSender() {
      hasSender = false;
      sender_ = null;
      return this;
    }

    // optional int32 msgtype = 3;
    public static final int MSGTYPE_FIELD_NUMBER = 3;
    private boolean hasMsgtype;
    private int msgtype_ = 0;
    public int getMsgtype() { return msgtype_; }
    public boolean hasMsgtype() { return hasMsgtype; }
    public ChatRoomNewMsg setMsgtype(int value) {
      hasMsgtype = true;
      msgtype_ = value;
      return this;
    }
    public ChatRoomNewMsg clearMsgtype() {
      hasMsgtype = false;
      msgtype_ = 0;
      return this;
    }

    // optional bytes msgcontent = 4;
    public static final int MSGCONTENT_FIELD_NUMBER = 4;
    private boolean hasMsgcontent;
    private com.google.protobuf.micro.ByteStringMicro msgcontent_ = com.google.protobuf.micro.ByteStringMicro.EMPTY;
    public com.google.protobuf.micro.ByteStringMicro getMsgcontent() { return msgcontent_; }
    public boolean hasMsgcontent() { return hasMsgcontent; }
    public ChatRoomNewMsg setMsgcontent(com.google.protobuf.micro.ByteStringMicro value) {
      hasMsgcontent = true;
      msgcontent_ = value;
      return this;
    }
    public ChatRoomNewMsg clearMsgcontent() {
      hasMsgcontent = false;
      msgcontent_ = com.google.protobuf.micro.ByteStringMicro.EMPTY;
      return this;
    }

    // optional int32 regmemcount = 5;
    public static final int REGMEMCOUNT_FIELD_NUMBER = 5;
    private boolean hasRegmemcount;
    private int regmemcount_ = 0;
    public int getRegmemcount() { return regmemcount_; }
    public boolean hasRegmemcount() { return hasRegmemcount; }
    public ChatRoomNewMsg setRegmemcount(int value) {
      hasRegmemcount = true;
      regmemcount_ = value;
      return this;
    }
    public ChatRoomNewMsg clearRegmemcount() {
      hasRegmemcount = false;
      regmemcount_ = 0;
      return this;
    }

    // optional int32 memcount = 6;
    public static final int MEMCOUNT_FIELD_NUMBER = 6;
    private boolean hasMemcount;
    private int memcount_ = 0;
    public int getMemcount() { return memcount_; }
    public boolean hasMemcount() { return hasMemcount; }
    public ChatRoomNewMsg setMemcount(int value) {
      hasMemcount = true;
      memcount_ = value;
      return this;
    }
    public ChatRoomNewMsg clearMemcount() {
      hasMemcount = false;
      memcount_ = 0;
      return this;
    }

    // optional uint32 msgid = 7;
    public static final int MSGID_FIELD_NUMBER = 7;
    private boolean hasMsgid;
    private int msgid_ = 0;
    public int getMsgid() { return msgid_; }
    public boolean hasMsgid() { return hasMsgid; }
    public ChatRoomNewMsg setMsgid(int value) {
      hasMsgid = true;
      msgid_ = value;
      return this;
    }
    public ChatRoomNewMsg clearMsgid() {
      hasMsgid = false;
      msgid_ = 0;
      return this;
    }

    // optional uint32 maxid = 8;
    public static final int MAXID_FIELD_NUMBER = 8;
    private boolean hasMaxid;
    private int maxid_ = 0;
    public int getMaxid() { return maxid_; }
    public boolean hasMaxid() { return hasMaxid; }
    public ChatRoomNewMsg setMaxid(int value) {
      hasMaxid = true;
      maxid_ = value;
      return this;
    }
    public ChatRoomNewMsg clearMaxid() {
      hasMaxid = false;
      maxid_ = 0;
      return this;
    }

    // optional uint64 timestamp = 9;
    public static final int TIMESTAMP_FIELD_NUMBER = 9;
    private boolean hasTimestamp;
    private long timestamp_ = 0L;
    public long getTimestamp() { return timestamp_; }
    public boolean hasTimestamp() { return hasTimestamp; }
    public ChatRoomNewMsg setTimestamp(long value) {
      hasTimestamp = true;
      timestamp_ = value;
      return this;
    }
    public ChatRoomNewMsg clearTimestamp() {
      hasTimestamp = false;
      timestamp_ = 0L;
      return this;
    }

    public final ChatRoomNewMsg clear() {
      clearRoomid();
      clearSender();
      clearMsgtype();
      clearMsgcontent();
      clearRegmemcount();
      clearMemcount();
      clearMsgid();
      clearMaxid();
      clearTimestamp();
      cachedSize = -1;
      return this;
    }

    public final boolean isInitialized() {
      if (!hasRoomid) return false;
      if (hasSender()) {
        if (!getSender().isInitialized()) return false;
      }
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.micro.CodedOutputStreamMicro output)
                        throws java.io.IOException {
      if (hasRoomid()) {
        output.writeBytes(1, getRoomid());
      }
      if (hasSender()) {
        output.writeMessage(2, getSender());
      }
      if (hasMsgtype()) {
        output.writeInt32(3, getMsgtype());
      }
      if (hasMsgcontent()) {
        output.writeBytes(4, getMsgcontent());
      }
      if (hasRegmemcount()) {
        output.writeInt32(5, getRegmemcount());
      }
      if (hasMemcount()) {
        output.writeInt32(6, getMemcount());
      }
      if (hasMsgid()) {
        output.writeUInt32(7, getMsgid());
      }
      if (hasMaxid()) {
        output.writeUInt32(8, getMaxid());
      }
      if (hasTimestamp()) {
        output.writeUInt64(9, getTimestamp());
      }
    }

    private int cachedSize = -1;
    @Override
    public int getCachedSize() {
      if (cachedSize < 0) {
        // getSerializedSize sets cachedSize
        getSerializedSize();
      }
      return cachedSize;
    }

    @Override
    public int getSerializedSize() {
      int size = 0;
      if (hasRoomid()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeBytesSize(1, getRoomid());
      }
      if (hasSender()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeMessageSize(2, getSender());
      }
      if (hasMsgtype()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeInt32Size(3, getMsgtype());
      }
      if (hasMsgcontent()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeBytesSize(4, getMsgcontent());
      }
      if (hasRegmemcount()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeInt32Size(5, getRegmemcount());
      }
      if (hasMemcount()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeInt32Size(6, getMemcount());
      }
      if (hasMsgid()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeUInt32Size(7, getMsgid());
      }
      if (hasMaxid()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeUInt32Size(8, getMaxid());
      }
      if (hasTimestamp()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeUInt64Size(9, getTimestamp());
      }
      cachedSize = size;
      return size;
    }

    @Override
    public ChatRoomNewMsg mergeFrom(
        com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            setRoomid(input.readBytes());
            break;
          }
          case 18: {
            com.huajiao.comm.protobuf.ChatRoomProto.CRUser value = new com.huajiao.comm.protobuf.ChatRoomProto.CRUser();
            input.readMessage(value);
            setSender(value);
            break;
          }
          case 24: {
            setMsgtype(input.readInt32());
            break;
          }
          case 34: {
            setMsgcontent(input.readBytes());
            break;
          }
          case 40: {
            setRegmemcount(input.readInt32());
            break;
          }
          case 48: {
            setMemcount(input.readInt32());
            break;
          }
          case 56: {
            setMsgid(input.readUInt32());
            break;
          }
          case 64: {
            setMaxid(input.readUInt32());
            break;
          }
          case 72: {
            setTimestamp(input.readUInt64());
            break;
          }
        }
      }
    }

    public static ChatRoomNewMsg parseFrom(byte[] data)
        throws com.google.protobuf.micro.InvalidProtocolBufferMicroException {
      return (ChatRoomNewMsg) (new ChatRoomNewMsg().mergeFrom(data));
    }

    public static ChatRoomNewMsg parseFrom(
            com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      return new ChatRoomNewMsg().mergeFrom(input);
    }

  }

  @SuppressWarnings("hiding")
  public static final class ChatRoomMNotify extends
      com.google.protobuf.micro.MessageMicro {
    public ChatRoomMNotify() {}

    // required int32 type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private boolean hasType;
    private int type_ = 0;
    public int getType() { return type_; }
    public boolean hasType() { return hasType; }
    public ChatRoomMNotify setType(int value) {
      hasType = true;
      type_ = value;
      return this;
    }
    public ChatRoomMNotify clearType() {
      hasType = false;
      type_ = 0;
      return this;
    }

    // required bytes data = 2;
    public static final int DATA_FIELD_NUMBER = 2;
    private boolean hasData;
    private com.google.protobuf.micro.ByteStringMicro data_ = com.google.protobuf.micro.ByteStringMicro.EMPTY;
    public com.google.protobuf.micro.ByteStringMicro getData() { return data_; }
    public boolean hasData() { return hasData; }
    public ChatRoomMNotify setData(com.google.protobuf.micro.ByteStringMicro value) {
      hasData = true;
      data_ = value;
      return this;
    }
    public ChatRoomMNotify clearData() {
      hasData = false;
      data_ = com.google.protobuf.micro.ByteStringMicro.EMPTY;
      return this;
    }

    // optional int32 regmemcount = 3;
    public static final int REGMEMCOUNT_FIELD_NUMBER = 3;
    private boolean hasRegmemcount;
    private int regmemcount_ = 0;
    public int getRegmemcount() { return regmemcount_; }
    public boolean hasRegmemcount() { return hasRegmemcount; }
    public ChatRoomMNotify setRegmemcount(int value) {
      hasRegmemcount = true;
      regmemcount_ = value;
      return this;
    }
    public ChatRoomMNotify clearRegmemcount() {
      hasRegmemcount = false;
      regmemcount_ = 0;
      return this;
    }

    // optional int32 memcount = 4;
    public static final int MEMCOUNT_FIELD_NUMBER = 4;
    private boolean hasMemcount;
    private int memcount_ = 0;
    public int getMemcount() { return memcount_; }
    public boolean hasMemcount() { return hasMemcount; }
    public ChatRoomMNotify setMemcount(int value) {
      hasMemcount = true;
      memcount_ = value;
      return this;
    }
    public ChatRoomMNotify clearMemcount() {
      hasMemcount = false;
      memcount_ = 0;
      return this;
    }

    public final ChatRoomMNotify clear() {
      clearType();
      clearData();
      clearRegmemcount();
      clearMemcount();
      cachedSize = -1;
      return this;
    }

    public final boolean isInitialized() {
      if (!hasType) return false;
      if (!hasData) return false;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.micro.CodedOutputStreamMicro output)
                        throws java.io.IOException {
      if (hasType()) {
        output.writeInt32(1, getType());
      }
      if (hasData()) {
        output.writeBytes(2, getData());
      }
      if (hasRegmemcount()) {
        output.writeInt32(3, getRegmemcount());
      }
      if (hasMemcount()) {
        output.writeInt32(4, getMemcount());
      }
    }

    private int cachedSize = -1;
    @Override
    public int getCachedSize() {
      if (cachedSize < 0) {
        // getSerializedSize sets cachedSize
        getSerializedSize();
      }
      return cachedSize;
    }

    @Override
    public int getSerializedSize() {
      int size = 0;
      if (hasType()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeInt32Size(1, getType());
      }
      if (hasData()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeBytesSize(2, getData());
      }
      if (hasRegmemcount()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeInt32Size(3, getRegmemcount());
      }
      if (hasMemcount()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeInt32Size(4, getMemcount());
      }
      cachedSize = size;
      return size;
    }

    @Override
    public ChatRoomMNotify mergeFrom(
        com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            setType(input.readInt32());
            break;
          }
          case 18: {
            setData(input.readBytes());
            break;
          }
          case 24: {
            setRegmemcount(input.readInt32());
            break;
          }
          case 32: {
            setMemcount(input.readInt32());
            break;
          }
        }
      }
    }

    public static ChatRoomMNotify parseFrom(byte[] data)
        throws com.google.protobuf.micro.InvalidProtocolBufferMicroException {
      return (ChatRoomMNotify) (new ChatRoomMNotify().mergeFrom(data));
    }

    public static ChatRoomMNotify parseFrom(
            com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      return new ChatRoomMNotify().mergeFrom(input);
    }

  }

  @SuppressWarnings("hiding")
  public static final class SubscribeRequest extends
      com.google.protobuf.micro.MessageMicro {
    public SubscribeRequest() {}

    // required bytes roomid = 1;
    public static final int ROOMID_FIELD_NUMBER = 1;
    private boolean hasRoomid;
    private com.google.protobuf.micro.ByteStringMicro roomid_ = com.google.protobuf.micro.ByteStringMicro.EMPTY;
    public com.google.protobuf.micro.ByteStringMicro getRoomid() { return roomid_; }
    public boolean hasRoomid() { return hasRoomid; }
    public SubscribeRequest setRoomid(com.google.protobuf.micro.ByteStringMicro value) {
      hasRoomid = true;
      roomid_ = value;
      return this;
    }
    public SubscribeRequest clearRoomid() {
      hasRoomid = false;
      roomid_ = com.google.protobuf.micro.ByteStringMicro.EMPTY;
      return this;
    }

    // optional bool sub = 2 [default = false];
    public static final int SUB_FIELD_NUMBER = 2;
    private boolean hasSub;
    private boolean sub_ = false;
    public boolean getSub() { return sub_; }
    public boolean hasSub() { return hasSub; }
    public SubscribeRequest setSub(boolean value) {
      hasSub = true;
      sub_ = value;
      return this;
    }
    public SubscribeRequest clearSub() {
      hasSub = false;
      sub_ = false;
      return this;
    }

    public final SubscribeRequest clear() {
      clearRoomid();
      clearSub();
      cachedSize = -1;
      return this;
    }

    public final boolean isInitialized() {
      if (!hasRoomid) return false;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.micro.CodedOutputStreamMicro output)
                        throws java.io.IOException {
      if (hasRoomid()) {
        output.writeBytes(1, getRoomid());
      }
      if (hasSub()) {
        output.writeBool(2, getSub());
      }
    }

    private int cachedSize = -1;
    @Override
    public int getCachedSize() {
      if (cachedSize < 0) {
        // getSerializedSize sets cachedSize
        getSerializedSize();
      }
      return cachedSize;
    }

    @Override
    public int getSerializedSize() {
      int size = 0;
      if (hasRoomid()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeBytesSize(1, getRoomid());
      }
      if (hasSub()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeBoolSize(2, getSub());
      }
      cachedSize = size;
      return size;
    }

    @Override
    public SubscribeRequest mergeFrom(
        com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            setRoomid(input.readBytes());
            break;
          }
          case 16: {
            setSub(input.readBool());
            break;
          }
        }
      }
    }

    public static SubscribeRequest parseFrom(byte[] data)
        throws com.google.protobuf.micro.InvalidProtocolBufferMicroException {
      return (SubscribeRequest) (new SubscribeRequest().mergeFrom(data));
    }

    public static SubscribeRequest parseFrom(
            com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      return new SubscribeRequest().mergeFrom(input);
    }

  }

  @SuppressWarnings("hiding")
  public static final class SubscribeResponse extends
      com.google.protobuf.micro.MessageMicro {
    public SubscribeResponse() {}

    // required bytes roomid = 1;
    public static final int ROOMID_FIELD_NUMBER = 1;
    private boolean hasRoomid;
    private com.google.protobuf.micro.ByteStringMicro roomid_ = com.google.protobuf.micro.ByteStringMicro.EMPTY;
    public com.google.protobuf.micro.ByteStringMicro getRoomid() { return roomid_; }
    public boolean hasRoomid() { return hasRoomid; }
    public SubscribeResponse setRoomid(com.google.protobuf.micro.ByteStringMicro value) {
      hasRoomid = true;
      roomid_ = value;
      return this;
    }
    public SubscribeResponse clearRoomid() {
      hasRoomid = false;
      roomid_ = com.google.protobuf.micro.ByteStringMicro.EMPTY;
      return this;
    }

    // optional bool sub = 2;
    public static final int SUB_FIELD_NUMBER = 2;
    private boolean hasSub;
    private boolean sub_ = false;
    public boolean getSub() { return sub_; }
    public boolean hasSub() { return hasSub; }
    public SubscribeResponse setSub(boolean value) {
      hasSub = true;
      sub_ = value;
      return this;
    }
    public SubscribeResponse clearSub() {
      hasSub = false;
      sub_ = false;
      return this;
    }

    public final SubscribeResponse clear() {
      clearRoomid();
      clearSub();
      cachedSize = -1;
      return this;
    }

    public final boolean isInitialized() {
      if (!hasRoomid) return false;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.micro.CodedOutputStreamMicro output)
                        throws java.io.IOException {
      if (hasRoomid()) {
        output.writeBytes(1, getRoomid());
      }
      if (hasSub()) {
        output.writeBool(2, getSub());
      }
    }

    private int cachedSize = -1;
    @Override
    public int getCachedSize() {
      if (cachedSize < 0) {
        // getSerializedSize sets cachedSize
        getSerializedSize();
      }
      return cachedSize;
    }

    @Override
    public int getSerializedSize() {
      int size = 0;
      if (hasRoomid()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeBytesSize(1, getRoomid());
      }
      if (hasSub()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeBoolSize(2, getSub());
      }
      cachedSize = size;
      return size;
    }

    @Override
    public SubscribeResponse mergeFrom(
        com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            setRoomid(input.readBytes());
            break;
          }
          case 16: {
            setSub(input.readBool());
            break;
          }
        }
      }
    }

    public static SubscribeResponse parseFrom(byte[] data)
        throws com.google.protobuf.micro.InvalidProtocolBufferMicroException {
      return (SubscribeResponse) (new SubscribeResponse().mergeFrom(data));
    }

    public static SubscribeResponse parseFrom(
            com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      return new SubscribeResponse().mergeFrom(input);
    }

  }

  @SuppressWarnings("hiding")
  public static final class ChatRoomUpToServer extends
      com.google.protobuf.micro.MessageMicro {
    public ChatRoomUpToServer() {}

    // required uint32 payloadtype = 1;
    public static final int PAYLOADTYPE_FIELD_NUMBER = 1;
    private boolean hasPayloadtype;
    private int payloadtype_ = 0;
    public int getPayloadtype() { return payloadtype_; }
    public boolean hasPayloadtype() { return hasPayloadtype; }
    public ChatRoomUpToServer setPayloadtype(int value) {
      hasPayloadtype = true;
      payloadtype_ = value;
      return this;
    }
    public ChatRoomUpToServer clearPayloadtype() {
      hasPayloadtype = false;
      payloadtype_ = 0;
      return this;
    }

    // optional .pb.GetChatRoomDetailRequest getchatroominforeq = 3;
    public static final int GETCHATROOMINFOREQ_FIELD_NUMBER = 3;
    private boolean hasGetchatroominforeq;
    private com.huajiao.comm.protobuf.ChatRoomProto.GetChatRoomDetailRequest getchatroominforeq_ = null;
    public boolean hasGetchatroominforeq() { return hasGetchatroominforeq; }
    public com.huajiao.comm.protobuf.ChatRoomProto.GetChatRoomDetailRequest getGetchatroominforeq() { return getchatroominforeq_; }
    public ChatRoomUpToServer setGetchatroominforeq(com.huajiao.comm.protobuf.ChatRoomProto.GetChatRoomDetailRequest value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hasGetchatroominforeq = true;
      getchatroominforeq_ = value;
      return this;
    }
    public ChatRoomUpToServer clearGetchatroominforeq() {
      hasGetchatroominforeq = false;
      getchatroominforeq_ = null;
      return this;
    }

    // optional .pb.ApplyJoinChatRoomRequest applyjoinchatroomreq = 4;
    public static final int APPLYJOINCHATROOMREQ_FIELD_NUMBER = 4;
    private boolean hasApplyjoinchatroomreq;
    private com.huajiao.comm.protobuf.ChatRoomProto.ApplyJoinChatRoomRequest applyjoinchatroomreq_ = null;
    public boolean hasApplyjoinchatroomreq() { return hasApplyjoinchatroomreq; }
    public com.huajiao.comm.protobuf.ChatRoomProto.ApplyJoinChatRoomRequest getApplyjoinchatroomreq() { return applyjoinchatroomreq_; }
    public ChatRoomUpToServer setApplyjoinchatroomreq(com.huajiao.comm.protobuf.ChatRoomProto.ApplyJoinChatRoomRequest value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hasApplyjoinchatroomreq = true;
      applyjoinchatroomreq_ = value;
      return this;
    }
    public ChatRoomUpToServer clearApplyjoinchatroomreq() {
      hasApplyjoinchatroomreq = false;
      applyjoinchatroomreq_ = null;
      return this;
    }

    // optional .pb.QuitChatRoomRequest quitchatroomreq = 5;
    public static final int QUITCHATROOMREQ_FIELD_NUMBER = 5;
    private boolean hasQuitchatroomreq;
    private com.huajiao.comm.protobuf.ChatRoomProto.QuitChatRoomRequest quitchatroomreq_ = null;
    public boolean hasQuitchatroomreq() { return hasQuitchatroomreq; }
    public com.huajiao.comm.protobuf.ChatRoomProto.QuitChatRoomRequest getQuitchatroomreq() { return quitchatroomreq_; }
    public ChatRoomUpToServer setQuitchatroomreq(com.huajiao.comm.protobuf.ChatRoomProto.QuitChatRoomRequest value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hasQuitchatroomreq = true;
      quitchatroomreq_ = value;
      return this;
    }
    public ChatRoomUpToServer clearQuitchatroomreq() {
      hasQuitchatroomreq = false;
      quitchatroomreq_ = null;
      return this;
    }

    // optional .pb.SubscribeRequest subreq = 14;
    public static final int SUBREQ_FIELD_NUMBER = 14;
    private boolean hasSubreq;
    private com.huajiao.comm.protobuf.ChatRoomProto.SubscribeRequest subreq_ = null;
    public boolean hasSubreq() { return hasSubreq; }
    public com.huajiao.comm.protobuf.ChatRoomProto.SubscribeRequest getSubreq() { return subreq_; }
    public ChatRoomUpToServer setSubreq(com.huajiao.comm.protobuf.ChatRoomProto.SubscribeRequest value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hasSubreq = true;
      subreq_ = value;
      return this;
    }
    public ChatRoomUpToServer clearSubreq() {
      hasSubreq = false;
      subreq_ = null;
      return this;
    }

    public final ChatRoomUpToServer clear() {
      clearPayloadtype();
      clearGetchatroominforeq();
      clearApplyjoinchatroomreq();
      clearQuitchatroomreq();
      clearSubreq();
      cachedSize = -1;
      return this;
    }

    public final boolean isInitialized() {
      if (!hasPayloadtype) return false;
      if (hasGetchatroominforeq()) {
        if (!getGetchatroominforeq().isInitialized()) return false;
      }
      if (hasApplyjoinchatroomreq()) {
        if (!getApplyjoinchatroomreq().isInitialized()) return false;
      }
      if (hasQuitchatroomreq()) {
        if (!getQuitchatroomreq().isInitialized()) return false;
      }
      if (hasSubreq()) {
        if (!getSubreq().isInitialized()) return false;
      }
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.micro.CodedOutputStreamMicro output)
                        throws java.io.IOException {
      if (hasPayloadtype()) {
        output.writeUInt32(1, getPayloadtype());
      }
      if (hasGetchatroominforeq()) {
        output.writeMessage(3, getGetchatroominforeq());
      }
      if (hasApplyjoinchatroomreq()) {
        output.writeMessage(4, getApplyjoinchatroomreq());
      }
      if (hasQuitchatroomreq()) {
        output.writeMessage(5, getQuitchatroomreq());
      }
      if (hasSubreq()) {
        output.writeMessage(14, getSubreq());
      }
    }

    private int cachedSize = -1;
    @Override
    public int getCachedSize() {
      if (cachedSize < 0) {
        // getSerializedSize sets cachedSize
        getSerializedSize();
      }
      return cachedSize;
    }

    @Override
    public int getSerializedSize() {
      int size = 0;
      if (hasPayloadtype()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeUInt32Size(1, getPayloadtype());
      }
      if (hasGetchatroominforeq()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeMessageSize(3, getGetchatroominforeq());
      }
      if (hasApplyjoinchatroomreq()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeMessageSize(4, getApplyjoinchatroomreq());
      }
      if (hasQuitchatroomreq()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeMessageSize(5, getQuitchatroomreq());
      }
      if (hasSubreq()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeMessageSize(14, getSubreq());
      }
      cachedSize = size;
      return size;
    }

    @Override
    public ChatRoomUpToServer mergeFrom(
        com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            setPayloadtype(input.readUInt32());
            break;
          }
          case 26: {
            com.huajiao.comm.protobuf.ChatRoomProto.GetChatRoomDetailRequest value = new com.huajiao.comm.protobuf.ChatRoomProto.GetChatRoomDetailRequest();
            input.readMessage(value);
            setGetchatroominforeq(value);
            break;
          }
          case 34: {
            com.huajiao.comm.protobuf.ChatRoomProto.ApplyJoinChatRoomRequest value = new com.huajiao.comm.protobuf.ChatRoomProto.ApplyJoinChatRoomRequest();
            input.readMessage(value);
            setApplyjoinchatroomreq(value);
            break;
          }
          case 42: {
            com.huajiao.comm.protobuf.ChatRoomProto.QuitChatRoomRequest value = new com.huajiao.comm.protobuf.ChatRoomProto.QuitChatRoomRequest();
            input.readMessage(value);
            setQuitchatroomreq(value);
            break;
          }
          case 114: {
            com.huajiao.comm.protobuf.ChatRoomProto.SubscribeRequest value = new com.huajiao.comm.protobuf.ChatRoomProto.SubscribeRequest();
            input.readMessage(value);
            setSubreq(value);
            break;
          }
        }
      }
    }

    public static ChatRoomUpToServer parseFrom(byte[] data)
        throws com.google.protobuf.micro.InvalidProtocolBufferMicroException {
      return (ChatRoomUpToServer) (new ChatRoomUpToServer().mergeFrom(data));
    }

    public static ChatRoomUpToServer parseFrom(
            com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      return new ChatRoomUpToServer().mergeFrom(input);
    }

  }

  @SuppressWarnings("hiding")
  public static final class ChatRoomDownToUser extends
      com.google.protobuf.micro.MessageMicro {
    public ChatRoomDownToUser() {}

    // required int32 result = 1;
    public static final int RESULT_FIELD_NUMBER = 1;
    private boolean hasResult;
    private int result_ = 0;
    public int getResult() { return result_; }
    public boolean hasResult() { return hasResult; }
    public ChatRoomDownToUser setResult(int value) {
      hasResult = true;
      result_ = value;
      return this;
    }
    public ChatRoomDownToUser clearResult() {
      hasResult = false;
      result_ = 0;
      return this;
    }

    // required uint32 payloadtype = 2;
    public static final int PAYLOADTYPE_FIELD_NUMBER = 2;
    private boolean hasPayloadtype;
    private int payloadtype_ = 0;
    public int getPayloadtype() { return payloadtype_; }
    public boolean hasPayloadtype() { return hasPayloadtype; }
    public ChatRoomDownToUser setPayloadtype(int value) {
      hasPayloadtype = true;
      payloadtype_ = value;
      return this;
    }
    public ChatRoomDownToUser clearPayloadtype() {
      hasPayloadtype = false;
      payloadtype_ = 0;
      return this;
    }

    // optional .pb.GetChatRoomDetailResponse getchatroominforesp = 4;
    public static final int GETCHATROOMINFORESP_FIELD_NUMBER = 4;
    private boolean hasGetchatroominforesp;
    private com.huajiao.comm.protobuf.ChatRoomProto.GetChatRoomDetailResponse getchatroominforesp_ = null;
    public boolean hasGetchatroominforesp() { return hasGetchatroominforesp; }
    public com.huajiao.comm.protobuf.ChatRoomProto.GetChatRoomDetailResponse getGetchatroominforesp() { return getchatroominforesp_; }
    public ChatRoomDownToUser setGetchatroominforesp(com.huajiao.comm.protobuf.ChatRoomProto.GetChatRoomDetailResponse value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hasGetchatroominforesp = true;
      getchatroominforesp_ = value;
      return this;
    }
    public ChatRoomDownToUser clearGetchatroominforesp() {
      hasGetchatroominforesp = false;
      getchatroominforesp_ = null;
      return this;
    }

    // optional .pb.ApplyJoinChatRoomResponse applyjoinchatroomresp = 5;
    public static final int APPLYJOINCHATROOMRESP_FIELD_NUMBER = 5;
    private boolean hasApplyjoinchatroomresp;
    private com.huajiao.comm.protobuf.ChatRoomProto.ApplyJoinChatRoomResponse applyjoinchatroomresp_ = null;
    public boolean hasApplyjoinchatroomresp() { return hasApplyjoinchatroomresp; }
    public com.huajiao.comm.protobuf.ChatRoomProto.ApplyJoinChatRoomResponse getApplyjoinchatroomresp() { return applyjoinchatroomresp_; }
    public ChatRoomDownToUser setApplyjoinchatroomresp(com.huajiao.comm.protobuf.ChatRoomProto.ApplyJoinChatRoomResponse value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hasApplyjoinchatroomresp = true;
      applyjoinchatroomresp_ = value;
      return this;
    }
    public ChatRoomDownToUser clearApplyjoinchatroomresp() {
      hasApplyjoinchatroomresp = false;
      applyjoinchatroomresp_ = null;
      return this;
    }

    // optional .pb.QuitChatRoomResponse quitchatroomresp = 6;
    public static final int QUITCHATROOMRESP_FIELD_NUMBER = 6;
    private boolean hasQuitchatroomresp;
    private com.huajiao.comm.protobuf.ChatRoomProto.QuitChatRoomResponse quitchatroomresp_ = null;
    public boolean hasQuitchatroomresp() { return hasQuitchatroomresp; }
    public com.huajiao.comm.protobuf.ChatRoomProto.QuitChatRoomResponse getQuitchatroomresp() { return quitchatroomresp_; }
    public ChatRoomDownToUser setQuitchatroomresp(com.huajiao.comm.protobuf.ChatRoomProto.QuitChatRoomResponse value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hasQuitchatroomresp = true;
      quitchatroomresp_ = value;
      return this;
    }
    public ChatRoomDownToUser clearQuitchatroomresp() {
      hasQuitchatroomresp = false;
      quitchatroomresp_ = null;
      return this;
    }

    // optional .pb.ChatRoomNewMsg newmsgnotify = 13;
    public static final int NEWMSGNOTIFY_FIELD_NUMBER = 13;
    private boolean hasNewmsgnotify;
    private com.huajiao.comm.protobuf.ChatRoomProto.ChatRoomNewMsg newmsgnotify_ = null;
    public boolean hasNewmsgnotify() { return hasNewmsgnotify; }
    public com.huajiao.comm.protobuf.ChatRoomProto.ChatRoomNewMsg getNewmsgnotify() { return newmsgnotify_; }
    public ChatRoomDownToUser setNewmsgnotify(com.huajiao.comm.protobuf.ChatRoomProto.ChatRoomNewMsg value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hasNewmsgnotify = true;
      newmsgnotify_ = value;
      return this;
    }
    public ChatRoomDownToUser clearNewmsgnotify() {
      hasNewmsgnotify = false;
      newmsgnotify_ = null;
      return this;
    }

    // optional .pb.MemberJoinChatRoomNotify memberjoinnotify = 16;
    public static final int MEMBERJOINNOTIFY_FIELD_NUMBER = 16;
    private boolean hasMemberjoinnotify;
    private com.huajiao.comm.protobuf.ChatRoomProto.MemberJoinChatRoomNotify memberjoinnotify_ = null;
    public boolean hasMemberjoinnotify() { return hasMemberjoinnotify; }
    public com.huajiao.comm.protobuf.ChatRoomProto.MemberJoinChatRoomNotify getMemberjoinnotify() { return memberjoinnotify_; }
    public ChatRoomDownToUser setMemberjoinnotify(com.huajiao.comm.protobuf.ChatRoomProto.MemberJoinChatRoomNotify value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hasMemberjoinnotify = true;
      memberjoinnotify_ = value;
      return this;
    }
    public ChatRoomDownToUser clearMemberjoinnotify() {
      hasMemberjoinnotify = false;
      memberjoinnotify_ = null;
      return this;
    }

    // optional .pb.MemberQuitChatRoomNotify memberquitnotify = 17;
    public static final int MEMBERQUITNOTIFY_FIELD_NUMBER = 17;
    private boolean hasMemberquitnotify;
    private com.huajiao.comm.protobuf.ChatRoomProto.MemberQuitChatRoomNotify memberquitnotify_ = null;
    public boolean hasMemberquitnotify() { return hasMemberquitnotify; }
    public com.huajiao.comm.protobuf.ChatRoomProto.MemberQuitChatRoomNotify getMemberquitnotify() { return memberquitnotify_; }
    public ChatRoomDownToUser setMemberquitnotify(com.huajiao.comm.protobuf.ChatRoomProto.MemberQuitChatRoomNotify value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hasMemberquitnotify = true;
      memberquitnotify_ = value;
      return this;
    }
    public ChatRoomDownToUser clearMemberquitnotify() {
      hasMemberquitnotify = false;
      memberquitnotify_ = null;
      return this;
    }

    // optional .pb.SubscribeResponse subresp = 18;
    public static final int SUBRESP_FIELD_NUMBER = 18;
    private boolean hasSubresp;
    private com.huajiao.comm.protobuf.ChatRoomProto.SubscribeResponse subresp_ = null;
    public boolean hasSubresp() { return hasSubresp; }
    public com.huajiao.comm.protobuf.ChatRoomProto.SubscribeResponse getSubresp() { return subresp_; }
    public ChatRoomDownToUser setSubresp(com.huajiao.comm.protobuf.ChatRoomProto.SubscribeResponse value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hasSubresp = true;
      subresp_ = value;
      return this;
    }
    public ChatRoomDownToUser clearSubresp() {
      hasSubresp = false;
      subresp_ = null;
      return this;
    }

    // optional bytes reason = 100;
    public static final int REASON_FIELD_NUMBER = 100;
    private boolean hasReason;
    private com.google.protobuf.micro.ByteStringMicro reason_ = com.google.protobuf.micro.ByteStringMicro.EMPTY;
    public com.google.protobuf.micro.ByteStringMicro getReason() { return reason_; }
    public boolean hasReason() { return hasReason; }
    public ChatRoomDownToUser setReason(com.google.protobuf.micro.ByteStringMicro value) {
      hasReason = true;
      reason_ = value;
      return this;
    }
    public ChatRoomDownToUser clearReason() {
      hasReason = false;
      reason_ = com.google.protobuf.micro.ByteStringMicro.EMPTY;
      return this;
    }

    // repeated .pb.ChatRoomMNotify multinotify = 200;
    public static final int MULTINOTIFY_FIELD_NUMBER = 200;
    private java.util.List<com.huajiao.comm.protobuf.ChatRoomProto.ChatRoomMNotify> multinotify_ =
      java.util.Collections.emptyList();
    public java.util.List<com.huajiao.comm.protobuf.ChatRoomProto.ChatRoomMNotify> getMultinotifyList() {
      return multinotify_;
    }
    public int getMultinotifyCount() { return multinotify_.size(); }
    public com.huajiao.comm.protobuf.ChatRoomProto.ChatRoomMNotify getMultinotify(int index) {
      return multinotify_.get(index);
    }
    public ChatRoomDownToUser setMultinotify(int index, com.huajiao.comm.protobuf.ChatRoomProto.ChatRoomMNotify value) {
      if (value == null) {
        throw new NullPointerException();
      }
      multinotify_.set(index, value);
      return this;
    }
    public ChatRoomDownToUser addMultinotify(com.huajiao.comm.protobuf.ChatRoomProto.ChatRoomMNotify value) {
      if (value == null) {
        throw new NullPointerException();
      }
      if (multinotify_.isEmpty()) {
        multinotify_ = new java.util.ArrayList<com.huajiao.comm.protobuf.ChatRoomProto.ChatRoomMNotify>();
      }
      multinotify_.add(value);
      return this;
    }
    public ChatRoomDownToUser clearMultinotify() {
      multinotify_ = java.util.Collections.emptyList();
      return this;
    }

    public final ChatRoomDownToUser clear() {
      clearResult();
      clearPayloadtype();
      clearGetchatroominforesp();
      clearApplyjoinchatroomresp();
      clearQuitchatroomresp();
      clearNewmsgnotify();
      clearMemberjoinnotify();
      clearMemberquitnotify();
      clearSubresp();
      clearReason();
      clearMultinotify();
      cachedSize = -1;
      return this;
    }

    public final boolean isInitialized() {
      if (!hasResult) return false;
      if (!hasPayloadtype) return false;
      if (hasGetchatroominforesp()) {
        if (!getGetchatroominforesp().isInitialized()) return false;
      }
      if (hasApplyjoinchatroomresp()) {
        if (!getApplyjoinchatroomresp().isInitialized()) return false;
      }
      if (hasQuitchatroomresp()) {
        if (!getQuitchatroomresp().isInitialized()) return false;
      }
      if (hasNewmsgnotify()) {
        if (!getNewmsgnotify().isInitialized()) return false;
      }
      if (hasMemberjoinnotify()) {
        if (!getMemberjoinnotify().isInitialized()) return false;
      }
      if (hasMemberquitnotify()) {
        if (!getMemberquitnotify().isInitialized()) return false;
      }
      if (hasSubresp()) {
        if (!getSubresp().isInitialized()) return false;
      }
      for (com.huajiao.comm.protobuf.ChatRoomProto.ChatRoomMNotify element : getMultinotifyList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.micro.CodedOutputStreamMicro output)
                        throws java.io.IOException {
      if (hasResult()) {
        output.writeInt32(1, getResult());
      }
      if (hasPayloadtype()) {
        output.writeUInt32(2, getPayloadtype());
      }
      if (hasGetchatroominforesp()) {
        output.writeMessage(4, getGetchatroominforesp());
      }
      if (hasApplyjoinchatroomresp()) {
        output.writeMessage(5, getApplyjoinchatroomresp());
      }
      if (hasQuitchatroomresp()) {
        output.writeMessage(6, getQuitchatroomresp());
      }
      if (hasNewmsgnotify()) {
        output.writeMessage(13, getNewmsgnotify());
      }
      if (hasMemberjoinnotify()) {
        output.writeMessage(16, getMemberjoinnotify());
      }
      if (hasMemberquitnotify()) {
        output.writeMessage(17, getMemberquitnotify());
      }
      if (hasSubresp()) {
        output.writeMessage(18, getSubresp());
      }
      if (hasReason()) {
        output.writeBytes(100, getReason());
      }
      for (com.huajiao.comm.protobuf.ChatRoomProto.ChatRoomMNotify element : getMultinotifyList()) {
        output.writeMessage(200, element);
      }
    }

    private int cachedSize = -1;
    @Override
    public int getCachedSize() {
      if (cachedSize < 0) {
        // getSerializedSize sets cachedSize
        getSerializedSize();
      }
      return cachedSize;
    }

    @Override
    public int getSerializedSize() {
      int size = 0;
      if (hasResult()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeInt32Size(1, getResult());
      }
      if (hasPayloadtype()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeUInt32Size(2, getPayloadtype());
      }
      if (hasGetchatroominforesp()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeMessageSize(4, getGetchatroominforesp());
      }
      if (hasApplyjoinchatroomresp()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeMessageSize(5, getApplyjoinchatroomresp());
      }
      if (hasQuitchatroomresp()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeMessageSize(6, getQuitchatroomresp());
      }
      if (hasNewmsgnotify()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeMessageSize(13, getNewmsgnotify());
      }
      if (hasMemberjoinnotify()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeMessageSize(16, getMemberjoinnotify());
      }
      if (hasMemberquitnotify()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeMessageSize(17, getMemberquitnotify());
      }
      if (hasSubresp()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeMessageSize(18, getSubresp());
      }
      if (hasReason()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeBytesSize(100, getReason());
      }
      for (com.huajiao.comm.protobuf.ChatRoomProto.ChatRoomMNotify element : getMultinotifyList()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeMessageSize(200, element);
      }
      cachedSize = size;
      return size;
    }

    @Override
    public ChatRoomDownToUser mergeFrom(
        com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            setResult(input.readInt32());
            break;
          }
          case 16: {
            setPayloadtype(input.readUInt32());
            break;
          }
          case 34: {
            com.huajiao.comm.protobuf.ChatRoomProto.GetChatRoomDetailResponse value = new com.huajiao.comm.protobuf.ChatRoomProto.GetChatRoomDetailResponse();
            input.readMessage(value);
            setGetchatroominforesp(value);
            break;
          }
          case 42: {
            com.huajiao.comm.protobuf.ChatRoomProto.ApplyJoinChatRoomResponse value = new com.huajiao.comm.protobuf.ChatRoomProto.ApplyJoinChatRoomResponse();
            input.readMessage(value);
            setApplyjoinchatroomresp(value);
            break;
          }
          case 50: {
            com.huajiao.comm.protobuf.ChatRoomProto.QuitChatRoomResponse value = new com.huajiao.comm.protobuf.ChatRoomProto.QuitChatRoomResponse();
            input.readMessage(value);
            setQuitchatroomresp(value);
            break;
          }
          case 106: {
            com.huajiao.comm.protobuf.ChatRoomProto.ChatRoomNewMsg value = new com.huajiao.comm.protobuf.ChatRoomProto.ChatRoomNewMsg();
            input.readMessage(value);
            setNewmsgnotify(value);
            break;
          }
          case 130: {
            com.huajiao.comm.protobuf.ChatRoomProto.MemberJoinChatRoomNotify value = new com.huajiao.comm.protobuf.ChatRoomProto.MemberJoinChatRoomNotify();
            input.readMessage(value);
            setMemberjoinnotify(value);
            break;
          }
          case 138: {
            com.huajiao.comm.protobuf.ChatRoomProto.MemberQuitChatRoomNotify value = new com.huajiao.comm.protobuf.ChatRoomProto.MemberQuitChatRoomNotify();
            input.readMessage(value);
            setMemberquitnotify(value);
            break;
          }
          case 146: {
            com.huajiao.comm.protobuf.ChatRoomProto.SubscribeResponse value = new com.huajiao.comm.protobuf.ChatRoomProto.SubscribeResponse();
            input.readMessage(value);
            setSubresp(value);
            break;
          }
          case 802: {
            setReason(input.readBytes());
            break;
          }
          case 1602: {
            com.huajiao.comm.protobuf.ChatRoomProto.ChatRoomMNotify value = new com.huajiao.comm.protobuf.ChatRoomProto.ChatRoomMNotify();
            input.readMessage(value);
            addMultinotify(value);
            break;
          }
        }
      }
    }

    public static ChatRoomDownToUser parseFrom(byte[] data)
        throws com.google.protobuf.micro.InvalidProtocolBufferMicroException {
      return (ChatRoomDownToUser) (new ChatRoomDownToUser().mergeFrom(data));
    }

    public static ChatRoomDownToUser parseFrom(
            com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      return new ChatRoomDownToUser().mergeFrom(input);
    }

  }

  @SuppressWarnings("hiding")
  public static final class ChatRoomPacket extends
      com.google.protobuf.micro.MessageMicro {
    public ChatRoomPacket() {}

    // required bytes roomid = 1;
    public static final int ROOMID_FIELD_NUMBER = 1;
    private boolean hasRoomid;
    private com.google.protobuf.micro.ByteStringMicro roomid_ = com.google.protobuf.micro.ByteStringMicro.EMPTY;
    public com.google.protobuf.micro.ByteStringMicro getRoomid() { return roomid_; }
    public boolean hasRoomid() { return hasRoomid; }
    public ChatRoomPacket setRoomid(com.google.protobuf.micro.ByteStringMicro value) {
      hasRoomid = true;
      roomid_ = value;
      return this;
    }
    public ChatRoomPacket clearRoomid() {
      hasRoomid = false;
      roomid_ = com.google.protobuf.micro.ByteStringMicro.EMPTY;
      return this;
    }

    // optional .pb.ChatRoomUpToServer to_server_data = 2;
    public static final int TO_SERVER_DATA_FIELD_NUMBER = 2;
    private boolean hasToServerData;
    private com.huajiao.comm.protobuf.ChatRoomProto.ChatRoomUpToServer toServerData_ = null;
    public boolean hasToServerData() { return hasToServerData; }
    public com.huajiao.comm.protobuf.ChatRoomProto.ChatRoomUpToServer getToServerData() { return toServerData_; }
    public ChatRoomPacket setToServerData(com.huajiao.comm.protobuf.ChatRoomProto.ChatRoomUpToServer value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hasToServerData = true;
      toServerData_ = value;
      return this;
    }
    public ChatRoomPacket clearToServerData() {
      hasToServerData = false;
      toServerData_ = null;
      return this;
    }

    // optional .pb.ChatRoomDownToUser to_user_data = 3;
    public static final int TO_USER_DATA_FIELD_NUMBER = 3;
    private boolean hasToUserData;
    private com.huajiao.comm.protobuf.ChatRoomProto.ChatRoomDownToUser toUserData_ = null;
    public boolean hasToUserData() { return hasToUserData; }
    public com.huajiao.comm.protobuf.ChatRoomProto.ChatRoomDownToUser getToUserData() { return toUserData_; }
    public ChatRoomPacket setToUserData(com.huajiao.comm.protobuf.ChatRoomProto.ChatRoomDownToUser value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hasToUserData = true;
      toUserData_ = value;
      return this;
    }
    public ChatRoomPacket clearToUserData() {
      hasToUserData = false;
      toUserData_ = null;
      return this;
    }

    // optional string uuid = 4;
    public static final int UUID_FIELD_NUMBER = 4;
    private boolean hasUuid;
    private java.lang.String uuid_ = "";
    public java.lang.String getUuid() { return uuid_; }
    public boolean hasUuid() { return hasUuid; }
    public ChatRoomPacket setUuid(java.lang.String value) {
      hasUuid = true;
      uuid_ = value;
      return this;
    }
    public ChatRoomPacket clearUuid() {
      hasUuid = false;
      uuid_ = "";
      return this;
    }

    // optional uint64 client_sn = 5;
    public static final int CLIENT_SN_FIELD_NUMBER = 5;
    private boolean hasClientSn;
    private long clientSn_ = 0L;
    public long getClientSn() { return clientSn_; }
    public boolean hasClientSn() { return hasClientSn; }
    public ChatRoomPacket setClientSn(long value) {
      hasClientSn = true;
      clientSn_ = value;
      return this;
    }
    public ChatRoomPacket clearClientSn() {
      hasClientSn = false;
      clientSn_ = 0L;
      return this;
    }

    // optional uint32 appid = 6;
    public static final int APPID_FIELD_NUMBER = 6;
    private boolean hasAppid;
    private int appid_ = 0;
    public int getAppid() { return appid_; }
    public boolean hasAppid() { return hasAppid; }
    public ChatRoomPacket setAppid(int value) {
      hasAppid = true;
      appid_ = value;
      return this;
    }
    public ChatRoomPacket clearAppid() {
      hasAppid = false;
      appid_ = 0;
      return this;
    }

    public final ChatRoomPacket clear() {
      clearRoomid();
      clearToServerData();
      clearToUserData();
      clearUuid();
      clearClientSn();
      clearAppid();
      cachedSize = -1;
      return this;
    }

    public final boolean isInitialized() {
      if (!hasRoomid) return false;
      if (hasToServerData()) {
        if (!getToServerData().isInitialized()) return false;
      }
      if (hasToUserData()) {
        if (!getToUserData().isInitialized()) return false;
      }
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.micro.CodedOutputStreamMicro output)
                        throws java.io.IOException {
      if (hasRoomid()) {
        output.writeBytes(1, getRoomid());
      }
      if (hasToServerData()) {
        output.writeMessage(2, getToServerData());
      }
      if (hasToUserData()) {
        output.writeMessage(3, getToUserData());
      }
      if (hasUuid()) {
        output.writeString(4, getUuid());
      }
      if (hasClientSn()) {
        output.writeUInt64(5, getClientSn());
      }
      if (hasAppid()) {
        output.writeUInt32(6, getAppid());
      }
    }

    private int cachedSize = -1;
    @Override
    public int getCachedSize() {
      if (cachedSize < 0) {
        // getSerializedSize sets cachedSize
        getSerializedSize();
      }
      return cachedSize;
    }

    @Override
    public int getSerializedSize() {
      int size = 0;
      if (hasRoomid()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeBytesSize(1, getRoomid());
      }
      if (hasToServerData()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeMessageSize(2, getToServerData());
      }
      if (hasToUserData()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeMessageSize(3, getToUserData());
      }
      if (hasUuid()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(4, getUuid());
      }
      if (hasClientSn()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeUInt64Size(5, getClientSn());
      }
      if (hasAppid()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeUInt32Size(6, getAppid());
      }
      cachedSize = size;
      return size;
    }

    @Override
    public ChatRoomPacket mergeFrom(
        com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            setRoomid(input.readBytes());
            break;
          }
          case 18: {
            com.huajiao.comm.protobuf.ChatRoomProto.ChatRoomUpToServer value = new com.huajiao.comm.protobuf.ChatRoomProto.ChatRoomUpToServer();
            input.readMessage(value);
            setToServerData(value);
            break;
          }
          case 26: {
            com.huajiao.comm.protobuf.ChatRoomProto.ChatRoomDownToUser value = new com.huajiao.comm.protobuf.ChatRoomProto.ChatRoomDownToUser();
            input.readMessage(value);
            setToUserData(value);
            break;
          }
          case 34: {
            setUuid(input.readString());
            break;
          }
          case 40: {
            setClientSn(input.readUInt64());
            break;
          }
          case 48: {
            setAppid(input.readUInt32());
            break;
          }
        }
      }
    }

    public static ChatRoomPacket parseFrom(byte[] data)
        throws com.google.protobuf.micro.InvalidProtocolBufferMicroException {
      return (ChatRoomPacket) (new ChatRoomPacket().mergeFrom(data));
    }

    public static ChatRoomPacket parseFrom(
            com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      return new ChatRoomPacket().mergeFrom(input);
    }

  }

}
