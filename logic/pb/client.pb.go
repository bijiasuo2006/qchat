// Code generated by protoc-gen-go.
// source: client.proto
// DO NOT EDIT!

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Common Define Begin
type Pair struct {
	Key              []byte `protobuf:"bytes,1,req,name=key" json:"key,omitempty"`
	Value            []byte `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Pair) Reset()                    { *m = Pair{} }
func (m *Pair) String() string            { return proto.CompactTextString(m) }
func (*Pair) ProtoMessage()               {}
func (*Pair) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *Pair) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *Pair) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type Error struct {
	Id               *uint32 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Description      []byte  `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Error) Reset()                    { *m = Error{} }
func (m *Error) String() string            { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()               {}
func (*Error) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *Error) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Error) GetDescription() []byte {
	if m != nil {
		return m.Description
	}
	return nil
}

type User struct {
	Userid           *string `protobuf:"bytes,1,req,name=userid" json:"userid,omitempty"`
	PropertyPairs    []*Pair `protobuf:"bytes,2,rep,name=property_pairs" json:"property_pairs,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *User) GetUserid() string {
	if m != nil && m.Userid != nil {
		return *m.Userid
	}
	return ""
}

func (m *User) GetPropertyPairs() []*Pair {
	if m != nil {
		return m.PropertyPairs
	}
	return nil
}

type Info struct {
	PropertyPairs    []*Pair `protobuf:"bytes,1,rep,name=property_pairs" json:"property_pairs,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Info) Reset()                    { *m = Info{} }
func (m *Info) String() string            { return proto.CompactTextString(m) }
func (*Info) ProtoMessage()               {}
func (*Info) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *Info) GetPropertyPairs() []*Pair {
	if m != nil {
		return m.PropertyPairs
	}
	return nil
}

// plain txt
type LoginReq struct {
	MobileType *string `protobuf:"bytes,1,req,name=mobile_type" json:"mobile_type,omitempty"`
	//
	// net_type: 0:unkonwn 1:2g 2:3g 3:wifi 4:ethe
	NetType          *uint32 `protobuf:"varint,2,req,name=net_type" json:"net_type,omitempty"`
	ServerRam        *string `protobuf:"bytes,3,req,name=server_ram" json:"server_ram,omitempty"`
	SecretRam        []byte  `protobuf:"bytes,4,opt,name=secret_ram" json:"secret_ram,omitempty"`
	AppId            *uint32 `protobuf:"varint,5,opt,name=app_id,def=2000" json:"app_id,omitempty"`
	HeartFeq         *uint32 `protobuf:"varint,6,opt,name=heart_feq,def=300" json:"heart_feq,omitempty"`
	Deviceid         *string `protobuf:"bytes,7,opt,name=deviceid,def=" json:"deviceid,omitempty"`
	Platform         *string `protobuf:"bytes,8,opt,name=platform" json:"platform,omitempty"`
	VerfCode         *string `protobuf:"bytes,9,opt,name=verf_code" json:"verf_code,omitempty"`
	NotEncrypt       *bool   `protobuf:"varint,10,opt,name=not_encrypt" json:"not_encrypt,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *LoginReq) Reset()                    { *m = LoginReq{} }
func (m *LoginReq) String() string            { return proto.CompactTextString(m) }
func (*LoginReq) ProtoMessage()               {}
func (*LoginReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

const Default_LoginReq_AppId uint32 = 2000
const Default_LoginReq_HeartFeq uint32 = 300

func (m *LoginReq) GetMobileType() string {
	if m != nil && m.MobileType != nil {
		return *m.MobileType
	}
	return ""
}

func (m *LoginReq) GetNetType() uint32 {
	if m != nil && m.NetType != nil {
		return *m.NetType
	}
	return 0
}

func (m *LoginReq) GetServerRam() string {
	if m != nil && m.ServerRam != nil {
		return *m.ServerRam
	}
	return ""
}

func (m *LoginReq) GetSecretRam() []byte {
	if m != nil {
		return m.SecretRam
	}
	return nil
}

func (m *LoginReq) GetAppId() uint32 {
	if m != nil && m.AppId != nil {
		return *m.AppId
	}
	return Default_LoginReq_AppId
}

func (m *LoginReq) GetHeartFeq() uint32 {
	if m != nil && m.HeartFeq != nil {
		return *m.HeartFeq
	}
	return Default_LoginReq_HeartFeq
}

func (m *LoginReq) GetDeviceid() string {
	if m != nil && m.Deviceid != nil {
		return *m.Deviceid
	}
	return ""
}

func (m *LoginReq) GetPlatform() string {
	if m != nil && m.Platform != nil {
		return *m.Platform
	}
	return ""
}

func (m *LoginReq) GetVerfCode() string {
	if m != nil && m.VerfCode != nil {
		return *m.VerfCode
	}
	return ""
}

func (m *LoginReq) GetNotEncrypt() bool {
	if m != nil && m.NotEncrypt != nil {
		return *m.NotEncrypt
	}
	return false
}

// crypt txt, key is md5(password)
type LoginResp struct {
	Timestamp        *uint32 `protobuf:"varint,1,req,name=timestamp" json:"timestamp,omitempty"`
	SessionId        *string `protobuf:"bytes,2,req,name=session_id" json:"session_id,omitempty"`
	SessionKey       *string `protobuf:"bytes,3,req,name=session_key" json:"session_key,omitempty"`
	ClientLoginIp    *string `protobuf:"bytes,4,opt,name=client_login_ip" json:"client_login_ip,omitempty"`
	Serverip         *string `protobuf:"bytes,5,opt,name=serverip" json:"serverip,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *LoginResp) Reset()                    { *m = LoginResp{} }
func (m *LoginResp) String() string            { return proto.CompactTextString(m) }
func (*LoginResp) ProtoMessage()               {}
func (*LoginResp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *LoginResp) GetTimestamp() uint32 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *LoginResp) GetSessionId() string {
	if m != nil && m.SessionId != nil {
		return *m.SessionId
	}
	return ""
}

func (m *LoginResp) GetSessionKey() string {
	if m != nil && m.SessionKey != nil {
		return *m.SessionKey
	}
	return ""
}

func (m *LoginResp) GetClientLoginIp() string {
	if m != nil && m.ClientLoginIp != nil {
		return *m.ClientLoginIp
	}
	return ""
}

func (m *LoginResp) GetServerip() string {
	if m != nil && m.Serverip != nil {
		return *m.Serverip
	}
	return ""
}

// crypt txt, key is session_key
type ChatReq struct {
	Body   []byte  `protobuf:"bytes,1,req,name=body" json:"body,omitempty"`
	BodyId *uint32 `protobuf:"varint,2,opt,name=body_id" json:"body_id,omitempty"`
	//
	// more_flag: 0:end 1:continue
	MoreFlag *uint32 `protobuf:"varint,3,opt,name=more_flag" json:"more_flag,omitempty"`
	//
	// body_type: 0:text 1:audio 2:pic_url, 3:audio_and_pic
	BodyType   *uint32 `protobuf:"varint,4,req,name=body_type" json:"body_type,omitempty"`
	Store      *bool   `protobuf:"varint,5,opt,name=store" json:"store,omitempty"`
	MParameter []byte  `protobuf:"bytes,6,opt,name=m_parameter" json:"m_parameter,omitempty"`
	ServiceId  *uint32 `protobuf:"varint,7,opt,name=service_id" json:"service_id,omitempty"`
	SParameter []byte  `protobuf:"bytes,8,opt,name=s_parameter" json:"s_parameter,omitempty"`
	// 9 and 10 wasted
	// optional string  conv_id     = 9; // conversation id, patched in every message
	// optional bool   is_new_conv  = 10 [default = false]; // whether this is the first message of a new conversation
	ExpireTime       *uint32 `protobuf:"varint,12,opt,name=expire_time" json:"expire_time,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ChatReq) Reset()                    { *m = ChatReq{} }
func (m *ChatReq) String() string            { return proto.CompactTextString(m) }
func (*ChatReq) ProtoMessage()               {}
func (*ChatReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

func (m *ChatReq) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *ChatReq) GetBodyId() uint32 {
	if m != nil && m.BodyId != nil {
		return *m.BodyId
	}
	return 0
}

func (m *ChatReq) GetMoreFlag() uint32 {
	if m != nil && m.MoreFlag != nil {
		return *m.MoreFlag
	}
	return 0
}

func (m *ChatReq) GetBodyType() uint32 {
	if m != nil && m.BodyType != nil {
		return *m.BodyType
	}
	return 0
}

func (m *ChatReq) GetStore() bool {
	if m != nil && m.Store != nil {
		return *m.Store
	}
	return false
}

func (m *ChatReq) GetMParameter() []byte {
	if m != nil {
		return m.MParameter
	}
	return nil
}

func (m *ChatReq) GetServiceId() uint32 {
	if m != nil && m.ServiceId != nil {
		return *m.ServiceId
	}
	return 0
}

func (m *ChatReq) GetSParameter() []byte {
	if m != nil {
		return m.SParameter
	}
	return nil
}

func (m *ChatReq) GetExpireTime() uint32 {
	if m != nil && m.ExpireTime != nil {
		return *m.ExpireTime
	}
	return 0
}

type ChatResp struct {
	Result           *uint32 `protobuf:"varint,1,req,name=result" json:"result,omitempty"`
	BodyId           *uint32 `protobuf:"varint,2,opt,name=body_id" json:"body_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ChatResp) Reset()                    { *m = ChatResp{} }
func (m *ChatResp) String() string            { return proto.CompactTextString(m) }
func (*ChatResp) ProtoMessage()               {}
func (*ChatResp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{7} }

func (m *ChatResp) GetResult() uint32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *ChatResp) GetBodyId() uint32 {
	if m != nil && m.BodyId != nil {
		return *m.BodyId
	}
	return 0
}

type GetInfoReq struct {
	InfoType         *string `protobuf:"bytes,1,req,name=info_type" json:"info_type,omitempty"`
	GetInfoId        *int64  `protobuf:"varint,2,req,name=get_info_id" json:"get_info_id,omitempty"`
	GetInfoOffset    *int32  `protobuf:"varint,3,opt,name=get_info_offset" json:"get_info_offset,omitempty"`
	SParameter       []byte  `protobuf:"bytes,4,opt,name=s_parameter" json:"s_parameter,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GetInfoReq) Reset()                    { *m = GetInfoReq{} }
func (m *GetInfoReq) String() string            { return proto.CompactTextString(m) }
func (*GetInfoReq) ProtoMessage()               {}
func (*GetInfoReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{8} }

func (m *GetInfoReq) GetInfoType() string {
	if m != nil && m.InfoType != nil {
		return *m.InfoType
	}
	return ""
}

func (m *GetInfoReq) GetGetInfoId() int64 {
	if m != nil && m.GetInfoId != nil {
		return *m.GetInfoId
	}
	return 0
}

func (m *GetInfoReq) GetGetInfoOffset() int32 {
	if m != nil && m.GetInfoOffset != nil {
		return *m.GetInfoOffset
	}
	return 0
}

func (m *GetInfoReq) GetSParameter() []byte {
	if m != nil {
		return m.SParameter
	}
	return nil
}

type GetInfoResp struct {
	InfoType         *string `protobuf:"bytes,1,req,name=info_type" json:"info_type,omitempty"`
	Infos            []*Info `protobuf:"bytes,2,rep,name=infos" json:"infos,omitempty"`
	LastInfoId       *int64  `protobuf:"varint,3,opt,name=last_info_id" json:"last_info_id,omitempty"`
	SParameter       []byte  `protobuf:"bytes,4,opt,name=s_parameter" json:"s_parameter,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GetInfoResp) Reset()                    { *m = GetInfoResp{} }
func (m *GetInfoResp) String() string            { return proto.CompactTextString(m) }
func (*GetInfoResp) ProtoMessage()               {}
func (*GetInfoResp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{9} }

func (m *GetInfoResp) GetInfoType() string {
	if m != nil && m.InfoType != nil {
		return *m.InfoType
	}
	return ""
}

func (m *GetInfoResp) GetInfos() []*Info {
	if m != nil {
		return m.Infos
	}
	return nil
}

func (m *GetInfoResp) GetLastInfoId() int64 {
	if m != nil && m.LastInfoId != nil {
		return *m.LastInfoId
	}
	return 0
}

func (m *GetInfoResp) GetSParameter() []byte {
	if m != nil {
		return m.SParameter
	}
	return nil
}

type GetMultiInfosReq struct {
	InfoType         *string `protobuf:"bytes,1,req,name=info_type" json:"info_type,omitempty"`
	GetInfoIds       []int64 `protobuf:"varint,2,rep,name=get_info_ids" json:"get_info_ids,omitempty"`
	SParameter       []byte  `protobuf:"bytes,3,opt,name=s_parameter" json:"s_parameter,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GetMultiInfosReq) Reset()                    { *m = GetMultiInfosReq{} }
func (m *GetMultiInfosReq) String() string            { return proto.CompactTextString(m) }
func (*GetMultiInfosReq) ProtoMessage()               {}
func (*GetMultiInfosReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{10} }

func (m *GetMultiInfosReq) GetInfoType() string {
	if m != nil && m.InfoType != nil {
		return *m.InfoType
	}
	return ""
}

func (m *GetMultiInfosReq) GetGetInfoIds() []int64 {
	if m != nil {
		return m.GetInfoIds
	}
	return nil
}

func (m *GetMultiInfosReq) GetSParameter() []byte {
	if m != nil {
		return m.SParameter
	}
	return nil
}

type GetMultiInfosResp struct {
	InfoType         *string `protobuf:"bytes,1,req,name=info_type" json:"info_type,omitempty"`
	Infos            []*Info `protobuf:"bytes,2,rep,name=infos" json:"infos,omitempty"`
	LastInfoId       *int64  `protobuf:"varint,3,opt,name=last_info_id" json:"last_info_id,omitempty"`
	SParameter       []byte  `protobuf:"bytes,4,opt,name=s_parameter" json:"s_parameter,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GetMultiInfosResp) Reset()                    { *m = GetMultiInfosResp{} }
func (m *GetMultiInfosResp) String() string            { return proto.CompactTextString(m) }
func (*GetMultiInfosResp) ProtoMessage()               {}
func (*GetMultiInfosResp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{11} }

func (m *GetMultiInfosResp) GetInfoType() string {
	if m != nil && m.InfoType != nil {
		return *m.InfoType
	}
	return ""
}

func (m *GetMultiInfosResp) GetInfos() []*Info {
	if m != nil {
		return m.Infos
	}
	return nil
}

func (m *GetMultiInfosResp) GetLastInfoId() int64 {
	if m != nil && m.LastInfoId != nil {
		return *m.LastInfoId
	}
	return 0
}

func (m *GetMultiInfosResp) GetSParameter() []byte {
	if m != nil {
		return m.SParameter
	}
	return nil
}

type LogoutReq struct {
	Reason           *string `protobuf:"bytes,1,opt,name=reason" json:"reason,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *LogoutReq) Reset()                    { *m = LogoutReq{} }
func (m *LogoutReq) String() string            { return proto.CompactTextString(m) }
func (*LogoutReq) ProtoMessage()               {}
func (*LogoutReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{12} }

func (m *LogoutReq) GetReason() string {
	if m != nil && m.Reason != nil {
		return *m.Reason
	}
	return ""
}

type LogoutResp struct {
	Result           *uint32 `protobuf:"varint,1,req,name=result" json:"result,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *LogoutResp) Reset()                    { *m = LogoutResp{} }
func (m *LogoutResp) String() string            { return proto.CompactTextString(m) }
func (*LogoutResp) ProtoMessage()               {}
func (*LogoutResp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{13} }

func (m *LogoutResp) GetResult() uint32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

type InitLoginReq struct {
	ClientRam        *string `protobuf:"bytes,1,req,name=client_ram" json:"client_ram,omitempty"`
	Sig              *string `protobuf:"bytes,2,opt,name=sig" json:"sig,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *InitLoginReq) Reset()                    { *m = InitLoginReq{} }
func (m *InitLoginReq) String() string            { return proto.CompactTextString(m) }
func (*InitLoginReq) ProtoMessage()               {}
func (*InitLoginReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{14} }

func (m *InitLoginReq) GetClientRam() string {
	if m != nil && m.ClientRam != nil {
		return *m.ClientRam
	}
	return ""
}

func (m *InitLoginReq) GetSig() string {
	if m != nil && m.Sig != nil {
		return *m.Sig
	}
	return ""
}

type InitLoginResp struct {
	ClientRam        *string `protobuf:"bytes,1,req,name=client_ram" json:"client_ram,omitempty"`
	ServerRam        *string `protobuf:"bytes,2,req,name=server_ram" json:"server_ram,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *InitLoginResp) Reset()                    { *m = InitLoginResp{} }
func (m *InitLoginResp) String() string            { return proto.CompactTextString(m) }
func (*InitLoginResp) ProtoMessage()               {}
func (*InitLoginResp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{15} }

func (m *InitLoginResp) GetClientRam() string {
	if m != nil && m.ClientRam != nil {
		return *m.ClientRam
	}
	return ""
}

func (m *InitLoginResp) GetServerRam() string {
	if m != nil && m.ServerRam != nil {
		return *m.ServerRam
	}
	return ""
}

// all service control cmd
type Service_Req struct {
	ServiceId        *uint32 `protobuf:"varint,1,req,name=service_id" json:"service_id,omitempty"`
	Request          []byte  `protobuf:"bytes,2,req,name=request" json:"request,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Service_Req) Reset()                    { *m = Service_Req{} }
func (m *Service_Req) String() string            { return proto.CompactTextString(m) }
func (*Service_Req) ProtoMessage()               {}
func (*Service_Req) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{16} }

func (m *Service_Req) GetServiceId() uint32 {
	if m != nil && m.ServiceId != nil {
		return *m.ServiceId
	}
	return 0
}

func (m *Service_Req) GetRequest() []byte {
	if m != nil {
		return m.Request
	}
	return nil
}

type Service_Resp struct {
	ServiceId        *uint32 `protobuf:"varint,1,req,name=service_id" json:"service_id,omitempty"`
	Response         []byte  `protobuf:"bytes,2,req,name=response" json:"response,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Service_Resp) Reset()                    { *m = Service_Resp{} }
func (m *Service_Resp) String() string            { return proto.CompactTextString(m) }
func (*Service_Resp) ProtoMessage()               {}
func (*Service_Resp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{17} }

func (m *Service_Resp) GetServiceId() uint32 {
	if m != nil && m.ServiceId != nil {
		return *m.ServiceId
	}
	return 0
}

func (m *Service_Resp) GetResponse() []byte {
	if m != nil {
		return m.Response
	}
	return nil
}

// a lot of userid query
type ReqEQ1User struct {
	Userid           *string `protobuf:"bytes,1,req,name=userid" json:"userid,omitempty"`
	UserType         *string `protobuf:"bytes,2,req,name=user_type" json:"user_type,omitempty"`
	AppId            *uint32 `protobuf:"varint,3,opt,name=app_id" json:"app_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ReqEQ1User) Reset()                    { *m = ReqEQ1User{} }
func (m *ReqEQ1User) String() string            { return proto.CompactTextString(m) }
func (*ReqEQ1User) ProtoMessage()               {}
func (*ReqEQ1User) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{18} }

func (m *ReqEQ1User) GetUserid() string {
	if m != nil && m.Userid != nil {
		return *m.Userid
	}
	return ""
}

func (m *ReqEQ1User) GetUserType() string {
	if m != nil && m.UserType != nil {
		return *m.UserType
	}
	return ""
}

func (m *ReqEQ1User) GetAppId() uint32 {
	if m != nil && m.AppId != nil {
		return *m.AppId
	}
	return 0
}

type RespEQ1User struct {
	Userid           *string `protobuf:"bytes,1,req,name=userid" json:"userid,omitempty"`
	UserType         *string `protobuf:"bytes,2,req,name=user_type" json:"user_type,omitempty"`
	Status           *int32  `protobuf:"varint,3,req,name=status" json:"status,omitempty"`
	Jid              *string `protobuf:"bytes,4,opt,name=jid" json:"jid,omitempty"`
	AppId            *uint32 `protobuf:"varint,5,opt,name=app_id" json:"app_id,omitempty"`
	Platform         *string `protobuf:"bytes,6,opt,name=platform" json:"platform,omitempty"`
	MobileType       *string `protobuf:"bytes,7,opt,name=mobile_type" json:"mobile_type,omitempty"`
	ClientVer        *uint32 `protobuf:"varint,8,opt,name=client_ver" json:"client_ver,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RespEQ1User) Reset()                    { *m = RespEQ1User{} }
func (m *RespEQ1User) String() string            { return proto.CompactTextString(m) }
func (*RespEQ1User) ProtoMessage()               {}
func (*RespEQ1User) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{19} }

func (m *RespEQ1User) GetUserid() string {
	if m != nil && m.Userid != nil {
		return *m.Userid
	}
	return ""
}

func (m *RespEQ1User) GetUserType() string {
	if m != nil && m.UserType != nil {
		return *m.UserType
	}
	return ""
}

func (m *RespEQ1User) GetStatus() int32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

func (m *RespEQ1User) GetJid() string {
	if m != nil && m.Jid != nil {
		return *m.Jid
	}
	return ""
}

func (m *RespEQ1User) GetAppId() uint32 {
	if m != nil && m.AppId != nil {
		return *m.AppId
	}
	return 0
}

func (m *RespEQ1User) GetPlatform() string {
	if m != nil && m.Platform != nil {
		return *m.Platform
	}
	return ""
}

func (m *RespEQ1User) GetMobileType() string {
	if m != nil && m.MobileType != nil {
		return *m.MobileType
	}
	return ""
}

func (m *RespEQ1User) GetClientVer() uint32 {
	if m != nil && m.ClientVer != nil {
		return *m.ClientVer
	}
	return 0
}

type Ex1QueryUserStatusReq struct {
	UserList         []*ReqEQ1User `protobuf:"bytes,1,rep,name=user_list" json:"user_list,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *Ex1QueryUserStatusReq) Reset()                    { *m = Ex1QueryUserStatusReq{} }
func (m *Ex1QueryUserStatusReq) String() string            { return proto.CompactTextString(m) }
func (*Ex1QueryUserStatusReq) ProtoMessage()               {}
func (*Ex1QueryUserStatusReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{20} }

func (m *Ex1QueryUserStatusReq) GetUserList() []*ReqEQ1User {
	if m != nil {
		return m.UserList
	}
	return nil
}

type Ex1QueryUserStatusResp struct {
	UserList         []*RespEQ1User `protobuf:"bytes,1,rep,name=user_list" json:"user_list,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *Ex1QueryUserStatusResp) Reset()                    { *m = Ex1QueryUserStatusResp{} }
func (m *Ex1QueryUserStatusResp) String() string            { return proto.CompactTextString(m) }
func (*Ex1QueryUserStatusResp) ProtoMessage()               {}
func (*Ex1QueryUserStatusResp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{21} }

func (m *Ex1QueryUserStatusResp) GetUserList() []*RespEQ1User {
	if m != nil {
		return m.UserList
	}
	return nil
}

type Request struct {
	Login            *LoginReq              `protobuf:"bytes,2,opt,name=login" json:"login,omitempty"`
	Chat             *ChatReq               `protobuf:"bytes,3,opt,name=chat" json:"chat,omitempty"`
	GetInfo          *GetInfoReq            `protobuf:"bytes,5,opt,name=get_info" json:"get_info,omitempty"`
	Logout           *LogoutReq             `protobuf:"bytes,6,opt,name=logout" json:"logout,omitempty"`
	InitLoginReq     *InitLoginReq          `protobuf:"bytes,9,opt,name=init_login_req" json:"init_login_req,omitempty"`
	ServiceReq       *Service_Req           `protobuf:"bytes,11,opt,name=service_req" json:"service_req,omitempty"`
	E1QueryUser      *Ex1QueryUserStatusReq `protobuf:"bytes,12,opt,name=e1_query_user" json:"e1_query_user,omitempty"`
	GetMultiInfos    *GetMultiInfosReq      `protobuf:"bytes,100,opt,name=get_multi_infos" json:"get_multi_infos,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{22} }

func (m *Request) GetLogin() *LoginReq {
	if m != nil {
		return m.Login
	}
	return nil
}

func (m *Request) GetChat() *ChatReq {
	if m != nil {
		return m.Chat
	}
	return nil
}

func (m *Request) GetGetInfo() *GetInfoReq {
	if m != nil {
		return m.GetInfo
	}
	return nil
}

func (m *Request) GetLogout() *LogoutReq {
	if m != nil {
		return m.Logout
	}
	return nil
}

func (m *Request) GetInitLoginReq() *InitLoginReq {
	if m != nil {
		return m.InitLoginReq
	}
	return nil
}

func (m *Request) GetServiceReq() *Service_Req {
	if m != nil {
		return m.ServiceReq
	}
	return nil
}

func (m *Request) GetE1QueryUser() *Ex1QueryUserStatusReq {
	if m != nil {
		return m.E1QueryUser
	}
	return nil
}

func (m *Request) GetGetMultiInfos() *GetMultiInfosReq {
	if m != nil {
		return m.GetMultiInfos
	}
	return nil
}

type Response struct {
	Error            *Error                  `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	Login            *LoginResp              `protobuf:"bytes,3,opt,name=login" json:"login,omitempty"`
	Chat             *ChatResp               `protobuf:"bytes,4,opt,name=chat" json:"chat,omitempty"`
	GetInfo          *GetInfoResp            `protobuf:"bytes,6,opt,name=get_info" json:"get_info,omitempty"`
	Logout           *LogoutResp             `protobuf:"bytes,7,opt,name=logout" json:"logout,omitempty"`
	InitLoginResp    *InitLoginResp          `protobuf:"bytes,10,opt,name=init_login_resp" json:"init_login_resp,omitempty"`
	ServiceResp      *Service_Resp           `protobuf:"bytes,12,opt,name=service_resp" json:"service_resp,omitempty"`
	E1QueryUser      *Ex1QueryUserStatusResp `protobuf:"bytes,13,opt,name=e1_query_user" json:"e1_query_user,omitempty"`
	GetMultiInfos    *GetMultiInfosResp      `protobuf:"bytes,100,opt,name=get_multi_infos" json:"get_multi_infos,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{23} }

func (m *Response) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *Response) GetLogin() *LoginResp {
	if m != nil {
		return m.Login
	}
	return nil
}

func (m *Response) GetChat() *ChatResp {
	if m != nil {
		return m.Chat
	}
	return nil
}

func (m *Response) GetGetInfo() *GetInfoResp {
	if m != nil {
		return m.GetInfo
	}
	return nil
}

func (m *Response) GetLogout() *LogoutResp {
	if m != nil {
		return m.Logout
	}
	return nil
}

func (m *Response) GetInitLoginResp() *InitLoginResp {
	if m != nil {
		return m.InitLoginResp
	}
	return nil
}

func (m *Response) GetServiceResp() *Service_Resp {
	if m != nil {
		return m.ServiceResp
	}
	return nil
}

func (m *Response) GetE1QueryUser() *Ex1QueryUserStatusResp {
	if m != nil {
		return m.E1QueryUser
	}
	return nil
}

func (m *Response) GetGetMultiInfos() *GetMultiInfosResp {
	if m != nil {
		return m.GetMultiInfos
	}
	return nil
}

// Server active send, Client passive receive Message Begin
type NewMessageNotify struct {
	InfoType          *string `protobuf:"bytes,1,req,name=info_type" json:"info_type,omitempty"`
	InfoContent       []byte  `protobuf:"bytes,2,opt,name=info_content" json:"info_content,omitempty"`
	InfoId            *int64  `protobuf:"varint,3,opt,name=info_id" json:"info_id,omitempty"`
	QueryAfterSeconds *uint32 `protobuf:"varint,4,opt,name=query_after_seconds" json:"query_after_seconds,omitempty"`
	XXX_unrecognized  []byte  `json:"-"`
}

func (m *NewMessageNotify) Reset()                    { *m = NewMessageNotify{} }
func (m *NewMessageNotify) String() string            { return proto.CompactTextString(m) }
func (*NewMessageNotify) ProtoMessage()               {}
func (*NewMessageNotify) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{24} }

func (m *NewMessageNotify) GetInfoType() string {
	if m != nil && m.InfoType != nil {
		return *m.InfoType
	}
	return ""
}

func (m *NewMessageNotify) GetInfoContent() []byte {
	if m != nil {
		return m.InfoContent
	}
	return nil
}

func (m *NewMessageNotify) GetInfoId() int64 {
	if m != nil && m.InfoId != nil {
		return *m.InfoId
	}
	return 0
}

func (m *NewMessageNotify) GetQueryAfterSeconds() uint32 {
	if m != nil && m.QueryAfterSeconds != nil {
		return *m.QueryAfterSeconds
	}
	return 0
}

type ReLoginNotify struct {
	NewIp            *string `protobuf:"bytes,1,opt,name=new_ip" json:"new_ip,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ReLoginNotify) Reset()                    { *m = ReLoginNotify{} }
func (m *ReLoginNotify) String() string            { return proto.CompactTextString(m) }
func (*ReLoginNotify) ProtoMessage()               {}
func (*ReLoginNotify) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{25} }

func (m *ReLoginNotify) GetNewIp() string {
	if m != nil && m.NewIp != nil {
		return *m.NewIp
	}
	return ""
}

type ReConnectNotify struct {
	Ip               *string  `protobuf:"bytes,1,opt,name=ip" json:"ip,omitempty"`
	Port             *uint32  `protobuf:"varint,2,opt,name=port" json:"port,omitempty"`
	MoreIps          []string `protobuf:"bytes,3,rep,name=more_ips" json:"more_ips,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *ReConnectNotify) Reset()                    { *m = ReConnectNotify{} }
func (m *ReConnectNotify) String() string            { return proto.CompactTextString(m) }
func (*ReConnectNotify) ProtoMessage()               {}
func (*ReConnectNotify) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{26} }

func (m *ReConnectNotify) GetIp() string {
	if m != nil && m.Ip != nil {
		return *m.Ip
	}
	return ""
}

func (m *ReConnectNotify) GetPort() uint32 {
	if m != nil && m.Port != nil {
		return *m.Port
	}
	return 0
}

func (m *ReConnectNotify) GetMoreIps() []string {
	if m != nil {
		return m.MoreIps
	}
	return nil
}

type Notify struct {
	NewinfoNtf       *NewMessageNotify `protobuf:"bytes,1,opt,name=newinfo_ntf" json:"newinfo_ntf,omitempty"`
	ReloginNtf       *ReLoginNotify    `protobuf:"bytes,2,opt,name=relogin_ntf" json:"relogin_ntf,omitempty"`
	ReconnectNtf     *ReConnectNotify  `protobuf:"bytes,3,opt,name=reconnect_ntf" json:"reconnect_ntf,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *Notify) Reset()                    { *m = Notify{} }
func (m *Notify) String() string            { return proto.CompactTextString(m) }
func (*Notify) ProtoMessage()               {}
func (*Notify) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{27} }

func (m *Notify) GetNewinfoNtf() *NewMessageNotify {
	if m != nil {
		return m.NewinfoNtf
	}
	return nil
}

func (m *Notify) GetReloginNtf() *ReLoginNotify {
	if m != nil {
		return m.ReloginNtf
	}
	return nil
}

func (m *Notify) GetReconnectNtf() *ReConnectNotify {
	if m != nil {
		return m.ReconnectNtf
	}
	return nil
}

type Ack struct {
	Result           *uint32 `protobuf:"varint,1,req,name=result" json:"result,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Ack) Reset()                    { *m = Ack{} }
func (m *Ack) String() string            { return proto.CompactTextString(m) }
func (*Ack) ProtoMessage()               {}
func (*Ack) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{28} }

func (m *Ack) GetResult() uint32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

// Message Router Area1 to Area2 Begin
type RouteInfo struct {
	Username         []byte  `protobuf:"bytes,1,req,name=username" json:"username,omitempty"`
	MsgExchanger     *string `protobuf:"bytes,2,req,name=msg_exchanger" json:"msg_exchanger,omitempty"`
	MsgRouter        *string `protobuf:"bytes,3,req,name=msg_router" json:"msg_router,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RouteInfo) Reset()                    { *m = RouteInfo{} }
func (m *RouteInfo) String() string            { return proto.CompactTextString(m) }
func (*RouteInfo) ProtoMessage()               {}
func (*RouteInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{29} }

func (m *RouteInfo) GetUsername() []byte {
	if m != nil {
		return m.Username
	}
	return nil
}

func (m *RouteInfo) GetMsgExchanger() string {
	if m != nil && m.MsgExchanger != nil {
		return *m.MsgExchanger
	}
	return ""
}

func (m *RouteInfo) GetMsgRouter() string {
	if m != nil && m.MsgRouter != nil {
		return *m.MsgRouter
	}
	return ""
}

type Proxy struct {
	Sender           *string      `protobuf:"bytes,1,req,name=sender" json:"sender,omitempty"`
	Receiver         []*RouteInfo `protobuf:"bytes,2,rep,name=receiver" json:"receiver,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Proxy) Reset()                    { *m = Proxy{} }
func (m *Proxy) String() string            { return proto.CompactTextString(m) }
func (*Proxy) ProtoMessage()               {}
func (*Proxy) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{30} }

func (m *Proxy) GetSender() string {
	if m != nil && m.Sender != nil {
		return *m.Sender
	}
	return ""
}

func (m *Proxy) GetReceiver() []*RouteInfo {
	if m != nil {
		return m.Receiver
	}
	return nil
}

type Message struct {
	Msgid            *uint32   `protobuf:"varint,1,req,name=msgid" json:"msgid,omitempty"`
	Sn               *uint64   `protobuf:"varint,2,req,name=sn" json:"sn,omitempty"`
	Sender           *string   `protobuf:"bytes,3,opt,name=sender" json:"sender,omitempty"`
	Receiver         *string   `protobuf:"bytes,4,opt,name=receiver" json:"receiver,omitempty"`
	ReceiverType     *string   `protobuf:"bytes,5,opt,name=receiver_type" json:"receiver_type,omitempty"`
	Req              *Request  `protobuf:"bytes,6,opt,name=req" json:"req,omitempty"`
	Resp             *Response `protobuf:"bytes,7,opt,name=resp" json:"resp,omitempty"`
	Notify           *Notify   `protobuf:"bytes,8,opt,name=notify" json:"notify,omitempty"`
	Ack              *Ack      `protobuf:"bytes,9,opt,name=ack" json:"ack,omitempty"`
	ProxyMesg        *Proxy    `protobuf:"bytes,10,opt,name=proxy_mesg" json:"proxy_mesg,omitempty"`
	ClientData       *uint64   `protobuf:"varint,11,opt,name=client_data" json:"client_data,omitempty"`
	SenderType       *string   `protobuf:"bytes,12,opt,name=sender_type" json:"sender_type,omitempty"`
	SenderJid        *string   `protobuf:"bytes,13,opt,name=sender_jid" json:"sender_jid,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *Message) Reset()                    { *m = Message{} }
func (m *Message) String() string            { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()               {}
func (*Message) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{31} }

func (m *Message) GetMsgid() uint32 {
	if m != nil && m.Msgid != nil {
		return *m.Msgid
	}
	return 0
}

func (m *Message) GetSn() uint64 {
	if m != nil && m.Sn != nil {
		return *m.Sn
	}
	return 0
}

func (m *Message) GetSender() string {
	if m != nil && m.Sender != nil {
		return *m.Sender
	}
	return ""
}

func (m *Message) GetReceiver() string {
	if m != nil && m.Receiver != nil {
		return *m.Receiver
	}
	return ""
}

func (m *Message) GetReceiverType() string {
	if m != nil && m.ReceiverType != nil {
		return *m.ReceiverType
	}
	return ""
}

func (m *Message) GetReq() *Request {
	if m != nil {
		return m.Req
	}
	return nil
}

func (m *Message) GetResp() *Response {
	if m != nil {
		return m.Resp
	}
	return nil
}

func (m *Message) GetNotify() *Notify {
	if m != nil {
		return m.Notify
	}
	return nil
}

func (m *Message) GetAck() *Ack {
	if m != nil {
		return m.Ack
	}
	return nil
}

func (m *Message) GetProxyMesg() *Proxy {
	if m != nil {
		return m.ProxyMesg
	}
	return nil
}

func (m *Message) GetClientData() uint64 {
	if m != nil && m.ClientData != nil {
		return *m.ClientData
	}
	return 0
}

func (m *Message) GetSenderType() string {
	if m != nil && m.SenderType != nil {
		return *m.SenderType
	}
	return ""
}

func (m *Message) GetSenderJid() string {
	if m != nil && m.SenderJid != nil {
		return *m.SenderJid
	}
	return ""
}

func init() {
	proto.RegisterType((*Pair)(nil), "pb.Pair")
	proto.RegisterType((*Error)(nil), "pb.Error")
	proto.RegisterType((*User)(nil), "pb.User")
	proto.RegisterType((*Info)(nil), "pb.Info")
	proto.RegisterType((*LoginReq)(nil), "pb.LoginReq")
	proto.RegisterType((*LoginResp)(nil), "pb.LoginResp")
	proto.RegisterType((*ChatReq)(nil), "pb.ChatReq")
	proto.RegisterType((*ChatResp)(nil), "pb.ChatResp")
	proto.RegisterType((*GetInfoReq)(nil), "pb.GetInfoReq")
	proto.RegisterType((*GetInfoResp)(nil), "pb.GetInfoResp")
	proto.RegisterType((*GetMultiInfosReq)(nil), "pb.GetMultiInfosReq")
	proto.RegisterType((*GetMultiInfosResp)(nil), "pb.GetMultiInfosResp")
	proto.RegisterType((*LogoutReq)(nil), "pb.LogoutReq")
	proto.RegisterType((*LogoutResp)(nil), "pb.LogoutResp")
	proto.RegisterType((*InitLoginReq)(nil), "pb.InitLoginReq")
	proto.RegisterType((*InitLoginResp)(nil), "pb.InitLoginResp")
	proto.RegisterType((*Service_Req)(nil), "pb.Service_Req")
	proto.RegisterType((*Service_Resp)(nil), "pb.Service_Resp")
	proto.RegisterType((*ReqEQ1User)(nil), "pb.ReqEQ1User")
	proto.RegisterType((*RespEQ1User)(nil), "pb.RespEQ1User")
	proto.RegisterType((*Ex1QueryUserStatusReq)(nil), "pb.Ex1QueryUserStatusReq")
	proto.RegisterType((*Ex1QueryUserStatusResp)(nil), "pb.Ex1QueryUserStatusResp")
	proto.RegisterType((*Request)(nil), "pb.Request")
	proto.RegisterType((*Response)(nil), "pb.Response")
	proto.RegisterType((*NewMessageNotify)(nil), "pb.NewMessageNotify")
	proto.RegisterType((*ReLoginNotify)(nil), "pb.ReLoginNotify")
	proto.RegisterType((*ReConnectNotify)(nil), "pb.ReConnectNotify")
	proto.RegisterType((*Notify)(nil), "pb.Notify")
	proto.RegisterType((*Ack)(nil), "pb.Ack")
	proto.RegisterType((*RouteInfo)(nil), "pb.RouteInfo")
	proto.RegisterType((*Proxy)(nil), "pb.Proxy")
	proto.RegisterType((*Message)(nil), "pb.Message")
}

var fileDescriptor1 = []byte{
	// 1427 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xb4, 0x57, 0xdb, 0x6e, 0xdb, 0x46,
	0x10, 0xad, 0x44, 0x5d, 0x87, 0x94, 0x2f, 0x8c, 0x9d, 0x28, 0xb7, 0xc6, 0x21, 0x8a, 0xc0, 0x49,
	0x51, 0xd5, 0x56, 0x0b, 0xb4, 0x08, 0x7a, 0x41, 0x93, 0x06, 0x6d, 0x80, 0x26, 0x48, 0x1c, 0xf4,
	0x99, 0xa0, 0xa9, 0x95, 0xc2, 0x44, 0xe2, 0xd2, 0xcb, 0x95, 0x63, 0x7f, 0x41, 0x7f, 0xa1, 0xcf,
	0xfd, 0x82, 0x02, 0xfd, 0x96, 0x02, 0xfd, 0x9c, 0xce, 0xcc, 0x2e, 0x29, 0xea, 0xe2, 0x87, 0x3e,
	0xf4, 0x29, 0xd1, 0x70, 0x66, 0x67, 0xe6, 0xcc, 0x99, 0xb3, 0x6b, 0xf0, 0xe2, 0x69, 0x22, 0x52,
	0x3d, 0xc8, 0x94, 0xd4, 0xd2, 0xaf, 0x67, 0xa7, 0x41, 0x00, 0x8d, 0x57, 0x51, 0xa2, 0x7c, 0x17,
	0x9c, 0xf7, 0xe2, 0xb2, 0x5f, 0x3b, 0xa8, 0x1f, 0x7a, 0x7e, 0x0f, 0x9a, 0xe7, 0xd1, 0x74, 0x2e,
	0xfa, 0xf5, 0x83, 0xda, 0xa1, 0x17, 0x1c, 0x42, 0xf3, 0x99, 0x52, 0x52, 0xf9, 0x00, 0xf5, 0x64,
	0xc4, 0x3e, 0x3d, 0xff, 0x1a, 0xb8, 0x23, 0x91, 0xc7, 0x2a, 0xc9, 0x74, 0x22, 0x53, 0xeb, 0xf9,
	0x35, 0x34, 0x7e, 0xcd, 0x85, 0xf2, 0xb7, 0xa0, 0x35, 0xc7, 0x7f, 0xad, 0x73, 0xd7, 0x3f, 0x80,
	0x2d, 0x4c, 0x99, 0x09, 0xa5, 0x2f, 0xc3, 0x0c, 0xd3, 0xe5, 0xe8, 0xef, 0x1c, 0xba, 0xc3, 0xce,
	0x20, 0x3b, 0x1d, 0x50, 0x7e, 0xcc, 0xd1, 0x78, 0x9e, 0x8e, 0xe5, 0x06, 0xcf, 0xda, 0x8a, 0xe7,
	0xdf, 0x35, 0xe8, 0xfc, 0x22, 0x27, 0x49, 0x7a, 0x22, 0xce, 0xa8, 0x8a, 0x99, 0x3c, 0x4d, 0xa6,
	0x22, 0xd4, 0x97, 0x99, 0xb0, 0xd9, 0x76, 0xa0, 0x93, 0x0a, 0x6d, 0x2c, 0x75, 0x2e, 0x16, 0x2b,
	0xc7, 0x72, 0xce, 0x85, 0x0a, 0x55, 0x34, 0xeb, 0x3b, 0xec, 0xc5, 0xb6, 0x58, 0xa1, 0x23, 0xd9,
	0x1a, 0x54, 0xbf, 0xbf, 0x07, 0xad, 0x28, 0xcb, 0x42, 0xac, 0xbb, 0x89, 0xbf, 0x7b, 0x8f, 0x1b,
	0xc3, 0xa3, 0xa3, 0x23, 0xff, 0x3a, 0x74, 0xdf, 0x8a, 0x48, 0xe9, 0x70, 0x2c, 0xce, 0xfa, 0x2d,
	0xfe, 0xe0, 0x7c, 0x81, 0x76, 0x1f, 0x3a, 0x23, 0x71, 0x9e, 0xc4, 0x02, 0xfd, 0xdb, 0x68, 0xee,
	0x3e, 0xfe, 0x88, 0x72, 0x67, 0xd3, 0x48, 0x8f, 0xa5, 0x9a, 0xf5, 0x3b, 0x64, 0xf3, 0x77, 0xa1,
	0x8b, 0x89, 0xc7, 0x61, 0x2c, 0x47, 0xa2, 0xdf, 0x65, 0x13, 0x56, 0x9d, 0x4a, 0x1d, 0x8a, 0x34,
	0x56, 0x97, 0x99, 0xee, 0x03, 0x1a, 0x3b, 0x81, 0x82, 0xae, 0x6d, 0x2b, 0xcf, 0x28, 0x48, 0x27,
	0x33, 0x91, 0xeb, 0x68, 0x96, 0x59, 0xc0, 0xb9, 0xde, 0x3c, 0x47, 0xb0, 0xa9, 0xbe, 0x3a, 0xf7,
	0x80, 0x07, 0x15, 0x36, 0x9a, 0x9e, 0x69, 0xec, 0x06, 0x6c, 0x9b, 0x31, 0x87, 0x53, 0x3a, 0x2f,
	0x4c, 0x32, 0xee, 0x8e, 0x71, 0x31, 0x28, 0xa0, 0x85, 0xfa, 0xeb, 0x06, 0x7f, 0xd6, 0xa0, 0xfd,
	0xf4, 0x6d, 0xa4, 0x09, 0x4a, 0x0f, 0x1a, 0xa7, 0x72, 0x54, 0x50, 0x60, 0x1b, 0xda, 0xf4, 0xcb,
	0xa4, 0xc2, 0x8e, 0xa9, 0xa2, 0x99, 0x54, 0x22, 0x1c, 0x4f, 0xa3, 0x09, 0x26, 0xb2, 0x26, 0xf6,
	0x61, 0xa0, 0x1b, 0x5c, 0x24, 0x32, 0x27, 0xd7, 0xe8, 0xc6, 0xe7, 0x77, 0x78, 0x3c, 0x38, 0x46,
	0x04, 0x58, 0x68, 0xa1, 0x18, 0x3b, 0xaf, 0x18, 0x06, 0xe2, 0x16, 0x5a, 0xe0, 0x98, 0x4d, 0x79,
	0xc5, 0xb1, 0xc3, 0x8e, 0x68, 0x14, 0x17, 0x59, 0x82, 0x49, 0x09, 0x8b, 0xbe, 0x47, 0x9e, 0xc1,
	0xa7, 0xd0, 0x31, 0x15, 0x23, 0x4a, 0x48, 0x33, 0x25, 0xf2, 0xf9, 0x54, 0x5b, 0x88, 0x56, 0x8b,
	0x0e, 0x4e, 0x01, 0x7e, 0x12, 0x9a, 0x88, 0x45, 0x1d, 0x62, 0xbd, 0x09, 0xfe, 0xb7, 0x4a, 0x15,
	0x4c, 0x31, 0x41, 0x06, 0xb0, 0xd9, 0xa2, 0xea, 0x10, 0x80, 0xa5, 0x51, 0x8e, 0xc7, 0xb9, 0xd0,
	0xdc, 0x70, 0x73, 0xb5, 0x4a, 0xe6, 0x4c, 0x30, 0x02, 0xb7, 0xcc, 0x61, 0x26, 0xb7, 0x9a, 0xe4,
	0x06, 0x34, 0xc9, 0xb4, 0x44, 0x7a, 0x26, 0xfb, 0x1e, 0x78, 0xd3, 0x28, 0x5f, 0xa4, 0xa7, 0x2c,
	0xce, 0xe6, 0x2c, 0xaf, 0x60, 0x07, 0xb3, 0xbc, 0xc0, 0x5e, 0x13, 0x0a, 0xcd, 0xaf, 0xe8, 0x07,
	0x4f, 0xac, 0xf4, 0x63, 0x32, 0xae, 0x9d, 0xe8, 0xf0, 0x89, 0xef, 0x60, 0x77, 0xe5, 0xc4, 0xff,
	0xaf, 0xfa, 0xdb, 0xcc, 0x6d, 0x39, 0x67, 0xa2, 0xf1, 0xd4, 0xa2, 0x1c, 0x45, 0xa3, 0xc6, 0x24,
	0xbc, 0x03, 0x50, 0x7c, 0x5c, 0x9f, 0x69, 0xf0, 0x39, 0x78, 0xcf, 0xd3, 0x44, 0x97, 0x1b, 0x8f,
	0xec, 0xb1, 0xec, 0xa6, 0xb5, 0x35, 0x25, 0xa2, 0x78, 0xe5, 0xc9, 0x84, 0x67, 0xde, 0x0d, 0xbe,
	0x82, 0x5e, 0x25, 0x00, 0x4f, 0xdc, 0x14, 0xb1, 0x2c, 0x08, 0xbc, 0x4c, 0xc1, 0x10, 0xdc, 0x37,
	0x96, 0x97, 0x36, 0x51, 0x85, 0xa6, 0x25, 0xc1, 0x94, 0x38, 0x9b, 0xe3, 0x5e, 0x72, 0x8c, 0x17,
	0x7c, 0x09, 0xde, 0x22, 0xc6, 0xe4, 0x5a, 0x0b, 0xc2, 0xb5, 0xc3, 0x8e, 0x32, 0x99, 0xe6, 0xc2,
	0x46, 0x7d, 0x0f, 0x80, 0x19, 0x9e, 0xbd, 0x3e, 0xde, 0x28, 0x96, 0x38, 0x03, 0xfa, 0xbd, 0xd0,
	0xaf, 0x2e, 0xb9, 0x58, 0x5d, 0xe2, 0xcd, 0x0b, 0x7e, 0xaf, 0x81, 0x4b, 0xf9, 0xfe, 0xdb, 0x11,
	0xa8, 0x26, 0x7a, 0x9e, 0xb3, 0x4a, 0x34, 0x09, 0xb3, 0x77, 0xe8, 0x6f, 0x94, 0x61, 0x6b, 0x59,
	0xf7, 0x96, 0x54, 0xac, 0x55, 0x48, 0x56, 0x55, 0x68, 0x59, 0xee, 0x2a, 0xc8, 0x9e, 0xdb, 0xa5,
	0xed, 0x05, 0x8f, 0x61, 0xff, 0xd9, 0xc5, 0xf1, 0xeb, 0xb9, 0x50, 0x97, 0x54, 0xda, 0x1b, 0xce,
	0x49, 0x78, 0xde, 0xb7, 0x35, 0x4d, 0x93, 0x5c, 0x5b, 0x51, 0xdf, 0x22, 0x2e, 0x2d, 0x90, 0x08,
	0xbe, 0x81, 0xeb, 0x9b, 0x62, 0x11, 0xd7, 0x60, 0x3d, 0x78, 0xdb, 0x04, 0x97, 0x20, 0x04, 0x7f,
	0xd5, 0xa1, 0x7d, 0x62, 0xa6, 0xe3, 0xdf, 0x86, 0x26, 0x8b, 0x1f, 0x73, 0xc2, 0x1d, 0x7a, 0xe4,
	0x5b, 0x52, 0xe8, 0x26, 0x34, 0x62, 0x94, 0x10, 0xc6, 0xd2, 0x1d, 0xba, 0xf4, 0xad, 0x10, 0xc1,
	0x03, 0xe8, 0x14, 0xfb, 0xc3, 0x50, 0xd8, 0x1a, 0x2b, 0x22, 0x72, 0x17, 0x5a, 0x53, 0x66, 0x2b,
	0x03, 0xe3, 0x0e, 0x7b, 0xf6, 0x68, 0x4b, 0xee, 0x43, 0xd8, 0x4a, 0x90, 0x7d, 0x56, 0x7a, 0x91,
	0x2c, 0x2c, 0xf9, 0xee, 0x70, 0xc7, 0xac, 0x4d, 0x85, 0xc8, 0x9f, 0x90, 0x76, 0x1b, 0xaa, 0x90,
	0x9b, 0xcb, 0x6e, 0xdc, 0x54, 0x95, 0x85, 0x47, 0xd0, 0x13, 0xc7, 0xe1, 0x19, 0x41, 0x12, 0x12,
	0x02, 0xac, 0x82, 0xee, 0xf0, 0x26, 0xf9, 0x6d, 0xc6, 0xf9, 0x33, 0xa3, 0x5e, 0x33, 0x5a, 0xec,
	0xd0, 0x6c, 0xee, 0x88, 0x63, 0xf6, 0x6c, 0x27, 0x4b, 0x22, 0x12, 0xfc, 0x53, 0x87, 0xce, 0x89,
	0xa5, 0xa7, 0xdf, 0x87, 0xa6, 0xa0, 0x9b, 0x9e, 0x37, 0xd3, 0x1d, 0x76, 0x39, 0x0b, 0x5f, 0xfd,
	0x77, 0x0a, 0x40, 0x9d, 0xa5, 0xae, 0xed, 0x8a, 0xdd, 0xb2, 0x88, 0x36, 0x16, 0x68, 0x97, 0x22,
	0x7d, 0xbf, 0x02, 0x69, 0x6b, 0xd1, 0x64, 0x55, 0x33, 0x3f, 0x2e, 0x31, 0x6d, 0x2f, 0x30, 0xaf,
	0x68, 0xc2, 0x23, 0xd8, 0x5e, 0x02, 0x35, 0xcf, 0xf8, 0xce, 0x74, 0x87, 0xbb, 0x2b, 0xa8, 0xa2,
	0xef, 0x03, 0xf0, 0x16, 0xb0, 0xa2, 0xa3, 0xb7, 0x80, 0x7f, 0x69, 0x53, 0x8f, 0x57, 0x81, 0xed,
	0xb1, 0xe3, 0xad, 0xab, 0x80, 0xc5, 0x90, 0xc1, 0x55, 0xc8, 0xee, 0x6f, 0x40, 0x36, 0xcf, 0x82,
	0x04, 0x76, 0x5e, 0x8a, 0x0f, 0x2f, 0xf0, 0x82, 0x8e, 0x26, 0xe2, 0xa5, 0xd4, 0xc9, 0xf8, 0xf2,
	0x0a, 0xcd, 0x66, 0x53, 0x2c, 0x53, 0x8d, 0xbb, 0x64, 0x9e, 0x52, 0x24, 0x35, 0xcb, 0xc2, 0x7a,
	0x1b, 0xae, 0x99, 0x6a, 0xa3, 0x31, 0x0a, 0x6b, 0x88, 0x6f, 0x17, 0x99, 0xa2, 0xc2, 0x37, 0x78,
	0xeb, 0xee, 0x41, 0xef, 0x44, 0x30, 0x08, 0x36, 0x0f, 0x6e, 0x74, 0x2a, 0x3e, 0xd0, 0xdd, 0x6f,
	0x44, 0xf6, 0x5b, 0xd8, 0x3e, 0x11, 0x4f, 0x65, 0x9a, 0x8a, 0x58, 0x5b, 0x17, 0x7a, 0xcd, 0xd9,
	0xcf, 0x74, 0xf9, 0x67, 0x52, 0x69, 0x7b, 0xd7, 0xe3, 0xfa, 0xf3, 0x5d, 0x9f, 0x64, 0xa4, 0x16,
	0x0e, 0x86, 0xff, 0x56, 0x83, 0x96, 0x0d, 0x7b, 0x88, 0x8f, 0x17, 0xf1, 0x81, 0x6b, 0x4b, 0xf5,
	0xd8, 0x32, 0x85, 0xb9, 0xb5, 0xd6, 0xec, 0x03, 0x70, 0x95, 0x30, 0x43, 0x23, 0xd7, 0xfa, 0x62,
	0x66, 0xcb, 0xc5, 0x3e, 0x82, 0x9e, 0xa2, 0x76, 0xa8, 0x38, 0xf6, 0x34, 0x24, 0xbb, 0x66, 0x3c,
	0x97, 0xaa, 0x0e, 0xf6, 0xc1, 0xf9, 0x21, 0x7e, 0xbf, 0x76, 0x4d, 0xfc, 0x0c, 0xdd, 0x13, 0xa4,
	0x8b, 0xe0, 0x9b, 0x09, 0xeb, 0xa7, 0x91, 0xa6, 0x78, 0x07, 0xd9, 0xe7, 0xcc, 0x3e, 0xf4, 0x66,
	0xf9, 0x24, 0x14, 0x17, 0x48, 0xd3, 0x74, 0x82, 0xd3, 0xae, 0x17, 0xd7, 0x00, 0x99, 0x15, 0x45,
	0x2a, 0xf3, 0x7c, 0xc2, 0x37, 0x6c, 0xf3, 0x95, 0x92, 0x17, 0x0c, 0x61, 0x2e, 0xd2, 0x91, 0x50,
	0x76, 0x4e, 0xf7, 0x48, 0xc7, 0xf1, 0xb1, 0x77, 0xce, 0xe1, 0x4e, 0xb1, 0x05, 0x65, 0xda, 0xe0,
	0x0f, 0x14, 0x20, 0x0b, 0x00, 0x3d, 0x84, 0xf0, 0xe4, 0xf2, 0x0e, 0x40, 0xac, 0xf3, 0x94, 0x93,
	0x36, 0x2a, 0xe7, 0x3a, 0xc5, 0xb3, 0xac, 0x3c, 0xd7, 0xc8, 0xf1, 0x3e, 0xe3, 0xc1, 0x16, 0x43,
	0x14, 0x7e, 0xad, 0xe1, 0x76, 0x3a, 0xca, 0xbe, 0x40, 0xad, 0x6c, 0x15, 0x72, 0x87, 0xfb, 0xc7,
	0x64, 0x6f, 0x2f, 0xf6, 0xaf, 0xdc, 0xe9, 0x5b, 0xc8, 0x04, 0x86, 0x8e, 0x05, 0xda, 0x1d, 0x02,
	0x8f, 0xca, 0x00, 0xbf, 0x07, 0x4e, 0x14, 0xbf, 0xb7, 0x12, 0xd5, 0xa6, 0x0f, 0x84, 0xed, 0x5d,
	0x80, 0x8c, 0x10, 0x08, 0xf1, 0x01, 0x3a, 0xb1, 0x9b, 0xc6, 0x52, 0x60, 0x70, 0xc1, 0xab, 0xc0,
	0xaa, 0xfe, 0x28, 0xd2, 0x11, 0x0b, 0x57, 0xc3, 0xbc, 0x44, 0xa9, 0x29, 0x53, 0xb0, 0x57, 0xdc,
	0x0f, 0xd6, 0x48, 0x57, 0x0d, 0x2d, 0x58, 0xf7, 0xc9, 0x77, 0xf0, 0x30, 0x96, 0xb3, 0xc1, 0x59,
	0xf2, 0x56, 0xca, 0x01, 0x51, 0x3e, 0x8a, 0xf5, 0x20, 0x9e, 0xca, 0xf9, 0xc8, 0xfc, 0x55, 0x12,
	0xcb, 0xe9, 0x60, 0x66, 0x40, 0xcc, 0x9f, 0xec, 0x3e, 0x95, 0xb3, 0xd9, 0x3c, 0x4d, 0xe2, 0x88,
	0xfe, 0xc8, 0xf8, 0x11, 0xd3, 0xfd, 0x1b, 0x00, 0x00, 0xff, 0xff, 0x87, 0x04, 0x6b, 0x51, 0xc3,
	0x0c, 0x00, 0x00,
}
