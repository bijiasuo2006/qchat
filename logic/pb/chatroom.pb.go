// Code generated by protoc-gen-go.
// source: chatroom.proto
// DO NOT EDIT!

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	chatroom.proto
	client.proto
	groupchat.proto

It has these top-level messages:
	CRPair
	CRUser
	ChatRoom
	CreateChatRoomRequest
	CreateChatRoomResponse
	CreateMultiChatRoomRequest
	CreateMultiChatRoomResponse
	GetChatRoomDetailRequest
	GetChatRoomDetailResponse
	ApplyJoinChatRoomRequest
	ApplyJoinChatRoomResponse
	QuitChatRoomRequest
	QuitChatRoomResponse
	QueryAllGameRoomRequest
	QueryAllGameRoomResponse
	QueryChatRoomIDRequest
	QueryChatRoomIDResponse
	UpdateRoomIDRequest
	UpdateRoomIDResponse
	UpdateChatRoomRequest
	UpdateChatRoomResponse
	KickChatRoomMemberRequest
	KickChatRoomMemberResponse
	SyncRoomToDBRequest
	CreateChatRoomNotify
	MemberJoinChatRoomNotify
	MemberQuitChatRoomNotify
	KickMemberNotify
	UpdateChatRoomNotify
	ChatRoomMessageRequest
	ChatRoomMessageResponse
	ChatRoomNewMsg
	ChatRoomErrorMsg
	ChatRoomMNotify
	SubscribeRequest
	SubscribeResponse
	ChatRoomUpToServer
	ChatRoomDownToUser
	ChatRoomPacket
	Pair
	Error
	User
	Info
	LoginReq
	LoginResp
	ChatReq
	ChatResp
	GetInfoReq
	GetInfoResp
	GetMultiInfosReq
	GetMultiInfosResp
	LogoutReq
	LogoutResp
	InitLoginReq
	InitLoginResp
	Service_Req
	Service_Resp
	ReqEQ1User
	RespEQ1User
	Ex1QueryUserStatusReq
	Ex1QueryUserStatusResp
	Request
	Response
	NewMessageNotify
	ReLoginNotify
	ReConnectNotify
	Notify
	Ack
	RouteInfo
	Proxy
	Message
*/
package pb

import (
	fmt "fmt"

	proto "github.com/golang/protobuf/proto"

	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

//
// key-value message
type CRPair struct {
	Key              *string `protobuf:"bytes,1,req,name=key" json:"key,omitempty"`
	Value            []byte  `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CRPair) Reset()                    { *m = CRPair{} }
func (m *CRPair) String() string            { return proto.CompactTextString(m) }
func (*CRPair) ProtoMessage()               {}
func (*CRPair) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CRPair) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *CRPair) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

//
// chat room user info message
// userid: user unique id, in our system, it's jid.
// qid: qihoo account id, it's unique in qihoo system. client should fill this field.
// name: user nick name, each message, user can set his/her nick name.
//
//
// for this milestone, the following three fields are reserved for future:
// publicsetting: user can put his property in this field, and these properties are visuable for other members
//      isregister => 1--360 registry user, 0--no 360 registry user
// privatesetting: user can put his property in this field, and these properties are not visuable for other members
//      area => location area
//      msgproc => msgrouter process name
// status: indicate one user's status.
type CRUser struct {
	Userid []byte  `protobuf:"bytes,1,opt,name=userid" json:"userid,omitempty"`
	Name   *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	// reserve fields
	Publicsetting    []*CRPair `protobuf:"bytes,3,rep,name=publicsetting" json:"publicsetting,omitempty"`
	Privatesetting   []*CRPair `protobuf:"bytes,4,rep,name=privatesetting" json:"privatesetting,omitempty"`
	Status           *int32    `protobuf:"varint,5,opt,name=status" json:"status,omitempty"`
	Userdata         []byte    `protobuf:"bytes,6,opt,name=userdata" json:"userdata,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *CRUser) Reset()                    { *m = CRUser{} }
func (m *CRUser) String() string            { return proto.CompactTextString(m) }
func (*CRUser) ProtoMessage()               {}
func (*CRUser) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CRUser) GetUserid() []byte {
	if m != nil {
		return m.Userid
	}
	return nil
}

func (m *CRUser) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CRUser) GetPublicsetting() []*CRPair {
	if m != nil {
		return m.Publicsetting
	}
	return nil
}

func (m *CRUser) GetPrivatesetting() []*CRPair {
	if m != nil {
		return m.Privatesetting
	}
	return nil
}

func (m *CRUser) GetStatus() int32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

func (m *CRUser) GetUserdata() []byte {
	if m != nil {
		return m.Userdata
	}
	return nil
}

//
// chat room message
// roomid: identify a room
// creater: who create this room
// name: room name
// version: room version
// maxmsgid: max msg id in this room
// memcountlimit: upper limit of member count
// roomtype: default is 'game'
// members: all room members include creater
// properties: it's for future extend, wen can save icon, signature,...
//      regmemcount => int register member count
//      memcount => int all member count
//
// blacklist: jid list which can't join this chatroom
type ChatRoom struct {
	Roomid           []byte    `protobuf:"bytes,1,req,name=roomid" json:"roomid,omitempty"`
	Creater          *CRUser   `protobuf:"bytes,2,opt,name=creater" json:"creater,omitempty"`
	Name             *string   `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Version          *uint64   `protobuf:"varint,4,opt,name=version" json:"version,omitempty"`
	Maxmsgid         *uint64   `protobuf:"varint,5,opt,name=maxmsgid" json:"maxmsgid,omitempty"`
	Memcountlimit    *uint64   `protobuf:"varint,6,opt,name=memcountlimit" json:"memcountlimit,omitempty"`
	Roomtype         *string   `protobuf:"bytes,7,opt,name=roomtype" json:"roomtype,omitempty"`
	Properties       []*CRPair `protobuf:"bytes,8,rep,name=properties" json:"properties,omitempty"`
	Members          []*CRUser `protobuf:"bytes,9,rep,name=members" json:"members,omitempty"`
	Blacklist        [][]byte  `protobuf:"bytes,10,rep,name=blacklist" json:"blacklist,omitempty"`
	Gameid           *string   `protobuf:"bytes,11,opt,name=gameid" json:"gameid,omitempty"`
	Tempmembers      []*CRUser `protobuf:"bytes,12,rep,name=tempmembers" json:"tempmembers,omitempty"`
	Partnerdata      []byte    `protobuf:"bytes,13,opt,name=partnerdata" json:"partnerdata,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *ChatRoom) Reset()                    { *m = ChatRoom{} }
func (m *ChatRoom) String() string            { return proto.CompactTextString(m) }
func (*ChatRoom) ProtoMessage()               {}
func (*ChatRoom) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ChatRoom) GetRoomid() []byte {
	if m != nil {
		return m.Roomid
	}
	return nil
}

func (m *ChatRoom) GetCreater() *CRUser {
	if m != nil {
		return m.Creater
	}
	return nil
}

func (m *ChatRoom) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *ChatRoom) GetVersion() uint64 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

func (m *ChatRoom) GetMaxmsgid() uint64 {
	if m != nil && m.Maxmsgid != nil {
		return *m.Maxmsgid
	}
	return 0
}

func (m *ChatRoom) GetMemcountlimit() uint64 {
	if m != nil && m.Memcountlimit != nil {
		return *m.Memcountlimit
	}
	return 0
}

func (m *ChatRoom) GetRoomtype() string {
	if m != nil && m.Roomtype != nil {
		return *m.Roomtype
	}
	return ""
}

func (m *ChatRoom) GetProperties() []*CRPair {
	if m != nil {
		return m.Properties
	}
	return nil
}

func (m *ChatRoom) GetMembers() []*CRUser {
	if m != nil {
		return m.Members
	}
	return nil
}

func (m *ChatRoom) GetBlacklist() [][]byte {
	if m != nil {
		return m.Blacklist
	}
	return nil
}

func (m *ChatRoom) GetGameid() string {
	if m != nil && m.Gameid != nil {
		return *m.Gameid
	}
	return ""
}

func (m *ChatRoom) GetTempmembers() []*CRUser {
	if m != nil {
		return m.Tempmembers
	}
	return nil
}

func (m *ChatRoom) GetPartnerdata() []byte {
	if m != nil {
		return m.Partnerdata
	}
	return nil
}

// Request: user -> server
//
// creater: room's creater;
// roomname: room name
// gameid: sticked game id
// members: init room members
//
type CreateChatRoomRequest struct {
	Gameid           *string   `protobuf:"bytes,1,opt,name=gameid" json:"gameid,omitempty"`
	Roomname         *string   `protobuf:"bytes,2,opt,name=roomname" json:"roomname,omitempty"`
	Memcountlimit    *uint64   `protobuf:"varint,3,opt,name=memcountlimit" json:"memcountlimit,omitempty"`
	Roomtype         *string   `protobuf:"bytes,4,opt,name=roomtype" json:"roomtype,omitempty"`
	Members          []*CRUser `protobuf:"bytes,5,rep,name=members" json:"members,omitempty"`
	Creater          *CRUser   `protobuf:"bytes,6,opt,name=creater" json:"creater,omitempty"`
	Properties       []*CRPair `protobuf:"bytes,7,rep,name=properties" json:"properties,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *CreateChatRoomRequest) Reset()                    { *m = CreateChatRoomRequest{} }
func (m *CreateChatRoomRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateChatRoomRequest) ProtoMessage()               {}
func (*CreateChatRoomRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *CreateChatRoomRequest) GetGameid() string {
	if m != nil && m.Gameid != nil {
		return *m.Gameid
	}
	return ""
}

func (m *CreateChatRoomRequest) GetRoomname() string {
	if m != nil && m.Roomname != nil {
		return *m.Roomname
	}
	return ""
}

func (m *CreateChatRoomRequest) GetMemcountlimit() uint64 {
	if m != nil && m.Memcountlimit != nil {
		return *m.Memcountlimit
	}
	return 0
}

func (m *CreateChatRoomRequest) GetRoomtype() string {
	if m != nil && m.Roomtype != nil {
		return *m.Roomtype
	}
	return ""
}

func (m *CreateChatRoomRequest) GetMembers() []*CRUser {
	if m != nil {
		return m.Members
	}
	return nil
}

func (m *CreateChatRoomRequest) GetCreater() *CRUser {
	if m != nil {
		return m.Creater
	}
	return nil
}

func (m *CreateChatRoomRequest) GetProperties() []*CRPair {
	if m != nil {
		return m.Properties
	}
	return nil
}

// Response:
// room: if create successful, return whole room info
type CreateChatRoomResponse struct {
	Room             *ChatRoom `protobuf:"bytes,1,opt,name=room" json:"room,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *CreateChatRoomResponse) Reset()                    { *m = CreateChatRoomResponse{} }
func (m *CreateChatRoomResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateChatRoomResponse) ProtoMessage()               {}
func (*CreateChatRoomResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *CreateChatRoomResponse) GetRoom() *ChatRoom {
	if m != nil {
		return m.Room
	}
	return nil
}

type CreateMultiChatRoomRequest struct {
	Rooms            []*CreateChatRoomRequest `protobuf:"bytes,1,rep,name=rooms" json:"rooms,omitempty"`
	Creater          *CRUser                  `protobuf:"bytes,2,opt,name=creater" json:"creater,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (m *CreateMultiChatRoomRequest) Reset()                    { *m = CreateMultiChatRoomRequest{} }
func (m *CreateMultiChatRoomRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateMultiChatRoomRequest) ProtoMessage()               {}
func (*CreateMultiChatRoomRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *CreateMultiChatRoomRequest) GetRooms() []*CreateChatRoomRequest {
	if m != nil {
		return m.Rooms
	}
	return nil
}

func (m *CreateMultiChatRoomRequest) GetCreater() *CRUser {
	if m != nil {
		return m.Creater
	}
	return nil
}

type CreateMultiChatRoomResponse struct {
	Rooms            []*ChatRoom `protobuf:"bytes,1,rep,name=rooms" json:"rooms,omitempty"`
	Creater          *CRUser     `protobuf:"bytes,2,opt,name=creater" json:"creater,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *CreateMultiChatRoomResponse) Reset()                    { *m = CreateMultiChatRoomResponse{} }
func (m *CreateMultiChatRoomResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateMultiChatRoomResponse) ProtoMessage()               {}
func (*CreateMultiChatRoomResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *CreateMultiChatRoomResponse) GetRooms() []*ChatRoom {
	if m != nil {
		return m.Rooms
	}
	return nil
}

func (m *CreateMultiChatRoomResponse) GetCreater() *CRUser {
	if m != nil {
		return m.Creater
	}
	return nil
}

//
// Request: user -> server
// roomid: roomid
type GetChatRoomDetailRequest struct {
	Roomid           []byte `protobuf:"bytes,1,req,name=roomid" json:"roomid,omitempty"`
	Index            *int32 `protobuf:"varint,2,opt,name=index" json:"index,omitempty"`
	Offset           *int32 `protobuf:"varint,3,opt,name=offset" json:"offset,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GetChatRoomDetailRequest) Reset()                    { *m = GetChatRoomDetailRequest{} }
func (m *GetChatRoomDetailRequest) String() string            { return proto.CompactTextString(m) }
func (*GetChatRoomDetailRequest) ProtoMessage()               {}
func (*GetChatRoomDetailRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *GetChatRoomDetailRequest) GetRoomid() []byte {
	if m != nil {
		return m.Roomid
	}
	return nil
}

func (m *GetChatRoomDetailRequest) GetIndex() int32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *GetChatRoomDetailRequest) GetOffset() int32 {
	if m != nil && m.Offset != nil {
		return *m.Offset
	}
	return 0
}

//
// [Response]
// room: now it contains one room whole info.
//
type GetChatRoomDetailResponse struct {
	Room             *ChatRoom `protobuf:"bytes,1,opt,name=room" json:"room,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *GetChatRoomDetailResponse) Reset()                    { *m = GetChatRoomDetailResponse{} }
func (m *GetChatRoomDetailResponse) String() string            { return proto.CompactTextString(m) }
func (*GetChatRoomDetailResponse) ProtoMessage()               {}
func (*GetChatRoomDetailResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *GetChatRoomDetailResponse) GetRoom() *ChatRoom {
	if m != nil {
		return m.Room
	}
	return nil
}

//
// Request: user -> server
//
// roomid: room id;
// room: which is used between chatroom server and db
type ApplyJoinChatRoomRequest struct {
	Roomid []byte `protobuf:"bytes,1,req,name=roomid" json:"roomid,omitempty"`
	// [server internal usage]
	Room             *ChatRoom `protobuf:"bytes,2,opt,name=room" json:"room,omitempty"`
	UseridType       *int32    `protobuf:"varint,3,opt,name=userid_type" json:"userid_type,omitempty"`
	Userdata         []byte    `protobuf:"bytes,4,opt,name=userdata" json:"userdata,omitempty"`
	NoUserlist       *bool     `protobuf:"varint,5,opt,name=no_userlist,def=0" json:"no_userlist,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *ApplyJoinChatRoomRequest) Reset()                    { *m = ApplyJoinChatRoomRequest{} }
func (m *ApplyJoinChatRoomRequest) String() string            { return proto.CompactTextString(m) }
func (*ApplyJoinChatRoomRequest) ProtoMessage()               {}
func (*ApplyJoinChatRoomRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

const Default_ApplyJoinChatRoomRequest_NoUserlist bool = false

func (m *ApplyJoinChatRoomRequest) GetRoomid() []byte {
	if m != nil {
		return m.Roomid
	}
	return nil
}

func (m *ApplyJoinChatRoomRequest) GetRoom() *ChatRoom {
	if m != nil {
		return m.Room
	}
	return nil
}

func (m *ApplyJoinChatRoomRequest) GetUseridType() int32 {
	if m != nil && m.UseridType != nil {
		return *m.UseridType
	}
	return 0
}

func (m *ApplyJoinChatRoomRequest) GetUserdata() []byte {
	if m != nil {
		return m.Userdata
	}
	return nil
}

func (m *ApplyJoinChatRoomRequest) GetNoUserlist() bool {
	if m != nil && m.NoUserlist != nil {
		return *m.NoUserlist
	}
	return Default_ApplyJoinChatRoomRequest_NoUserlist
}

//
// [Response]
// room: if successful, server return whole room info
// pull_lost: indicates whether pull important lost message in chatroom, default is true
type ApplyJoinChatRoomResponse struct {
	Room             *ChatRoom `protobuf:"bytes,1,opt,name=room" json:"room,omitempty"`
	PullLost         *bool     `protobuf:"varint,2,opt,name=pull_lost,def=1" json:"pull_lost,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *ApplyJoinChatRoomResponse) Reset()                    { *m = ApplyJoinChatRoomResponse{} }
func (m *ApplyJoinChatRoomResponse) String() string            { return proto.CompactTextString(m) }
func (*ApplyJoinChatRoomResponse) ProtoMessage()               {}
func (*ApplyJoinChatRoomResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

const Default_ApplyJoinChatRoomResponse_PullLost bool = true

func (m *ApplyJoinChatRoomResponse) GetRoom() *ChatRoom {
	if m != nil {
		return m.Room
	}
	return nil
}

func (m *ApplyJoinChatRoomResponse) GetPullLost() bool {
	if m != nil && m.PullLost != nil {
		return *m.PullLost
	}
	return Default_ApplyJoinChatRoomResponse_PullLost
}

// Request: user -> server
//
// roomid: room id;
// room: which is used between chatroom server and db
type QuitChatRoomRequest struct {
	Roomid           []byte    `protobuf:"bytes,1,req,name=roomid" json:"roomid,omitempty"`
	Room             *ChatRoom `protobuf:"bytes,2,opt,name=room" json:"room,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *QuitChatRoomRequest) Reset()                    { *m = QuitChatRoomRequest{} }
func (m *QuitChatRoomRequest) String() string            { return proto.CompactTextString(m) }
func (*QuitChatRoomRequest) ProtoMessage()               {}
func (*QuitChatRoomRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *QuitChatRoomRequest) GetRoomid() []byte {
	if m != nil {
		return m.Roomid
	}
	return nil
}

func (m *QuitChatRoomRequest) GetRoom() *ChatRoom {
	if m != nil {
		return m.Room
	}
	return nil
}

// Response
type QuitChatRoomResponse struct {
	Room             *ChatRoom `protobuf:"bytes,1,opt,name=room" json:"room,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *QuitChatRoomResponse) Reset()                    { *m = QuitChatRoomResponse{} }
func (m *QuitChatRoomResponse) String() string            { return proto.CompactTextString(m) }
func (*QuitChatRoomResponse) ProtoMessage()               {}
func (*QuitChatRoomResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *QuitChatRoomResponse) GetRoom() *ChatRoom {
	if m != nil {
		return m.Room
	}
	return nil
}

// Request: user -> server
//
// list all existing game and room mapping
type QueryAllGameRoomRequest struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *QueryAllGameRoomRequest) Reset()                    { *m = QueryAllGameRoomRequest{} }
func (m *QueryAllGameRoomRequest) String() string            { return proto.CompactTextString(m) }
func (*QueryAllGameRoomRequest) ProtoMessage()               {}
func (*QueryAllGameRoomRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

type QueryAllGameRoomResponse struct {
	Maplist          []*CRPair `protobuf:"bytes,1,rep,name=maplist" json:"maplist,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *QueryAllGameRoomResponse) Reset()                    { *m = QueryAllGameRoomResponse{} }
func (m *QueryAllGameRoomResponse) String() string            { return proto.CompactTextString(m) }
func (*QueryAllGameRoomResponse) ProtoMessage()               {}
func (*QueryAllGameRoomResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *QueryAllGameRoomResponse) GetMaplist() []*CRPair {
	if m != nil {
		return m.Maplist
	}
	return nil
}

// Request: user -> server
//
// gameid: game id;
type QueryChatRoomIDRequest struct {
	Gameid           *string `protobuf:"bytes,1,req,name=gameid" json:"gameid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *QueryChatRoomIDRequest) Reset()                    { *m = QueryChatRoomIDRequest{} }
func (m *QueryChatRoomIDRequest) String() string            { return proto.CompactTextString(m) }
func (*QueryChatRoomIDRequest) ProtoMessage()               {}
func (*QueryChatRoomIDRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *QueryChatRoomIDRequest) GetGameid() string {
	if m != nil && m.Gameid != nil {
		return *m.Gameid
	}
	return ""
}

// Response
type QueryChatRoomIDResponse struct {
	Roomid           []byte  `protobuf:"bytes,1,opt,name=roomid" json:"roomid,omitempty"`
	Gameid           *string `protobuf:"bytes,2,opt,name=gameid" json:"gameid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *QueryChatRoomIDResponse) Reset()                    { *m = QueryChatRoomIDResponse{} }
func (m *QueryChatRoomIDResponse) String() string            { return proto.CompactTextString(m) }
func (*QueryChatRoomIDResponse) ProtoMessage()               {}
func (*QueryChatRoomIDResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *QueryChatRoomIDResponse) GetRoomid() []byte {
	if m != nil {
		return m.Roomid
	}
	return nil
}

func (m *QueryChatRoomIDResponse) GetGameid() string {
	if m != nil && m.Gameid != nil {
		return *m.Gameid
	}
	return ""
}

// Request: user -> server
//
// roomid: room id
// gameid: game id;
type UpdateRoomIDRequest struct {
	Gameid           *string `protobuf:"bytes,1,req,name=gameid" json:"gameid,omitempty"`
	Roomid           []byte  `protobuf:"bytes,2,req,name=roomid" json:"roomid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *UpdateRoomIDRequest) Reset()                    { *m = UpdateRoomIDRequest{} }
func (m *UpdateRoomIDRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateRoomIDRequest) ProtoMessage()               {}
func (*UpdateRoomIDRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *UpdateRoomIDRequest) GetGameid() string {
	if m != nil && m.Gameid != nil {
		return *m.Gameid
	}
	return ""
}

func (m *UpdateRoomIDRequest) GetRoomid() []byte {
	if m != nil {
		return m.Roomid
	}
	return nil
}

// Response
type UpdateRoomIDResponse struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *UpdateRoomIDResponse) Reset()                    { *m = UpdateRoomIDResponse{} }
func (m *UpdateRoomIDResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateRoomIDResponse) ProtoMessage()               {}
func (*UpdateRoomIDResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

// Request: user -> server
// room: now it only support update room's name and game id
type UpdateChatRoomRequest struct {
	Roomid           []byte    `protobuf:"bytes,1,req,name=roomid" json:"roomid,omitempty"`
	Room             *ChatRoom `protobuf:"bytes,2,req,name=room" json:"room,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *UpdateChatRoomRequest) Reset()                    { *m = UpdateChatRoomRequest{} }
func (m *UpdateChatRoomRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateChatRoomRequest) ProtoMessage()               {}
func (*UpdateChatRoomRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *UpdateChatRoomRequest) GetRoomid() []byte {
	if m != nil {
		return m.Roomid
	}
	return nil
}

func (m *UpdateChatRoomRequest) GetRoom() *ChatRoom {
	if m != nil {
		return m.Room
	}
	return nil
}

// Response:
// if successful, room field is valid
type UpdateChatRoomResponse struct {
	Room             *ChatRoom `protobuf:"bytes,1,opt,name=room" json:"room,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *UpdateChatRoomResponse) Reset()                    { *m = UpdateChatRoomResponse{} }
func (m *UpdateChatRoomResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateChatRoomResponse) ProtoMessage()               {}
func (*UpdateChatRoomResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *UpdateChatRoomResponse) GetRoom() *ChatRoom {
	if m != nil {
		return m.Room
	}
	return nil
}

// Request: user -> server
// user: init user, if client not fill, server will get from msgrouter
// group: contain groupid
// members: kick out members, each one should contain userid
type KickChatRoomMemberRequest struct {
	Roomid           []byte    `protobuf:"bytes,1,req,name=roomid" json:"roomid,omitempty"`
	Members          []*CRUser `protobuf:"bytes,2,rep,name=members" json:"members,omitempty"`
	Room             *ChatRoom `protobuf:"bytes,3,opt,name=room" json:"room,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *KickChatRoomMemberRequest) Reset()                    { *m = KickChatRoomMemberRequest{} }
func (m *KickChatRoomMemberRequest) String() string            { return proto.CompactTextString(m) }
func (*KickChatRoomMemberRequest) ProtoMessage()               {}
func (*KickChatRoomMemberRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *KickChatRoomMemberRequest) GetRoomid() []byte {
	if m != nil {
		return m.Roomid
	}
	return nil
}

func (m *KickChatRoomMemberRequest) GetMembers() []*CRUser {
	if m != nil {
		return m.Members
	}
	return nil
}

func (m *KickChatRoomMemberRequest) GetRoom() *ChatRoom {
	if m != nil {
		return m.Room
	}
	return nil
}

type KickChatRoomMemberResponse struct {
	Room             *ChatRoom `protobuf:"bytes,1,opt,name=room" json:"room,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *KickChatRoomMemberResponse) Reset()                    { *m = KickChatRoomMemberResponse{} }
func (m *KickChatRoomMemberResponse) String() string            { return proto.CompactTextString(m) }
func (*KickChatRoomMemberResponse) ProtoMessage()               {}
func (*KickChatRoomMemberResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *KickChatRoomMemberResponse) GetRoom() *ChatRoom {
	if m != nil {
		return m.Room
	}
	return nil
}

// Request: chatroom -> chatroom dba
// it's internal request
type SyncRoomToDBRequest struct {
	Roomid           []byte `protobuf:"bytes,1,req,name=roomid" json:"roomid,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SyncRoomToDBRequest) Reset()                    { *m = SyncRoomToDBRequest{} }
func (m *SyncRoomToDBRequest) String() string            { return proto.CompactTextString(m) }
func (*SyncRoomToDBRequest) ProtoMessage()               {}
func (*SyncRoomToDBRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *SyncRoomToDBRequest) GetRoomid() []byte {
	if m != nil {
		return m.Roomid
	}
	return nil
}

// -----create chat room notify-----//
// send to all member including creator
type CreateChatRoomNotify struct {
	Room             *ChatRoom `protobuf:"bytes,1,req,name=room" json:"room,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *CreateChatRoomNotify) Reset()                    { *m = CreateChatRoomNotify{} }
func (m *CreateChatRoomNotify) String() string            { return proto.CompactTextString(m) }
func (*CreateChatRoomNotify) ProtoMessage()               {}
func (*CreateChatRoomNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *CreateChatRoomNotify) GetRoom() *ChatRoom {
	if m != nil {
		return m.Room
	}
	return nil
}

// -----new member join chat room-----//
// Notify: server -> user
// send to all member including join members
type MemberJoinChatRoomNotify struct {
	Room             *ChatRoom `protobuf:"bytes,1,req,name=room" json:"room,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *MemberJoinChatRoomNotify) Reset()                    { *m = MemberJoinChatRoomNotify{} }
func (m *MemberJoinChatRoomNotify) String() string            { return proto.CompactTextString(m) }
func (*MemberJoinChatRoomNotify) ProtoMessage()               {}
func (*MemberJoinChatRoomNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *MemberJoinChatRoomNotify) GetRoom() *ChatRoom {
	if m != nil {
		return m.Room
	}
	return nil
}

// -----member quit chat room notify-----//
// Notify: server -> user
// send to all member excluding quiting member
type MemberQuitChatRoomNotify struct {
	Room             *ChatRoom `protobuf:"bytes,1,req,name=room" json:"room,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *MemberQuitChatRoomNotify) Reset()                    { *m = MemberQuitChatRoomNotify{} }
func (m *MemberQuitChatRoomNotify) String() string            { return proto.CompactTextString(m) }
func (*MemberQuitChatRoomNotify) ProtoMessage()               {}
func (*MemberQuitChatRoomNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *MemberQuitChatRoomNotify) GetRoom() *ChatRoom {
	if m != nil {
		return m.Room
	}
	return nil
}

// -----kick member notify-----//
// Notify: server -> user
// send to all member including kicked member
type KickMemberNotify struct {
	Room             *ChatRoom `protobuf:"bytes,1,req,name=room" json:"room,omitempty"`
	User             *CRUser   `protobuf:"bytes,2,opt,name=user" json:"user,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *KickMemberNotify) Reset()                    { *m = KickMemberNotify{} }
func (m *KickMemberNotify) String() string            { return proto.CompactTextString(m) }
func (*KickMemberNotify) ProtoMessage()               {}
func (*KickMemberNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *KickMemberNotify) GetRoom() *ChatRoom {
	if m != nil {
		return m.Room
	}
	return nil
}

func (m *KickMemberNotify) GetUser() *CRUser {
	if m != nil {
		return m.User
	}
	return nil
}

// -----update chatroom notify-----//
// Notify: server -> user
// send to all members
type UpdateChatRoomNotify struct {
	Room             *ChatRoom `protobuf:"bytes,1,req,name=room" json:"room,omitempty"`
	User             *CRUser   `protobuf:"bytes,2,opt,name=user" json:"user,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *UpdateChatRoomNotify) Reset()                    { *m = UpdateChatRoomNotify{} }
func (m *UpdateChatRoomNotify) String() string            { return proto.CompactTextString(m) }
func (*UpdateChatRoomNotify) ProtoMessage()               {}
func (*UpdateChatRoomNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *UpdateChatRoomNotify) GetRoom() *ChatRoom {
	if m != nil {
		return m.Room
	}
	return nil
}

func (m *UpdateChatRoomNotify) GetUser() *CRUser {
	if m != nil {
		return m.User
	}
	return nil
}

// this message only for group server to dba server, and client <-> dba
// client check msgtype, if it's notify message, client parse as ServerNotify
// msgtype option:
// 200 -- CreateChatRoomNotify valid;
// 201 -- MemberJoinChatRoomNotify valid;
// 202 -- MemberQuitChatRoomNotify valid;
// 203 -- KickMemberNotify valid;
// 204 -- UpdateChatRoomNotify valid;
// 0   -- msgcontent valid(text);
// 1   -- msgcontent valid(voice)
// 2   -- msgcontent valid(picture)
type ChatRoomMessageRequest struct {
	Sender          *CRUser `protobuf:"bytes,1,opt,name=sender" json:"sender,omitempty"`
	Roomid          []byte  `protobuf:"bytes,2,req,name=roomid" json:"roomid,omitempty"`
	Msgtype         *int32  `protobuf:"varint,3,req,name=msgtype" json:"msgtype,omitempty"`
	Msgcontent      []byte  `protobuf:"bytes,4,opt,name=msgcontent" json:"msgcontent,omitempty"`
	Clientparameter []byte  `protobuf:"bytes,5,opt,name=clientparameter" json:"clientparameter,omitempty"`
	Clientcache     []byte  `protobuf:"bytes,6,opt,name=clientcache" json:"clientcache,omitempty"`
	// ------notify list-------/
	Createnotify     *CreateChatRoomNotify     `protobuf:"bytes,7,opt,name=createnotify" json:"createnotify,omitempty"`
	Joinnotify       *MemberJoinChatRoomNotify `protobuf:"bytes,8,opt,name=joinnotify" json:"joinnotify,omitempty"`
	Quitnotify       *MemberQuitChatRoomNotify `protobuf:"bytes,9,opt,name=quitnotify" json:"quitnotify,omitempty"`
	Kicknotify       *KickMemberNotify         `protobuf:"bytes,10,opt,name=kicknotify" json:"kicknotify,omitempty"`
	Updatenotify     *UpdateChatRoomNotify     `protobuf:"bytes,11,opt,name=updatenotify" json:"updatenotify,omitempty"`
	Propertylist     []*CRPair                 `protobuf:"bytes,12,rep,name=propertylist" json:"propertylist,omitempty"`
	XXX_unrecognized []byte                    `json:"-"`
}

func (m *ChatRoomMessageRequest) Reset()                    { *m = ChatRoomMessageRequest{} }
func (m *ChatRoomMessageRequest) String() string            { return proto.CompactTextString(m) }
func (*ChatRoomMessageRequest) ProtoMessage()               {}
func (*ChatRoomMessageRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

func (m *ChatRoomMessageRequest) GetSender() *CRUser {
	if m != nil {
		return m.Sender
	}
	return nil
}

func (m *ChatRoomMessageRequest) GetRoomid() []byte {
	if m != nil {
		return m.Roomid
	}
	return nil
}

func (m *ChatRoomMessageRequest) GetMsgtype() int32 {
	if m != nil && m.Msgtype != nil {
		return *m.Msgtype
	}
	return 0
}

func (m *ChatRoomMessageRequest) GetMsgcontent() []byte {
	if m != nil {
		return m.Msgcontent
	}
	return nil
}

func (m *ChatRoomMessageRequest) GetClientparameter() []byte {
	if m != nil {
		return m.Clientparameter
	}
	return nil
}

func (m *ChatRoomMessageRequest) GetClientcache() []byte {
	if m != nil {
		return m.Clientcache
	}
	return nil
}

func (m *ChatRoomMessageRequest) GetCreatenotify() *CreateChatRoomNotify {
	if m != nil {
		return m.Createnotify
	}
	return nil
}

func (m *ChatRoomMessageRequest) GetJoinnotify() *MemberJoinChatRoomNotify {
	if m != nil {
		return m.Joinnotify
	}
	return nil
}

func (m *ChatRoomMessageRequest) GetQuitnotify() *MemberQuitChatRoomNotify {
	if m != nil {
		return m.Quitnotify
	}
	return nil
}

func (m *ChatRoomMessageRequest) GetKicknotify() *KickMemberNotify {
	if m != nil {
		return m.Kicknotify
	}
	return nil
}

func (m *ChatRoomMessageRequest) GetUpdatenotify() *UpdateChatRoomNotify {
	if m != nil {
		return m.Updatenotify
	}
	return nil
}

func (m *ChatRoomMessageRequest) GetPropertylist() []*CRPair {
	if m != nil {
		return m.Propertylist
	}
	return nil
}

//
// it's just return from dba to group server, never return to client.
type ChatRoomMessageResponse struct {
	Msgid            *uint64 `protobuf:"varint,1,opt,name=msgid" json:"msgid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ChatRoomMessageResponse) Reset()                    { *m = ChatRoomMessageResponse{} }
func (m *ChatRoomMessageResponse) String() string            { return proto.CompactTextString(m) }
func (*ChatRoomMessageResponse) ProtoMessage()               {}
func (*ChatRoomMessageResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30} }

func (m *ChatRoomMessageResponse) GetMsgid() uint64 {
	if m != nil && m.Msgid != nil {
		return *m.Msgid
	}
	return 0
}

//
// this message is from chat room server to client, dba ignore it
type ChatRoomNewMsg struct {
	Roomid           []byte  `protobuf:"bytes,1,req,name=roomid" json:"roomid,omitempty"`
	Sender           *CRUser `protobuf:"bytes,2,opt,name=sender" json:"sender,omitempty"`
	Msgtype          *int32  `protobuf:"varint,3,opt,name=msgtype" json:"msgtype,omitempty"`
	Msgcontent       []byte  `protobuf:"bytes,4,opt,name=msgcontent" json:"msgcontent,omitempty"`
	Regmemcount      *int32  `protobuf:"varint,5,opt,name=regmemcount" json:"regmemcount,omitempty"`
	Memcount         *int32  `protobuf:"varint,6,opt,name=memcount" json:"memcount,omitempty"`
	Msgid            *uint32 `protobuf:"varint,7,opt,name=msgid" json:"msgid,omitempty"`
	Maxid            *uint32 `protobuf:"varint,8,opt,name=maxid" json:"maxid,omitempty"`
	Timestamp        *uint64 `protobuf:"varint,9,opt,name=timestamp" json:"timestamp,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ChatRoomNewMsg) Reset()                    { *m = ChatRoomNewMsg{} }
func (m *ChatRoomNewMsg) String() string            { return proto.CompactTextString(m) }
func (*ChatRoomNewMsg) ProtoMessage()               {}
func (*ChatRoomNewMsg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{31} }

func (m *ChatRoomNewMsg) GetRoomid() []byte {
	if m != nil {
		return m.Roomid
	}
	return nil
}

func (m *ChatRoomNewMsg) GetSender() *CRUser {
	if m != nil {
		return m.Sender
	}
	return nil
}

func (m *ChatRoomNewMsg) GetMsgtype() int32 {
	if m != nil && m.Msgtype != nil {
		return *m.Msgtype
	}
	return 0
}

func (m *ChatRoomNewMsg) GetMsgcontent() []byte {
	if m != nil {
		return m.Msgcontent
	}
	return nil
}

func (m *ChatRoomNewMsg) GetRegmemcount() int32 {
	if m != nil && m.Regmemcount != nil {
		return *m.Regmemcount
	}
	return 0
}

func (m *ChatRoomNewMsg) GetMemcount() int32 {
	if m != nil && m.Memcount != nil {
		return *m.Memcount
	}
	return 0
}

func (m *ChatRoomNewMsg) GetMsgid() uint32 {
	if m != nil && m.Msgid != nil {
		return *m.Msgid
	}
	return 0
}

func (m *ChatRoomNewMsg) GetMaxid() uint32 {
	if m != nil && m.Maxid != nil {
		return *m.Maxid
	}
	return 0
}

func (m *ChatRoomNewMsg) GetTimestamp() uint64 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

//
// this message is used to notify user which msg is not handled
// errorcode option:
// 110101 -- text content contains illegal word which is forbidden by government;
// 110102 -- text content contains dangerous uri;
// 110201 -- picture content contains illegal word which is forbidden by government;
// 110301 -- voice content contains illegal word which is forbidden by government;
type ChatRoomErrorMsg struct {
	Roomid           []byte  `protobuf:"bytes,1,req,name=roomid" json:"roomid,omitempty"`
	Clientsn         *uint64 `protobuf:"varint,2,req,name=clientsn" json:"clientsn,omitempty"`
	Errorcode        *int32  `protobuf:"varint,3,opt,name=errorcode" json:"errorcode,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ChatRoomErrorMsg) Reset()                    { *m = ChatRoomErrorMsg{} }
func (m *ChatRoomErrorMsg) String() string            { return proto.CompactTextString(m) }
func (*ChatRoomErrorMsg) ProtoMessage()               {}
func (*ChatRoomErrorMsg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{32} }

func (m *ChatRoomErrorMsg) GetRoomid() []byte {
	if m != nil {
		return m.Roomid
	}
	return nil
}

func (m *ChatRoomErrorMsg) GetClientsn() uint64 {
	if m != nil && m.Clientsn != nil {
		return *m.Clientsn
	}
	return 0
}

func (m *ChatRoomErrorMsg) GetErrorcode() int32 {
	if m != nil && m.Errorcode != nil {
		return *m.Errorcode
	}
	return 0
}

//
// complext notify which is combined three notify(newmsg, joinnotify, quitnotify)
type ChatRoomMNotify struct {
	Type             *int32 `protobuf:"varint,1,req,name=type" json:"type,omitempty"`
	Data             []byte `protobuf:"bytes,2,req,name=data" json:"data,omitempty"`
	Regmemcount      *int32 `protobuf:"varint,3,opt,name=regmemcount" json:"regmemcount,omitempty"`
	Memcount         *int32 `protobuf:"varint,4,opt,name=memcount" json:"memcount,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ChatRoomMNotify) Reset()                    { *m = ChatRoomMNotify{} }
func (m *ChatRoomMNotify) String() string            { return proto.CompactTextString(m) }
func (*ChatRoomMNotify) ProtoMessage()               {}
func (*ChatRoomMNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{33} }

func (m *ChatRoomMNotify) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *ChatRoomMNotify) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ChatRoomMNotify) GetRegmemcount() int32 {
	if m != nil && m.Regmemcount != nil {
		return *m.Regmemcount
	}
	return 0
}

func (m *ChatRoomMNotify) GetMemcount() int32 {
	if m != nil && m.Memcount != nil {
		return *m.Memcount
	}
	return 0
}

//
// subscribe request, if subscribe or unsubscribe chatroom messages
type SubscribeRequest struct {
	Roomid           []byte `protobuf:"bytes,1,req,name=roomid" json:"roomid,omitempty"`
	Sub              *bool  `protobuf:"varint,2,opt,name=sub,def=0" json:"sub,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SubscribeRequest) Reset()                    { *m = SubscribeRequest{} }
func (m *SubscribeRequest) String() string            { return proto.CompactTextString(m) }
func (*SubscribeRequest) ProtoMessage()               {}
func (*SubscribeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{34} }

const Default_SubscribeRequest_Sub bool = false

func (m *SubscribeRequest) GetRoomid() []byte {
	if m != nil {
		return m.Roomid
	}
	return nil
}

func (m *SubscribeRequest) GetSub() bool {
	if m != nil && m.Sub != nil {
		return *m.Sub
	}
	return Default_SubscribeRequest_Sub
}

//
// subscribe response
type SubscribeResponse struct {
	Roomid           []byte `protobuf:"bytes,1,req,name=roomid" json:"roomid,omitempty"`
	Sub              *bool  `protobuf:"varint,2,opt,name=sub,def=0" json:"sub,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SubscribeResponse) Reset()                    { *m = SubscribeResponse{} }
func (m *SubscribeResponse) String() string            { return proto.CompactTextString(m) }
func (*SubscribeResponse) ProtoMessage()               {}
func (*SubscribeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{35} }

const Default_SubscribeResponse_Sub bool = false

func (m *SubscribeResponse) GetRoomid() []byte {
	if m != nil {
		return m.Roomid
	}
	return nil
}

func (m *SubscribeResponse) GetSub() bool {
	if m != nil && m.Sub != nil {
		return *m.Sub
	}
	return Default_SubscribeResponse_Sub
}

// *
// payloadtype options:
// 100 -- createchatroomreq ;
// 101 -- getchatroominforeq ;
// 102 -- applyjoinchatroomreq;
// 103 -- quitchatroomreq;
// 104 -- updatechatroomreq;
// 105 -- kickmemberreq;
// 106 -- querychatroomidreq;
// 107 -- updategameidreq;
// 108 -- queryallgameroomreq;
// 109 -- subscribe chatroom message req;
// 200 -- syncroomtodba
// 300 -- chatroommessagereq;
type ChatRoomUpToServer struct {
	Payloadtype          *uint32                     `protobuf:"varint,1,req,name=payloadtype" json:"payloadtype,omitempty"`
	Createchatroomreq    *CreateChatRoomRequest      `protobuf:"bytes,2,opt,name=createchatroomreq" json:"createchatroomreq,omitempty"`
	Getchatroominforeq   *GetChatRoomDetailRequest   `protobuf:"bytes,3,opt,name=getchatroominforeq" json:"getchatroominforeq,omitempty"`
	Applyjoinchatroomreq *ApplyJoinChatRoomRequest   `protobuf:"bytes,4,opt,name=applyjoinchatroomreq" json:"applyjoinchatroomreq,omitempty"`
	Quitchatroomreq      *QuitChatRoomRequest        `protobuf:"bytes,5,opt,name=quitchatroomreq" json:"quitchatroomreq,omitempty"`
	Updatechatroomreq    *UpdateChatRoomRequest      `protobuf:"bytes,6,opt,name=updatechatroomreq" json:"updatechatroomreq,omitempty"`
	Kickmemberreq        *KickChatRoomMemberRequest  `protobuf:"bytes,7,opt,name=kickmemberreq" json:"kickmemberreq,omitempty"`
	Querychatroomidreq   *QueryChatRoomIDRequest     `protobuf:"bytes,8,opt,name=querychatroomidreq" json:"querychatroomidreq,omitempty"`
	Updategameidreq      *UpdateRoomIDRequest        `protobuf:"bytes,9,opt,name=updategameidreq" json:"updategameidreq,omitempty"`
	Queryallgameroomreq  *QueryAllGameRoomRequest    `protobuf:"bytes,10,opt,name=queryallgameroomreq" json:"queryallgameroomreq,omitempty"`
	Chatroommessagereq   *ChatRoomMessageRequest     `protobuf:"bytes,11,opt,name=chatroommessagereq" json:"chatroommessagereq,omitempty"`
	Createrooms          *CreateMultiChatRoomRequest `protobuf:"bytes,12,opt,name=createrooms" json:"createrooms,omitempty"`
	Syncroomtodba        *SyncRoomToDBRequest        `protobuf:"bytes,13,opt,name=syncroomtodba" json:"syncroomtodba,omitempty"`
	Subreq               *SubscribeRequest           `protobuf:"bytes,14,opt,name=subreq" json:"subreq,omitempty"`
	XXX_unrecognized     []byte                      `json:"-"`
}

func (m *ChatRoomUpToServer) Reset()                    { *m = ChatRoomUpToServer{} }
func (m *ChatRoomUpToServer) String() string            { return proto.CompactTextString(m) }
func (*ChatRoomUpToServer) ProtoMessage()               {}
func (*ChatRoomUpToServer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{36} }

func (m *ChatRoomUpToServer) GetPayloadtype() uint32 {
	if m != nil && m.Payloadtype != nil {
		return *m.Payloadtype
	}
	return 0
}

func (m *ChatRoomUpToServer) GetCreatechatroomreq() *CreateChatRoomRequest {
	if m != nil {
		return m.Createchatroomreq
	}
	return nil
}

func (m *ChatRoomUpToServer) GetGetchatroominforeq() *GetChatRoomDetailRequest {
	if m != nil {
		return m.Getchatroominforeq
	}
	return nil
}

func (m *ChatRoomUpToServer) GetApplyjoinchatroomreq() *ApplyJoinChatRoomRequest {
	if m != nil {
		return m.Applyjoinchatroomreq
	}
	return nil
}

func (m *ChatRoomUpToServer) GetQuitchatroomreq() *QuitChatRoomRequest {
	if m != nil {
		return m.Quitchatroomreq
	}
	return nil
}

func (m *ChatRoomUpToServer) GetUpdatechatroomreq() *UpdateChatRoomRequest {
	if m != nil {
		return m.Updatechatroomreq
	}
	return nil
}

func (m *ChatRoomUpToServer) GetKickmemberreq() *KickChatRoomMemberRequest {
	if m != nil {
		return m.Kickmemberreq
	}
	return nil
}

func (m *ChatRoomUpToServer) GetQuerychatroomidreq() *QueryChatRoomIDRequest {
	if m != nil {
		return m.Querychatroomidreq
	}
	return nil
}

func (m *ChatRoomUpToServer) GetUpdategameidreq() *UpdateRoomIDRequest {
	if m != nil {
		return m.Updategameidreq
	}
	return nil
}

func (m *ChatRoomUpToServer) GetQueryallgameroomreq() *QueryAllGameRoomRequest {
	if m != nil {
		return m.Queryallgameroomreq
	}
	return nil
}

func (m *ChatRoomUpToServer) GetChatroommessagereq() *ChatRoomMessageRequest {
	if m != nil {
		return m.Chatroommessagereq
	}
	return nil
}

func (m *ChatRoomUpToServer) GetCreaterooms() *CreateMultiChatRoomRequest {
	if m != nil {
		return m.Createrooms
	}
	return nil
}

func (m *ChatRoomUpToServer) GetSyncroomtodba() *SyncRoomToDBRequest {
	if m != nil {
		return m.Syncroomtodba
	}
	return nil
}

func (m *ChatRoomUpToServer) GetSubreq() *SubscribeRequest {
	if m != nil {
		return m.Subreq
	}
	return nil
}

// *
// payloadtype options:
// 100 -- createchatroomresp ;
// 101 -- getchatroominforesp ;
// 102 -- applyjoinchatroomresp;
// 103 -- quitchatroomresp;
// 104 -- updatechatroomresp;
// 105 -- kickmemberresp;
// 106 -- querychatroomidresp;
// 107 -- updategameidresp;
// 108 -- queryallgameroomresp;
// 300 -- chatroommessageresp;
// 1000 -- newmsgnotify
// 1001 -- memberjoinnotify
// 1002 -- memberquitnotify
// 1003 -- multinotify
// 1100 -- errormsgnotify
// [result]
// 0   -- successful
//
// 5000 exist in [GetChatRoomDetailRequest,ApplyJoinChatRoomRequest,QuitChatRoomRequest,UpdateChatRoomRequest,KickChatRoomMemberRequest,ChatRoomMessageRequest]
// 50000 -- peration failed, chat room server error.
// 5001 exist in [All Request]
// 50001 -- protocol error, not support payload type.
// 5002 exist in [GetChatRoomDetailRequest,ApplyJoinChatRoomRequest,QuitChatRoomRequest,UpdateChatRoomRequest,KickChatRoomMemberRequest,ChatRoomMessageRequest]
// 50002 -- operation failed, because room id does not exist
// 5003 exist in [GetChatRoomDetailRequest,ApplyJoinChatRoomRequest,QuitChatRoomRequest,UpdateChatRoomRequest,KickChatRoomMemberRequest,ChatRoomMessageRequest]
// 50003 -- operation failed, bcause room id is not same between inner and outer.
//
// 10001 -- create chat room failed, because dba return error
// 10002 -- create chat room failed, because has no authority
// 10003 -- create chat room failed, because no game id
// 10004 -- create chat room failed, because member count is over upper limit
//
// 10101 -- get chat room info failed, because user does not join this chat room
//
//
// 10201 -- join chat room failed, because room id does not exist
// 10202 -- join chat room failed, because member count reach upper limit
// 10203 -- join chat room failed, because dba return error
// 10204 -- join chat room failed, because user is in blacklist
//
// 10301 -- quit chat room failed, because user is not chat room member
// 10302 -- quit chat room failed, because dba return error
//
// 10401 -- update chat room failed, because user has no authority
// 10402 -- update chat room failed, because dba return error
//
// 10501 -- kick member failed, because user has no authority
// 10502 -- kick member failed, because user is not in chatroom
// 10503 -- kick member failed, because dba return error
//
// 10601 -- query room id failed, because dba return error
//
// 10701 -- update game and room relationship failed, because user has no authority
// 10702 -- update game and room relationship failed, because not set game id
// 10703 -- update game and room relationship failed, because dba return error
//
// 10801 -- query all game room mapping failed, because user has no authority
// 10802 -- query all game room mapping failed, because dba return error
//
// 30001 -- send message failed, because user is not chat room member
// 30002 -- send message failed, because dba return error
type ChatRoomDownToUser struct {
	Result                *int32                       `protobuf:"varint,1,req,name=result" json:"result,omitempty"`
	Payloadtype           *uint32                      `protobuf:"varint,2,req,name=payloadtype" json:"payloadtype,omitempty"`
	Createchatroomresp    *CreateChatRoomResponse      `protobuf:"bytes,3,opt,name=createchatroomresp" json:"createchatroomresp,omitempty"`
	Getchatroominforesp   *GetChatRoomDetailResponse   `protobuf:"bytes,4,opt,name=getchatroominforesp" json:"getchatroominforesp,omitempty"`
	Applyjoinchatroomresp *ApplyJoinChatRoomResponse   `protobuf:"bytes,5,opt,name=applyjoinchatroomresp" json:"applyjoinchatroomresp,omitempty"`
	Quitchatroomresp      *QuitChatRoomResponse        `protobuf:"bytes,6,opt,name=quitchatroomresp" json:"quitchatroomresp,omitempty"`
	Updatechatroomresp    *UpdateChatRoomResponse      `protobuf:"bytes,7,opt,name=updatechatroomresp" json:"updatechatroomresp,omitempty"`
	Kickmemberresp        *KickChatRoomMemberResponse  `protobuf:"bytes,8,opt,name=kickmemberresp" json:"kickmemberresp,omitempty"`
	Querychatroomidresp   *QueryChatRoomIDResponse     `protobuf:"bytes,9,opt,name=querychatroomidresp" json:"querychatroomidresp,omitempty"`
	Updategameidresp      *UpdateRoomIDResponse        `protobuf:"bytes,10,opt,name=updategameidresp" json:"updategameidresp,omitempty"`
	Queryallgameroomresp  *QueryAllGameRoomResponse    `protobuf:"bytes,11,opt,name=queryallgameroomresp" json:"queryallgameroomresp,omitempty"`
	Chatroommessageresp   *ChatRoomMessageResponse     `protobuf:"bytes,12,opt,name=chatroommessageresp" json:"chatroommessageresp,omitempty"`
	Newmsgnotify          *ChatRoomNewMsg              `protobuf:"bytes,13,opt,name=newmsgnotify" json:"newmsgnotify,omitempty"`
	Errormsgnotify        *ChatRoomErrorMsg            `protobuf:"bytes,14,opt,name=errormsgnotify" json:"errormsgnotify,omitempty"`
	Createrooms           *CreateMultiChatRoomResponse `protobuf:"bytes,15,opt,name=createrooms" json:"createrooms,omitempty"`
	Memberjoinnotify      *MemberJoinChatRoomNotify    `protobuf:"bytes,16,opt,name=memberjoinnotify" json:"memberjoinnotify,omitempty"`
	Memberquitnotify      *MemberQuitChatRoomNotify    `protobuf:"bytes,17,opt,name=memberquitnotify" json:"memberquitnotify,omitempty"`
	Subresp               *SubscribeResponse           `protobuf:"bytes,18,opt,name=subresp" json:"subresp,omitempty"`
	Reason                []byte                       `protobuf:"bytes,100,opt,name=reason" json:"reason,omitempty"`
	Multinotify           []*ChatRoomMNotify           `protobuf:"bytes,200,rep,name=multinotify" json:"multinotify,omitempty"`
	XXX_unrecognized      []byte                       `json:"-"`
}

func (m *ChatRoomDownToUser) Reset()                    { *m = ChatRoomDownToUser{} }
func (m *ChatRoomDownToUser) String() string            { return proto.CompactTextString(m) }
func (*ChatRoomDownToUser) ProtoMessage()               {}
func (*ChatRoomDownToUser) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{37} }

func (m *ChatRoomDownToUser) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *ChatRoomDownToUser) GetPayloadtype() uint32 {
	if m != nil && m.Payloadtype != nil {
		return *m.Payloadtype
	}
	return 0
}

func (m *ChatRoomDownToUser) GetCreatechatroomresp() *CreateChatRoomResponse {
	if m != nil {
		return m.Createchatroomresp
	}
	return nil
}

func (m *ChatRoomDownToUser) GetGetchatroominforesp() *GetChatRoomDetailResponse {
	if m != nil {
		return m.Getchatroominforesp
	}
	return nil
}

func (m *ChatRoomDownToUser) GetApplyjoinchatroomresp() *ApplyJoinChatRoomResponse {
	if m != nil {
		return m.Applyjoinchatroomresp
	}
	return nil
}

func (m *ChatRoomDownToUser) GetQuitchatroomresp() *QuitChatRoomResponse {
	if m != nil {
		return m.Quitchatroomresp
	}
	return nil
}

func (m *ChatRoomDownToUser) GetUpdatechatroomresp() *UpdateChatRoomResponse {
	if m != nil {
		return m.Updatechatroomresp
	}
	return nil
}

func (m *ChatRoomDownToUser) GetKickmemberresp() *KickChatRoomMemberResponse {
	if m != nil {
		return m.Kickmemberresp
	}
	return nil
}

func (m *ChatRoomDownToUser) GetQuerychatroomidresp() *QueryChatRoomIDResponse {
	if m != nil {
		return m.Querychatroomidresp
	}
	return nil
}

func (m *ChatRoomDownToUser) GetUpdategameidresp() *UpdateRoomIDResponse {
	if m != nil {
		return m.Updategameidresp
	}
	return nil
}

func (m *ChatRoomDownToUser) GetQueryallgameroomresp() *QueryAllGameRoomResponse {
	if m != nil {
		return m.Queryallgameroomresp
	}
	return nil
}

func (m *ChatRoomDownToUser) GetChatroommessageresp() *ChatRoomMessageResponse {
	if m != nil {
		return m.Chatroommessageresp
	}
	return nil
}

func (m *ChatRoomDownToUser) GetNewmsgnotify() *ChatRoomNewMsg {
	if m != nil {
		return m.Newmsgnotify
	}
	return nil
}

func (m *ChatRoomDownToUser) GetErrormsgnotify() *ChatRoomErrorMsg {
	if m != nil {
		return m.Errormsgnotify
	}
	return nil
}

func (m *ChatRoomDownToUser) GetCreaterooms() *CreateMultiChatRoomResponse {
	if m != nil {
		return m.Createrooms
	}
	return nil
}

func (m *ChatRoomDownToUser) GetMemberjoinnotify() *MemberJoinChatRoomNotify {
	if m != nil {
		return m.Memberjoinnotify
	}
	return nil
}

func (m *ChatRoomDownToUser) GetMemberquitnotify() *MemberQuitChatRoomNotify {
	if m != nil {
		return m.Memberquitnotify
	}
	return nil
}

func (m *ChatRoomDownToUser) GetSubresp() *SubscribeResponse {
	if m != nil {
		return m.Subresp
	}
	return nil
}

func (m *ChatRoomDownToUser) GetReason() []byte {
	if m != nil {
		return m.Reason
	}
	return nil
}

func (m *ChatRoomDownToUser) GetMultinotify() []*ChatRoomMNotify {
	if m != nil {
		return m.Multinotify
	}
	return nil
}

// roomid is used to dispatch to correct vnode
//
// roomid: for CreateChatRoomRequest, QueryChatRoomIDRequest, UpdateRoomIDRequest, QueryAllGameRoomRequest client
//         should fill by ramdon;
//         for other command, it must be existing room id
// uuid: it's identifier for server, for phone/client, it's not used;
// client_sn: it' identify a unique client message
type ChatRoomPacket struct {
	Roomid           []byte              `protobuf:"bytes,1,req,name=roomid" json:"roomid,omitempty"`
	ToServerData     *ChatRoomUpToServer `protobuf:"bytes,2,opt,name=to_server_data" json:"to_server_data,omitempty"`
	ToUserData       *ChatRoomDownToUser `protobuf:"bytes,3,opt,name=to_user_data" json:"to_user_data,omitempty"`
	Uuid             *string             `protobuf:"bytes,4,opt,name=uuid" json:"uuid,omitempty"`
	ClientSn         *uint64             `protobuf:"varint,5,opt,name=client_sn" json:"client_sn,omitempty"`
	Appid            *uint32             `protobuf:"varint,6,opt,name=appid" json:"appid,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *ChatRoomPacket) Reset()                    { *m = ChatRoomPacket{} }
func (m *ChatRoomPacket) String() string            { return proto.CompactTextString(m) }
func (*ChatRoomPacket) ProtoMessage()               {}
func (*ChatRoomPacket) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{38} }

func (m *ChatRoomPacket) GetRoomid() []byte {
	if m != nil {
		return m.Roomid
	}
	return nil
}

func (m *ChatRoomPacket) GetToServerData() *ChatRoomUpToServer {
	if m != nil {
		return m.ToServerData
	}
	return nil
}

func (m *ChatRoomPacket) GetToUserData() *ChatRoomDownToUser {
	if m != nil {
		return m.ToUserData
	}
	return nil
}

func (m *ChatRoomPacket) GetUuid() string {
	if m != nil && m.Uuid != nil {
		return *m.Uuid
	}
	return ""
}

func (m *ChatRoomPacket) GetClientSn() uint64 {
	if m != nil && m.ClientSn != nil {
		return *m.ClientSn
	}
	return 0
}

func (m *ChatRoomPacket) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func init() {
	proto.RegisterType((*CRPair)(nil), "pb.CRPair")
	proto.RegisterType((*CRUser)(nil), "pb.CRUser")
	proto.RegisterType((*ChatRoom)(nil), "pb.ChatRoom")
	proto.RegisterType((*CreateChatRoomRequest)(nil), "pb.CreateChatRoomRequest")
	proto.RegisterType((*CreateChatRoomResponse)(nil), "pb.CreateChatRoomResponse")
	proto.RegisterType((*CreateMultiChatRoomRequest)(nil), "pb.CreateMultiChatRoomRequest")
	proto.RegisterType((*CreateMultiChatRoomResponse)(nil), "pb.CreateMultiChatRoomResponse")
	proto.RegisterType((*GetChatRoomDetailRequest)(nil), "pb.GetChatRoomDetailRequest")
	proto.RegisterType((*GetChatRoomDetailResponse)(nil), "pb.GetChatRoomDetailResponse")
	proto.RegisterType((*ApplyJoinChatRoomRequest)(nil), "pb.ApplyJoinChatRoomRequest")
	proto.RegisterType((*ApplyJoinChatRoomResponse)(nil), "pb.ApplyJoinChatRoomResponse")
	proto.RegisterType((*QuitChatRoomRequest)(nil), "pb.QuitChatRoomRequest")
	proto.RegisterType((*QuitChatRoomResponse)(nil), "pb.QuitChatRoomResponse")
	proto.RegisterType((*QueryAllGameRoomRequest)(nil), "pb.QueryAllGameRoomRequest")
	proto.RegisterType((*QueryAllGameRoomResponse)(nil), "pb.QueryAllGameRoomResponse")
	proto.RegisterType((*QueryChatRoomIDRequest)(nil), "pb.QueryChatRoomIDRequest")
	proto.RegisterType((*QueryChatRoomIDResponse)(nil), "pb.QueryChatRoomIDResponse")
	proto.RegisterType((*UpdateRoomIDRequest)(nil), "pb.UpdateRoomIDRequest")
	proto.RegisterType((*UpdateRoomIDResponse)(nil), "pb.UpdateRoomIDResponse")
	proto.RegisterType((*UpdateChatRoomRequest)(nil), "pb.UpdateChatRoomRequest")
	proto.RegisterType((*UpdateChatRoomResponse)(nil), "pb.UpdateChatRoomResponse")
	proto.RegisterType((*KickChatRoomMemberRequest)(nil), "pb.KickChatRoomMemberRequest")
	proto.RegisterType((*KickChatRoomMemberResponse)(nil), "pb.KickChatRoomMemberResponse")
	proto.RegisterType((*SyncRoomToDBRequest)(nil), "pb.SyncRoomToDBRequest")
	proto.RegisterType((*CreateChatRoomNotify)(nil), "pb.CreateChatRoomNotify")
	proto.RegisterType((*MemberJoinChatRoomNotify)(nil), "pb.MemberJoinChatRoomNotify")
	proto.RegisterType((*MemberQuitChatRoomNotify)(nil), "pb.MemberQuitChatRoomNotify")
	proto.RegisterType((*KickMemberNotify)(nil), "pb.KickMemberNotify")
	proto.RegisterType((*UpdateChatRoomNotify)(nil), "pb.UpdateChatRoomNotify")
	proto.RegisterType((*ChatRoomMessageRequest)(nil), "pb.ChatRoomMessageRequest")
	proto.RegisterType((*ChatRoomMessageResponse)(nil), "pb.ChatRoomMessageResponse")
	proto.RegisterType((*ChatRoomNewMsg)(nil), "pb.ChatRoomNewMsg")
	proto.RegisterType((*ChatRoomErrorMsg)(nil), "pb.ChatRoomErrorMsg")
	proto.RegisterType((*ChatRoomMNotify)(nil), "pb.ChatRoomMNotify")
	proto.RegisterType((*SubscribeRequest)(nil), "pb.SubscribeRequest")
	proto.RegisterType((*SubscribeResponse)(nil), "pb.SubscribeResponse")
	proto.RegisterType((*ChatRoomUpToServer)(nil), "pb.ChatRoomUpToServer")
	proto.RegisterType((*ChatRoomDownToUser)(nil), "pb.ChatRoomDownToUser")
	proto.RegisterType((*ChatRoomPacket)(nil), "pb.ChatRoomPacket")
}

var fileDescriptor0 = []byte{
	// 1690 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xa4, 0x58, 0xd9, 0x6e, 0xdc, 0x54,
	0x18, 0xd6, 0x6c, 0x99, 0xe4, 0x9f, 0x25, 0x89, 0xb3, 0x39, 0x09, 0xb4, 0xc1, 0x02, 0x34, 0x95,
	0xaa, 0x51, 0x15, 0xd2, 0xb4, 0x54, 0xdc, 0xb4, 0x09, 0x2a, 0x05, 0x8a, 0xba, 0xa4, 0xe2, 0x32,
	0xf2, 0x78, 0x4e, 0xa6, 0x26, 0x1e, 0x1f, 0xc7, 0x3e, 0x4e, 0x3b, 0x8f, 0xc0, 0x15, 0x8f, 0xd1,
	0x3b, 0xee, 0x91, 0x78, 0x00, 0x1e, 0x80, 0x2b, 0x9e, 0x86, 0xff, 0x2c, 0x1e, 0x1f, 0x6f, 0xe9,
	0x20, 0xae, 0xda, 0xb1, 0xff, 0xef, 0x5f, 0xbf, 0x7f, 0x71, 0xa0, 0xef, 0xbc, 0xb5, 0x59, 0x48,
	0xe9, 0x74, 0x18, 0x84, 0x94, 0x51, 0xa3, 0x1e, 0x8c, 0xac, 0xcf, 0x61, 0xe9, 0xe4, 0xd5, 0x0b,
	0xdb, 0x0d, 0x8d, 0x0e, 0x34, 0x2e, 0xc9, 0xcc, 0xac, 0x1d, 0xd4, 0x07, 0x2b, 0x46, 0x0f, 0x5a,
	0xd7, 0xb6, 0x17, 0x13, 0xb3, 0x7e, 0x50, 0x1b, 0x74, 0xad, 0xdf, 0x6a, 0x5c, 0xec, 0x4d, 0x44,
	0x42, 0xa3, 0x0f, 0x4b, 0x31, 0xfe, 0xeb, 0x8e, 0x51, 0x12, 0x5f, 0x19, 0x5d, 0x68, 0xfa, 0xf6,
	0x54, 0x0a, 0xae, 0x18, 0x9f, 0x41, 0x2f, 0x88, 0x47, 0x9e, 0xeb, 0x44, 0x84, 0x31, 0xd7, 0x9f,
	0x98, 0x8d, 0x83, 0xc6, 0xa0, 0x73, 0x08, 0xc3, 0x60, 0x34, 0x54, 0x76, 0x2c, 0xe8, 0x07, 0xa1,
	0x7b, 0x6d, 0x33, 0x92, 0xc8, 0x34, 0x0b, 0x32, 0x68, 0x24, 0x62, 0x36, 0x8b, 0x23, 0xb3, 0x85,
	0x6a, 0x5b, 0xc6, 0x1a, 0x2c, 0x73, 0xa3, 0x63, 0x9b, 0xd9, 0xe6, 0x92, 0xf0, 0xe8, 0x43, 0x1d,
	0x96, 0x4f, 0x30, 0x9c, 0x57, 0x18, 0x0e, 0x17, 0xe7, 0x61, 0x09, 0x9f, 0xea, 0xe8, 0xd3, 0x3e,
	0xb4, 0x9d, 0x90, 0xa0, 0x85, 0x50, 0xb8, 0x35, 0xd7, 0x2d, 0x02, 0x48, 0x1c, 0x6e, 0x08, 0x87,
	0x57, 0xa1, 0x7d, 0x4d, 0xc2, 0xc8, 0xa5, 0x3e, 0xba, 0x51, 0x1b, 0x34, 0xb9, 0xa9, 0xa9, 0xfd,
	0x7e, 0x1a, 0x4d, 0x50, 0x5b, 0x4b, 0x3c, 0xd9, 0x82, 0xde, 0x94, 0x4c, 0x1d, 0x1a, 0xfb, 0xcc,
	0x73, 0xa7, 0x2e, 0x13, 0x1e, 0x08, 0x41, 0x6e, 0x94, 0xcd, 0x02, 0x62, 0xb6, 0x85, 0xae, 0x5b,
	0x00, 0x98, 0xd8, 0x80, 0x84, 0xcc, 0x25, 0x91, 0xb9, 0x5c, 0x88, 0x0a, 0xdd, 0x42, 0x45, 0x23,
	0x34, 0x67, 0xae, 0xe8, 0x2f, 0x85, 0x5b, 0xeb, 0xb0, 0x32, 0xf2, 0x6c, 0xe7, 0xd2, 0x73, 0x23,
	0x66, 0x02, 0xbe, 0xee, 0xf2, 0xb0, 0x26, 0xe8, 0x29, 0x3a, 0xd2, 0x11, 0xfa, 0x6f, 0x43, 0x87,
	0x91, 0x69, 0x90, 0xe8, 0xe8, 0x16, 0x74, 0x6c, 0x40, 0x27, 0xb0, 0x43, 0xe6, 0xab, 0x4c, 0xf5,
	0x44, 0xa6, 0xfe, 0xac, 0xc1, 0xd6, 0x89, 0xc8, 0x46, 0x92, 0xaf, 0x57, 0xe4, 0x2a, 0x26, 0x11,
	0xd3, 0xf4, 0xd7, 0x84, 0x7e, 0x15, 0x91, 0x56, 0xce, 0x42, 0xe8, 0x8d, 0x42, 0xe8, 0x4d, 0x21,
	0xa8, 0x85, 0xd6, 0x2a, 0xb8, 0xa5, 0x95, 0x63, 0xa9, 0x50, 0x8e, 0x6c, 0xd2, 0xda, 0xf9, 0xa4,
	0x59, 0x47, 0xb0, 0x9d, 0xf7, 0x3e, 0x0a, 0xa8, 0x1f, 0x11, 0x63, 0x0f, 0x9a, 0xdc, 0x0b, 0xe1,
	0x7c, 0xe7, 0xb0, 0x2b, 0x30, 0x4a, 0xc6, 0x72, 0x60, 0x4f, 0xa2, 0x9e, 0xc7, 0x1e, 0x73, 0xf3,
	0x81, 0x0f, 0xa0, 0xc5, 0x91, 0x11, 0x42, 0xb9, 0xb9, 0x5d, 0x01, 0x2d, 0x4d, 0xd1, 0x4d, 0x4c,
	0xb2, 0x7e, 0x86, 0xfd, 0x52, 0x23, 0xca, 0xbf, 0xfd, 0xac, 0x95, 0x8c, 0x83, 0x37, 0x2b, 0x7e,
	0x06, 0xe6, 0x53, 0xc2, 0x12, 0xd9, 0x53, 0xc2, 0x6c, 0xd7, 0xd3, 0x8a, 0x96, 0xe1, 0x3a, 0x76,
	0xaa, 0xeb, 0x8f, 0xc9, 0x7b, 0xa1, 0xa6, 0xc5, 0x5f, 0xd3, 0x8b, 0x0b, 0xec, 0x2c, 0x51, 0xaa,
	0x96, 0xf5, 0x00, 0x76, 0x4b, 0x54, 0x2d, 0x90, 0xc1, 0x5f, 0x6b, 0x60, 0x3e, 0x0e, 0x02, 0x6f,
	0xf6, 0x3d, 0x75, 0xfd, 0x12, 0xe6, 0x64, 0x9c, 0x48, 0x14, 0xd5, 0x8b, 0x8a, 0x38, 0x29, 0xe5,
	0xc0, 0x38, 0x17, 0x7c, 0x69, 0x14, 0x1a, 0xba, 0x29, 0xe6, 0xc8, 0x1e, 0x74, 0x7c, 0x7a, 0xce,
	0x1f, 0x8a, 0x0e, 0xe0, 0xad, 0xb7, 0xfc, 0xa8, 0x75, 0x61, 0x7b, 0x11, 0xb1, 0x5e, 0xc0, 0x6e,
	0x89, 0x2b, 0x1f, 0x0f, 0xc2, 0xd8, 0x81, 0x95, 0x20, 0xf6, 0xbc, 0x73, 0x8f, 0xa2, 0xca, 0xba,
	0x50, 0xd9, 0x64, 0x61, 0x4c, 0xac, 0xc7, 0xb0, 0xf1, 0x32, 0x76, 0xd9, 0xff, 0x88, 0xcb, 0x3a,
	0x84, 0xcd, 0xac, 0x8a, 0x05, 0x92, 0xba, 0x0b, 0x3b, 0x2f, 0x63, 0x12, 0xce, 0x1e, 0x7b, 0xde,
	0x53, 0xec, 0x32, 0xcd, 0x34, 0x16, 0xca, 0x2c, 0xbe, 0x9a, 0x33, 0xa9, 0x3d, 0xb5, 0x03, 0x91,
	0x97, 0x5a, 0xa1, 0x41, 0x06, 0xb0, 0x2d, 0x80, 0x89, 0x91, 0x67, 0xa7, 0x65, 0xfd, 0x8d, 0x43,
	0xdd, 0xfa, 0x5a, 0x59, 0xd7, 0x25, 0x95, 0x05, 0x3d, 0xf0, 0x5a, 0x66, 0xf4, 0x88, 0x41, 0x60,
	0xdd, 0x87, 0x8d, 0x37, 0x01, 0x56, 0x8b, 0xdc, 0x68, 0x41, 0x53, 0x53, 0xe7, 0xf9, 0xb3, 0xb6,
	0x61, 0x33, 0x0b, 0x93, 0xe6, 0xac, 0x13, 0xd8, 0x92, 0xcf, 0x17, 0x2f, 0x40, 0xbd, 0x90, 0x4c,
	0x9c, 0x0c, 0x79, 0x25, 0x0b, 0x94, 0x60, 0x0c, 0xbb, 0x3f, 0xb8, 0xce, 0x65, 0xf2, 0xfb, 0xb9,
	0x98, 0x5a, 0x55, 0xe6, 0xb5, 0xb1, 0x56, 0x2f, 0x8c, 0xb5, 0xc4, 0x4a, 0xa3, 0xc4, 0xca, 0x43,
	0xd8, 0x2b, 0xb3, 0xb2, 0x80, 0x7f, 0x5f, 0xc0, 0xc6, 0xeb, 0x99, 0xef, 0xf0, 0xff, 0x9f, 0xd1,
	0xd3, 0x27, 0x15, 0x9e, 0x71, 0xf6, 0x65, 0x27, 0xd6, 0x4f, 0x94, 0xb9, 0x17, 0x33, 0x4d, 0x75,
	0x31, 0x61, 0xc7, 0x60, 0x4a, 0x47, 0xf4, 0x3e, 0xfa, 0x2f, 0x38, 0x9d, 0xef, 0x0b, 0xe0, 0xbe,
	0x83, 0x35, 0x9e, 0x04, 0x89, 0xfd, 0xb8, 0xbc, 0x61, 0x42, 0x93, 0xf7, 0x7f, 0xc9, 0x40, 0xfc,
	0x31, 0xe1, 0xd1, 0xe2, 0xd6, 0x6f, 0xd0, 0xf6, 0xa1, 0x81, 0x3b, 0x65, 0x5e, 0x99, 0x28, 0xb2,
	0x27, 0x24, 0x49, 0xf3, 0x1e, 0x1e, 0x1e, 0x04, 0xc7, 0x69, 0xa8, 0x6a, 0xa3, 0xd7, 0x3b, 0x47,
	0x6e, 0x7e, 0x3a, 0xe0, 0x99, 0xa0, 0x86, 0x5a, 0x1d, 0x87, 0x9a, 0x01, 0x80, 0x0f, 0x1c, 0xea,
	0x33, 0xe2, 0x33, 0x35, 0xd6, 0x76, 0x60, 0xd5, 0xf1, 0x5c, 0xfc, 0x8d, 0x8b, 0x19, 0x3b, 0x85,
	0xcf, 0xfb, 0x96, 0x78, 0x81, 0x63, 0x51, 0xbe, 0x70, 0x6c, 0xe7, 0x2d, 0x91, 0x57, 0x8d, 0x31,
	0x84, 0xae, 0xdc, 0x0a, 0xbe, 0x88, 0x4f, 0xdc, 0x15, 0x9d, 0x43, 0xb3, 0xb8, 0x9f, 0x54, 0xfc,
	0xf7, 0x00, 0x7e, 0xc1, 0x5a, 0x2a, 0xe9, 0x65, 0x21, 0xfd, 0x09, 0x97, 0xae, 0xac, 0x33, 0x22,
	0xae, 0xb0, 0x8a, 0x0a, 0xb1, 0x92, 0x47, 0x94, 0x54, 0x78, 0x00, 0x70, 0x89, 0x55, 0x54, 0x08,
	0x10, 0x88, 0x4d, 0x8e, 0x28, 0xd4, 0x16, 0xbd, 0x8f, 0x45, 0x95, 0x94, 0x6c, 0x27, 0xf5, 0xbe,
	0xb4, 0x7a, 0x07, 0xd0, 0x55, 0xab, 0x7f, 0x26, 0x66, 0x5b, 0xb7, 0x64, 0xb6, 0xed, 0x14, 0x0a,
	0xa5, 0x7a, 0x08, 0xf7, 0x9e, 0x3c, 0xd2, 0x78, 0xa1, 0x9a, 0xd6, 0x1f, 0x35, 0xe8, 0xcf, 0xd5,
	0x93, 0x77, 0xcf, 0xa3, 0x49, 0xc9, 0x2c, 0x49, 0x6a, 0x5b, 0x3c, 0x0a, 0x33, 0xb5, 0xac, 0x55,
	0xd4, 0x12, 0x4b, 0x16, 0x92, 0x49, 0x72, 0x10, 0xa5, 0xa7, 0xe9, 0xfc, 0xc9, 0x92, 0x78, 0x32,
	0xf7, 0x8c, 0x57, 0xaf, 0x27, 0x7e, 0xda, 0xef, 0xf1, 0xe7, 0xb2, 0xf8, 0x89, 0x77, 0x1e, 0x73,
	0xa7, 0xc8, 0x35, 0x7b, 0x1a, 0x88, 0xfc, 0x37, 0xad, 0xa7, 0xb0, 0x96, 0xb8, 0xfe, 0x6d, 0x18,
	0xd2, 0xb0, 0xcc, 0x79, 0x34, 0x23, 0xe9, 0x12, 0xf9, 0x82, 0x7e, 0x4d, 0xae, 0x88, 0x70, 0x69,
	0x87, 0x8e, 0x95, 0xd3, 0xd6, 0x19, 0xac, 0xce, 0xd3, 0xa5, 0x72, 0x8c, 0xd7, 0xae, 0x88, 0xaa,
	0x26, 0x18, 0x8a, 0xbf, 0xc4, 0xca, 0x95, 0x04, 0xce, 0xc5, 0xd3, 0x28, 0xc4, 0xd3, 0x14, 0x5a,
	0x8f, 0x61, 0xed, 0x75, 0x3c, 0x8a, 0x9c, 0xd0, 0x1d, 0x91, 0xaa, 0x41, 0x69, 0x40, 0x23, 0x8a,
	0x47, 0x6a, 0xc5, 0xaa, 0xad, 0xfd, 0x00, 0xd6, 0x35, 0x5c, 0xc9, 0xa2, 0xa9, 0x02, 0xfe, 0xd3,
	0x02, 0x23, 0x89, 0xe3, 0x4d, 0x70, 0x46, 0x5f, 0x93, 0xf0, 0x3a, 0xb9, 0x6e, 0x67, 0x1e, 0xb5,
	0xc7, 0xf3, 0x88, 0x7a, 0xc6, 0x11, 0xac, 0xcb, 0x8e, 0x49, 0xbe, 0x6d, 0x42, 0x72, 0xa5, 0xea,
	0x7b, 0xc3, 0x59, 0xf7, 0x10, 0x8c, 0x09, 0x61, 0x09, 0xc4, 0xf5, 0x2f, 0x28, 0x87, 0x35, 0xd2,
	0x6e, 0xa8, 0x3c, 0xbf, 0x1e, 0xc1, 0xa6, 0xcd, 0x4f, 0x11, 0xde, 0x76, 0xba, 0xc9, 0x66, 0x8a,
	0xad, 0xbc, 0x9a, 0xee, 0xc1, 0x2a, 0xef, 0x3d, 0x1d, 0xd6, 0x12, 0xb0, 0x1d, 0x0e, 0x2b, 0xbb,
	0x47, 0x30, 0x3a, 0xd9, 0x51, 0x3a, 0x66, 0x29, 0x8d, 0xae, 0x7c, 0x89, 0x1e, 0x41, 0x8f, 0x77,
	0xac, 0xdc, 0x5c, 0x1c, 0x21, 0xc7, 0xc8, 0xa7, 0x49, 0xd3, 0x96, 0xef, 0xbe, 0x63, 0x30, 0xae,
	0xf8, 0x75, 0x30, 0xcf, 0xca, 0x98, 0x43, 0xe5, 0x4c, 0xd9, 0x93, 0x0e, 0x96, 0x5e, 0x19, 0x18,
	0x95, 0xf4, 0x51, 0x5e, 0x02, 0x1c, 0xb4, 0x92, 0x46, 0x55, 0x76, 0x35, 0x3c, 0x84, 0x0d, 0x61,
	0xc9, 0xf6, 0x3c, 0x8e, 0x49, 0xe2, 0x92, 0xa3, 0x65, 0x7f, 0x6e, 0xaa, 0x78, 0x24, 0x71, 0x1f,
	0x13, 0xf7, 0xa6, 0x72, 0x1e, 0x70, 0x60, 0x27, 0xf5, 0xb1, 0x62, 0xac, 0x7f, 0x85, 0xc3, 0x56,
	0x5e, 0xdb, 0xe2, 0x20, 0xef, 0x0a, 0xc0, 0xad, 0x94, 0x1f, 0xa5, 0x5f, 0x09, 0x43, 0xe8, 0x45,
	0xb8, 0x89, 0xc5, 0x97, 0x0e, 0x1d, 0x8f, 0xe4, 0xf7, 0x94, 0x0a, 0xab, 0x6c, 0x45, 0xe3, 0xa7,
	0x34, 0x52, 0x99, 0x3b, 0xd4, 0x4f, 0x87, 0x64, 0xbe, 0x73, 0xac, 0xbf, 0xdb, 0x29, 0xb9, 0x4f,
	0xe9, 0x3b, 0xff, 0x8c, 0xce, 0x97, 0x0b, 0x89, 0xd0, 0x0d, 0xd5, 0xa9, 0x39, 0xb2, 0xd7, 0x05,
	0xd9, 0x79, 0xf8, 0x39, 0xb2, 0x47, 0x81, 0xa2, 0xed, 0x5e, 0x19, 0xdb, 0x55, 0xd3, 0x3d, 0x82,
	0x8d, 0x02, 0xdd, 0x11, 0xd8, 0x4c, 0x69, 0x51, 0xfd, 0x8d, 0xf0, 0x0d, 0x6c, 0x95, 0x10, 0x1e,
	0xd1, 0xad, 0x14, 0x5d, 0x7d, 0x9c, 0x1f, 0xc2, 0x5a, 0x96, 0xf2, 0x08, 0x5c, 0x4a, 0xd7, 0x42,
	0xe9, 0x01, 0x8d, 0x51, 0xe6, 0x49, 0x8f, 0xa8, 0x76, 0x1a, 0x65, 0xc5, 0xd5, 0x77, 0x0c, 0x7d,
	0x9d, 0xf6, 0x88, 0x59, 0x4e, 0xeb, 0x7c, 0xc3, 0x35, 0x96, 0xd0, 0x51, 0x27, 0x7e, 0x14, 0x28,
	0x12, 0xef, 0x97, 0x32, 0x3f, 0x8d, 0x2e, 0x4b, 0x7d, 0x84, 0x41, 0x7e, 0xe9, 0xe5, 0x30, 0x38,
	0x40, 0x8a, 0xe4, 0x47, 0x5c, 0x27, 0x1d, 0x20, 0x95, 0xdf, 0x01, 0xe8, 0x69, 0x81, 0xfe, 0x08,
	0xed, 0xa6, 0x9e, 0x56, 0x6d, 0xcb, 0x01, 0x74, 0x7d, 0xf2, 0x0e, 0xd7, 0x92, 0x5a, 0xcd, 0x92,
	0xca, 0x86, 0x0e, 0x51, 0x5b, 0xf3, 0x2e, 0xf4, 0xc5, 0x5a, 0x49, 0x65, 0x35, 0x36, 0x17, 0xd6,
	0xd4, 0x51, 0xb6, 0xb1, 0x56, 0x85, 0xe8, 0xed, 0xca, 0xc6, 0x9a, 0x57, 0x6a, 0x4d, 0x56, 0x49,
	0x3b, 0x5e, 0xd6, 0x16, 0x38, 0x5e, 0xe6, 0x38, 0xed, 0x84, 0x59, 0x5f, 0xe0, 0x84, 0xf9, 0x12,
	0xda, 0xa2, 0x33, 0x31, 0x57, 0x86, 0x10, 0xdf, 0xca, 0xb5, 0xa6, 0xb6, 0x9c, 0x88, 0x1d, 0x51,
	0xdf, 0x1c, 0x8b, 0x85, 0x7f, 0x07, 0x3a, 0x53, 0x1e, 0x80, 0x32, 0xf5, 0x97, 0xfc, 0xf8, 0xda,
	0xc8, 0x24, 0x5a, 0x9a, 0xb0, 0x7e, 0xd7, 0xee, 0x8f, 0x17, 0xb6, 0x73, 0x49, 0x8a, 0x3b, 0x72,
	0x08, 0x7d, 0x46, 0xcf, 0x23, 0xb1, 0xcc, 0xce, 0xd5, 0x1a, 0xe6, 0xce, 0x6c, 0xeb, 0xfa, 0xb4,
	0x7d, 0x77, 0x17, 0xba, 0x4c, 0x7e, 0x11, 0x4b, 0xe9, 0x46, 0x51, 0x5a, 0x1b, 0x20, 0xb8, 0xda,
	0xe3, 0x18, 0x6d, 0xc9, 0xbf, 0xc7, 0xe0, 0x71, 0x20, 0xcf, 0x85, 0x73, 0xbc, 0x17, 0xe4, 0x9f,
	0xb1, 0xf0, 0x0e, 0xc1, 0x46, 0x46, 0x09, 0xde, 0x7f, 0xbd, 0x27, 0xf7, 0xe1, 0x8e, 0x43, 0xa7,
	0xc3, 0x2b, 0xf7, 0x2d, 0xa5, 0x43, 0x7e, 0xe7, 0xd8, 0x0e, 0x1b, 0x3a, 0x1e, 0x8d, 0xc7, 0xf2,
	0xaf, 0x83, 0x0e, 0xf5, 0x86, 0x8a, 0x64, 0xd1, 0x93, 0xf9, 0x9f, 0xda, 0xfe, 0x0d, 0x00, 0x00,
	0xff, 0xff, 0x2f, 0xac, 0x8c, 0xe2, 0x44, 0x14, 0x00, 0x00,
}
